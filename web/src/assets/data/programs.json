{
  "metadata": {
    "total_programs": 101,
    "generated_at": "2025-08-07T14:47:41.312410",
    "description": "MacSnap programs and applications database"
  },
  "programs": {
    "mas_cli": {
      "id": "mas_cli",
      "name": "Mac App Store CLI",
      "description": "Command line interface for the Mac App Store",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "cli",
        "app-store",
        "utilities",
        "essential"
      ],
      "url": "https://github.com/mas-cli/mas",
      "notes": "- Requires being signed into the Mac App Store\n- Allows installation and management of Mac App Store apps via command line\n- Useful for automation and scripting\n- Can list, install, upgrade, and search for apps\n",
      "dependencies": [],
      "install_script": "echo \"Installing mas-cli...\"\nbrew install mas\n",
      "validate_script": "command -v mas &> /dev/null\n",
      "configure_script": "echo \"mas-cli configuration complete\"\nmas version\n",
      "uninstall_script": "echo \"Uninstalling mas-cli...\"\nbrew uninstall mas\n"
    },
    "trackpad_settings": {
      "id": "trackpad_settings",
      "name": "Trackpad Settings",
      "description": "Configure trackpad with tap to click and other improvements",
      "type": "system_config",
      "category": "System Tweaks",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "system-config",
        "trackpad",
        "productivity",
        "input"
      ],
      "url": "https://support.apple.com/en-us/HT204895",
      "notes": "- Enables tap to click for easier trackpad interaction\n- Improves trackpad responsiveness and usability\n- Applies system-wide trackpad preferences\n- No additional software required\n",
      "dependencies": [],
      "install_script": "echo \"This item only configures existing system settings\"\n",
      "validate_script": "# Always return 1 (not configured) so configure script runs\nexit 1\n",
      "configure_script": "echo \"Applying trackpad settings...\"\n\n# Enable tap to click\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true\ndefaults write com.apple.AppleMultitouchTrackpad Clicking -bool true\ndefaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\ndefaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\n\n# Enable three finger drag\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool true\ndefaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool true\n\n# Set tracking speed (1 = slow, 3 = fast)\ndefaults write NSGlobalDomain com.apple.trackpad.scaling -float 2.0\n\necho \"Trackpad settings applied. You may need to restart or log out/in for all changes to take effect.\"\n",
      "uninstall_script": null
    },
    "adguard": {
      "id": "adguard",
      "name": "AdGuard",
      "description": "Advanced ad blocker and privacy protection",
      "type": "mas",
      "category": "Security",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "ad-blocker",
        "privacy",
        "security",
        "tracking-protection",
        "dns"
      ],
      "url": "https://adguard.com/",
      "notes": "- System-wide ad blocking and privacy protection\n- Blocks ads in all browsers and applications\n- Advanced tracking and malware protection\n- Custom DNS filtering and family protection\n- Stealth mode for enhanced privacy\n- Free version available, premium for full features\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing AdGuard...\"\nmas install 1440147259\n",
      "validate_script": "mas list | grep -q \"AdGuard\" || ls /Applications/ | grep -q \"AdGuard.app\"\n",
      "configure_script": "echo \"AdGuard configuration complete\"\necho \"Launch AdGuard and configure protection settings\"\necho \"\"\necho \"Key features:\"\necho \"- System-wide ad blocking (not just browsers)\"\necho \"- Tracking and malware protection\"\necho \"- DNS filtering and custom filters\"\necho \"- Stealth mode for enhanced privacy\"\necho \"- Parental controls and safe browsing\"\necho \"- Statistics and detailed logging\"\necho \"\"\necho \"Setup steps:\"\necho \"1. Grant necessary permissions in System Preferences\"\necho \"2. Configure ad blocking filters\"\necho \"3. Set up DNS protection\"\necho \"4. Enable stealth mode if desired\"\necho \"5. Customize blocking rules\"\necho \"\"\necho \"Note: AdGuard offers a free version with basic features\"\necho \"Upgrade to premium for advanced protection and features\"\necho \"You may need to configure browser extensions for optimal protection\"\n",
      "uninstall_script": "echo \"Uninstalling AdGuard...\"\nmas uninstall 1440147259\n"
    },
    "mise": {
      "id": "mise",
      "name": "Mise",
      "description": "Polyglot runtime manager (formerly rtx) that supports multiple programming languages and tools with fast performance",
      "type": "brew",
      "category": "Development",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "version-manager",
        "runtime",
        "development",
        "polyglot",
        "tools"
      ],
      "url": "https://mise.jdx.dev/",
      "notes": "- Polyglot runtime manager for multiple languages\n- Supports Node.js, Python, Ruby, Java, Go, and many more\n- Fast performance with Rust implementation\n- Compatible with .tool-versions files\n- Plugin ecosystem for extending functionality\n- \n- 📌 After installation:\n- 1. Add to shell profile: eval \"$(mise activate zsh)\"\n- 2. Install a runtime: mise install node@latest\n- 3. Set global version: mise global node@latest\n- 4. Create .tool-versions file in project: mise local node@18\n",
      "dependencies": [],
      "install_script": "echo \"Installing Mise...\"\nbrew install mise\n",
      "validate_script": "command -v mise &> /dev/null\n",
      "configure_script": "echo \"Mise configuration complete\"\necho \"Add to shell profile: eval \\\"\\$(mise activate zsh)\\\"\"\necho \"Install a runtime: mise install node@latest\"\necho \"Set global version: mise global node@latest\"\necho \"Create .tool-versions file in projects: mise local node@18\"\n",
      "uninstall_script": "echo \"Uninstalling Mise...\"\nbrew uninstall mise\n"
    },
    "jan-ai": {
      "id": "jan-ai",
      "name": "Jan AI",
      "description": "Open-source alternative to ChatGPT",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "ai",
        "chatgpt",
        "local",
        "privacy",
        "assistant"
      ],
      "url": "https://jan.ai/",
      "notes": "- Local AI assistant that runs completely offline\n- Open-source alternative to ChatGPT\n- Privacy-focused with no data sent to external servers\n- Support for multiple AI models\n- Extensible architecture with plugins\n- Cross-platform compatibility\n",
      "dependencies": [],
      "install_script": "echo \"Installing Jan AI...\"\nbrew install --cask jan\n",
      "validate_script": "brew list --cask | grep -q \"jan\" || ls /Applications/ | grep -q \"Jan.app\"\n",
      "configure_script": "echo \"Jan AI configuration complete\"\necho \"Launch Jan AI to start using your local AI assistant\"\necho \"\"\necho \"Key features:\"\necho \"- 100% offline AI assistant\"\necho \"- No data sent to external servers\"\necho \"- Support for multiple AI models\"\necho \"- Extensible with plugins\"\necho \"- Conversation history stored locally\"\necho \"- Customizable AI behavior\"\necho \"\"\necho \"Getting started:\"\necho \"1. Download and install AI models\"\necho \"2. Start conversations with your local AI\"\necho \"3. Explore available plugins and extensions\"\necho \"4. Customize AI behavior and responses\"\necho \"\"\necho \"Popular models to try:\"\necho \"- Llama 2 (general purpose)\"\necho \"- Mistral (fast and efficient)\"\necho \"- Code Llama (programming assistance)\"\necho \"\"\necho \"Note: Models require significant disk space\"\necho \"Ensure you have adequate storage before downloading\"\n",
      "uninstall_script": "echo \"Uninstalling Jan AI...\"\nbrew uninstall --cask jan\necho \"Note: Downloaded AI models and conversation history will remain\"\n"
    },
    "nginx": {
      "id": "nginx",
      "name": "Nginx",
      "description": "HTTP(S) server and reverse proxy, and IMAP/POP3 proxy server",
      "type": "brew",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "web-server",
        "reverse-proxy",
        "http",
        "development",
        "server"
      ],
      "url": "https://nginx.org/",
      "notes": "- High-performance web server, reverse proxy, and load balancer\n- Lightweight and efficient for serving static content\n- Excellent for development and production environments\n- Supports SSL/TLS, HTTP/2, and WebSocket protocols\n- Highly configurable with modular architecture\n",
      "dependencies": [],
      "install_script": "echo \"Installing Nginx...\"\nbrew install nginx\n",
      "validate_script": "command -v nginx &> /dev/null && brew services list | grep -q nginx\n",
      "configure_script": "echo \"Configuring Nginx...\"\n\n# Create basic configuration\nCONFIG_DIR=\"/usr/local/etc/nginx\"\n\necho \"Nginx configuration:\"\necho \"- Config directory: $CONFIG_DIR\"\necho \"- Main config file: $CONFIG_DIR/nginx.conf\"\necho \"- Document root: /usr/local/var/www\"\necho \"\"\necho \"Basic commands:\"\necho \"  brew services start nginx     # Start Nginx service\"\necho \"  brew services stop nginx      # Stop Nginx service\"\necho \"  brew services restart nginx   # Restart Nginx service\"\necho \"  nginx -t                      # Test configuration\"\necho \"  nginx -s reload               # Reload configuration\"\necho \"\"\necho \"Default server runs on: http://localhost:8080\"\necho \"To start Nginx now: brew services start nginx\"\n",
      "uninstall_script": "echo \"Stopping and uninstalling Nginx...\"\nbrew services stop nginx\nbrew uninstall nginx\n"
    },
    "ollama": {
      "id": "ollama",
      "name": "Ollama",
      "description": "Run large language models locally",
      "type": "brew",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "ai",
        "llm",
        "local",
        "machine-learning",
        "development"
      ],
      "url": "https://ollama.ai/",
      "notes": "- Command-line tool for running LLMs locally\n- Supports popular models like Llama 2, Mistral, CodeLlama, and more\n- GPU acceleration support for faster inference\n- Simple API for integration with applications\n- Privacy-focused: everything runs on your machine\n- Easy model management and switching\n",
      "dependencies": [],
      "install_script": "echo \"Installing Ollama...\"\nbrew install ollama\n",
      "validate_script": "command -v ollama &> /dev/null\n",
      "configure_script": "echo \"Configuring Ollama...\"\n\necho \"Ollama configuration complete\"\necho \"Popular models to try:\"\necho \"  ollama pull llama2           # Llama 2 7B\"\necho \"  ollama pull mistral          # Mistral 7B\"\necho \"  ollama pull codellama        # Code Llama for programming\"\necho \"  ollama pull phi              # Microsoft Phi (smaller model)\"\necho \"\"\necho \"Basic usage:\"\necho \"  ollama run llama2            # Run interactive chat\"\necho \"  ollama list                  # List installed models\"\necho \"  ollama serve                 # Start API server (localhost:11434)\"\necho \"\"\necho \"API usage:\"\necho \"  curl -d '{\\\"model\\\":\\\"llama2\\\",\\\"prompt\\\":\\\"Hello\\\"}' http://localhost:11434/api/generate\"\necho \"\"\necho \"Note: Models are large (several GB). Ensure you have enough disk space.\"\n",
      "uninstall_script": "echo \"Uninstalling Ollama...\"\nbrew uninstall ollama\necho \"Note: Downloaded models in ~/.ollama will remain\"\n"
    },
    "proto": {
      "id": "proto",
      "name": "Proto",
      "description": "Pluggable multi-language version manager with first-class support for toolchains and development environments",
      "type": "brew",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "version-manager",
        "toolchain",
        "development",
        "multi-language",
        "plugins"
      ],
      "url": "https://moonrepo.dev/proto",
      "notes": "- Pluggable multi-language version manager\n- First-class support for toolchains and development environments\n- Plugin system for extending language support\n- Fast performance with Rust implementation\n- Supports Node.js, Python, Go, Rust, and more\n- \n- 📌 After installation:\n- 1. Add to shell profile: eval \"$(proto activate zsh)\"\n- 2. Install a tool: proto install node\n- 3. Set global version: proto global node latest\n- 4. Create .prototools file in project: proto local node 18\n",
      "dependencies": [],
      "install_script": "echo \"Installing Proto...\"\nbrew install proto\n",
      "validate_script": "command -v proto &> /dev/null\n",
      "configure_script": "echo \"Configuring Proto...\"\nproto setup\n\n\necho \"Installing Node.js...\"\nproto install node\nproto global node lts/iron\nproto pin node lts/iron\n\necho \"Installing npm...\"\nproto install npm\nproto global npm latest\n\necho \"Installing pnpm...\"\nproto install pnpm\nproto global pnpm latest\n\necho \"Installing Yarn...\"\nproto install yarn\nproto global yarn latest\n\necho \"Installing uv...\"\nproto install uv\nproto global uv latest\n\necho \"Installing Python...\"\nproto install python\nproto global python latest\n\n\necho \"Add to shell profile: eval \\\"\\$(proto activate zsh)\\\"\"\necho \"Install a tool: proto install node\"\necho \"Set global version: proto global node latest\"\necho \"Create .prototools file in projects: proto local node 18\"\n",
      "uninstall_script": "echo \"Uninstalling Proto...\"\nbrew uninstall proto\n"
    },
    "boltai": {
      "id": "boltai",
      "name": "BoltAI",
      "description": "Beautiful & powerful native ChatGPT app for Mac with AI commands and inline assistance",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "ai-assistant",
        "chatgpt",
        "productivity",
        "development",
        "writing"
      ],
      "url": "https://boltai.com/",
      "notes": "Native macOS AI client that integrates ChatGPT directly into your workflow:\n\n🚀 Key Features:\n- Native macOS app with high performance\n- AI Commands: Access AI from any text field with shortcuts\n- AI Inline: Generate content directly within any app\n- Custom AI Assistants with tailored behaviors\n- Built-in prompt library for common tasks\n- Support for multiple AI models (OpenAI, Anthropic, etc.)\n- Secure API key storage in Apple Keychain\n- Privacy-focused with automatic data redaction\n\n📋 Requirements:\n- macOS 12.0 or later\n- OpenAI API key (separate from ChatGPT Plus)\n- Internet connection for AI queries\n\n💰 Licensing:\n- Perpetual license with one year of free updates\n- 30-day money-back guarantee\n- Team licenses available\n\n🔧 Perfect for developers, content creators, and professionals\n",
      "dependencies": [],
      "install_script": "echo \"Installing BoltAI...\"\nbrew install --cask boltai\n",
      "validate_script": "brew list --cask | grep -q \"boltai\" || ls /Applications/ | grep -q \"BoltAI.app\"\n",
      "configure_script": "echo \"BoltAI installation complete!\"\necho \"\"\necho \"🚀 Next steps:\"\necho \"1. Launch BoltAI from Applications\"\necho \"2. Set up your OpenAI API key (get it from https://platform.openai.com/api-keys)\"\necho \"3. Configure your preferences and shortcuts\"\necho \"4. Explore the built-in AI Commands and Prompt Library\"\necho \"\"\necho \"💡 Tips:\"\necho \"- Use AI Commands with keyboard shortcuts for quick access\"\necho \"- Create custom AI Assistants for specific tasks\"\necho \"- Enable AI Inline for seamless text generation\"\necho \"- Check the documentation at https://boltai.com/resources\"\n",
      "uninstall_script": "echo \"Uninstalling BoltAI...\"\nbrew uninstall --cask boltai\necho \"Note: Your settings and API key will remain in macOS Keychain\"\n"
    },
    "sourcetree": {
      "id": "sourcetree",
      "name": "SourceTree",
      "description": "Git GUI client",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "git",
        "gui",
        "version-control",
        "atlassian",
        "development"
      ],
      "url": "https://www.sourcetreeapp.com/",
      "notes": "- Visual Git client with advanced branching and merging\n- Intuitive interface for Git repository management\n- Support for Git and Mercurial repositories\n- Advanced diff viewer and merge conflict resolution\n- Integration with Bitbucket, GitHub, and GitLab\n- Free to use with Atlassian account\n",
      "dependencies": [
        "git"
      ],
      "install_script": "echo \"Installing SourceTree...\"\nbrew install --cask sourcetree\n",
      "validate_script": "brew list --cask | grep -q \"sourcetree\" || ls /Applications/ | grep -q \"Sourcetree.app\"\n",
      "configure_script": "echo \"SourceTree configuration complete\"\necho \"Launch SourceTree and complete the initial setup\"\necho \"\"\necho \"Setup steps:\"\necho \"1. Create or sign in to your Atlassian account\"\necho \"2. Configure Git settings and SSH keys\"\necho \"3. Add your existing repositories\"\necho \"4. Connect to remote services (GitHub, Bitbucket, GitLab)\"\necho \"\"\necho \"Key features:\"\necho \"- Visual Git workflow with drag-and-drop\"\necho \"- Advanced branching and merging tools\"\necho \"- Built-in diff viewer and merge conflict resolution\"\necho \"- Git-flow and Git LFS support\"\necho \"- Integration with popular Git hosting services\"\necho \"- Repository bookmarks and organization\"\necho \"\"\necho \"Getting started:\"\necho \"- Clone repositories from remote services\"\necho \"- Use visual branching for Git-flow workflows\"\necho \"- Review changes with advanced diff tools\"\necho \"- Manage commits, pushes, and pulls graphically\"\n",
      "uninstall_script": "echo \"Uninstalling SourceTree...\"\nbrew uninstall --cask sourcetree\n"
    },
    "lm-studio": {
      "id": "lm-studio",
      "name": "LM Studio",
      "description": "Local AI model runner",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "ai",
        "llm",
        "local",
        "machine-learning",
        "gui"
      ],
      "url": "https://lmstudio.ai/",
      "notes": "- Run large language models locally with a user-friendly GUI\n- Support for popular models like Llama, Mistral, and CodeLlama\n- Easy model downloading and management\n- Local API server for application integration\n- GPU acceleration support\n- Privacy-focused: everything runs on your machine\n",
      "dependencies": [],
      "install_script": "echo \"Installing LM Studio...\"\nbrew install --cask lm-studio\n",
      "validate_script": "brew list --cask | grep -q \"lm-studio\" || ls /Applications/ | grep -q \"LM Studio.app\"\n",
      "configure_script": "echo \"LM Studio configuration complete\"\necho \"Launch LM Studio to start using local AI models\"\necho \"\"\necho \"Getting started:\"\necho \"1. Browse and download models from the built-in model repository\"\necho \"2. Chat with models using the intuitive interface\"\necho \"3. Start local server for API access (OpenAI-compatible)\"\necho \"4. Configure GPU acceleration if available\"\necho \"\"\necho \"Popular models to try:\"\necho \"- Llama 2 7B (general purpose)\"\necho \"- Mistral 7B (fast and efficient)\"\necho \"- Code Llama (programming assistance)\"\necho \"- Phi-2 (smaller model for quick responses)\"\necho \"\"\necho \"API server: Start local server in LM Studio for programmatic access\"\necho \"Compatible with OpenAI API format for easy integration\"\n",
      "uninstall_script": "echo \"Uninstalling LM Studio...\"\nbrew uninstall --cask lm-studio\necho \"Note: Downloaded models will remain in ~/Library/Application Support/LMStudio\"\n"
    },
    "vscode": {
      "id": "vscode",
      "name": "Visual Studio Code",
      "description": "Free source-code editor made by Microsoft",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "editor",
        "development",
        "microsoft",
        "free",
        "extensions"
      ],
      "url": "https://code.visualstudio.com/",
      "notes": "- Free and open-source code editor with extensive extension ecosystem\n- Built-in Git integration and debugging support\n- IntelliSense code completion and syntax highlighting\n- Integrated terminal and command palette\n- Supports multiple programming languages\n",
      "dependencies": [],
      "install_script": "echo \"Installing Visual Studio Code...\"\nbrew install --cask visual-studio-code\n",
      "validate_script": "brew list --cask | grep -q \"visual-studio-code\" || ls /Applications/ | grep -q \"Visual Studio Code.app\"\n",
      "configure_script": "echo \"Visual Studio Code configuration complete\"\n# Install the 'code' command in PATH\nif command -v code &> /dev/null; then\n  echo \"VS Code 'code' command is available\"\nelse\n  echo \"You may need to install 'code' command from VS Code Command Palette: Shell Command: Install 'code' command in PATH\"\nfi\n",
      "uninstall_script": "echo \"Uninstalling Visual Studio Code...\"\nbrew uninstall --cask visual-studio-code\n"
    },
    "cursor": {
      "id": "cursor",
      "name": "Cursor",
      "description": "AI-powered code editor built for pair programming with AI, featuring advanced autocomplete, chat, and agent capabilities",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "editor",
        "ai",
        "development",
        "programming",
        "premium"
      ],
      "url": "https://www.cursor.com/",
      "notes": "- AI-native code editor with advanced capabilities\n- Free hobby plan with 2000 completions and 50 premium requests\n- Pro plan ($20/month) with unlimited completions and fast AI requests\n- Built-in AI chat, code generation, and debugging\n- Multi-file editing and context-aware suggestions\n- Background processing and intelligent code analysis\n",
      "dependencies": [],
      "install_script": "echo \"Installing Cursor...\"\nbrew install --cask cursor\n",
      "validate_script": "brew list --cask | grep -q \"cursor\" || ls /Applications/ | grep -q \"Cursor.app\"\n",
      "configure_script": "echo \"Cursor configuration complete\"\necho \"Launch Cursor and sign up for an account to access AI features\"\necho \"Note: Free plan available with premium features requiring subscription\"\n",
      "uninstall_script": "echo \"Uninstalling Cursor...\"\nbrew uninstall --cask cursor\n"
    },
    "amazon-q": {
      "id": "amazon-q",
      "name": "Amazon Q",
      "description": "AWS AI-powered coding assistant",
      "type": "direct_download_dmg",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "ai",
        "coding-assistant",
        "aws",
        "cloud",
        "development"
      ],
      "url": "https://aws.amazon.com/q/",
      "notes": "- AI-powered coding assistant by AWS\n- Code generation and explanation capabilities\n- Integration with AWS services and documentation\n- Real-time code suggestions and completions\n- Support for multiple programming languages\n- Free tier available with AWS account\n",
      "dependencies": [],
      "install_script": "echo \"Installing Amazon Q...\"\necho \"Note: Amazon Q is available through AWS Console or IDE extensions\"\necho \"\"\necho \"Installation options:\"\necho \"1. VS Code Extension: Search 'Amazon Q' in VS Code Extensions\"\necho \"2. JetBrains IDEs: Install Amazon Q plugin\"\necho \"3. AWS Console: Access through AWS Management Console\"\necho \"4. AWS CLI integration available\"\necho \"\"\necho \"For VS Code extension:\"\nif command -v code &> /dev/null; then\n  echo \"Installing Amazon Q extension for VS Code...\"\n  code --install-extension amazonwebservices.amazon-q-vscode\nelse\n  echo \"VS Code not found. Install VS Code first or install extension manually\"\nfi\necho \"\"\necho \"Amazon Q installation initiated\"\n",
      "validate_script": "# Check if VS Code extension is installed\nif command -v code &> /dev/null; then\n  if code --list-extensions | grep -q \"amazonwebservices.amazon-q-vscode\"; then\n    echo \"Amazon Q VS Code extension is installed\"\n    exit 0\n  fi\nfi\n\n# Check if user has AWS CLI configured (indicates potential Q usage)\nif command -v aws &> /dev/null && aws configure list &> /dev/null; then\n  echo \"AWS CLI configured - Amazon Q can be accessed via AWS Console\"\n  exit 0\nfi\n\n# If neither found, consider not installed\nexit 1\n",
      "configure_script": "echo \"Amazon Q configuration complete\"\necho \"\"\necho \"Getting started with Amazon Q:\"\necho \"1. Sign in to your AWS account\"\necho \"2. Navigate to Amazon Q in the AWS Console\"\necho \"3. Or use the installed IDE extension\"\necho \"\"\necho \"Key features:\"\necho \"- AI-powered code generation and completion\"\necho \"- Code explanation and documentation\"\necho \"- AWS service integration and guidance\"\necho \"- Multi-language support (Python, Java, JavaScript, etc.)\"\necho \"- Security and best practices recommendations\"\necho \"- Real-time coding assistance\"\necho \"\"\necho \"IDE Integration:\"\necho \"- VS Code: Amazon Q extension installed\"\necho \"- JetBrains IDEs: Install Amazon Q plugin\"\necho \"- AWS Cloud9: Built-in integration\"\necho \"\"\necho \"Usage tips:\"\necho \"- Ask questions about AWS services\"\necho \"- Request code generation for specific tasks\"\necho \"- Get explanations for complex code\"\necho \"- Optimize code for AWS best practices\"\necho \"\"\necho \"Note: Requires AWS account for full functionality\"\necho \"Free tier includes basic features\"\n",
      "uninstall_script": "echo \"Uninstalling Amazon Q...\"\nif command -v code &> /dev/null; then\n  echo \"Removing Amazon Q VS Code extension...\"\n  code --uninstall-extension amazonwebservices.amazon-q-vscode\nfi\necho \"Amazon Q extensions removed\"\necho \"Note: AWS Console access remains available\"\n"
    },
    "warp": {
      "id": "warp",
      "name": "Warp",
      "description": "Modern, Rust-based terminal with AI integration, blocks-based navigation, and intelligent autocompletion",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "terminal",
        "productivity",
        "ai",
        "development"
      ],
      "url": "https://www.warp.dev/",
      "notes": "- Modern terminal reimagined for the 21st century\n- AI-powered command generation and debugging\n- Blocks-based navigation for easier command history\n- IDE-like editing with mouse cursor support\n- Built-in completions for 400+ CLI tools\n- Collaborative features and workflow sharing\n- Free for individuals, paid plans for teams\n",
      "dependencies": [],
      "install_script": "echo \"Installing Warp...\"\nbrew install --cask warp\n",
      "validate_script": "brew list --cask | grep -q \"warp\" || ls /Applications/ | grep -q \"Warp.app\"\n",
      "configure_script": "echo \"Warp configuration complete\"\necho \"Launch Warp and sign up for an account to access AI features\"\necho \"Consider setting Warp as your default terminal in System Preferences\"\n",
      "uninstall_script": "echo \"Uninstalling Warp...\"\nbrew uninstall --cask warp\n"
    },
    "docker": {
      "id": "docker",
      "name": "Docker Desktop",
      "description": "Containerization platform for developers",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "containerization",
        "development",
        "devops",
        "virtualization"
      ],
      "url": "https://www.docker.com/products/docker-desktop/",
      "notes": "- Containerization platform for building and sharing applications\n- Includes Docker Engine, CLI, and Kubernetes support\n- Free for personal use, paid plans for business use\n- Requires system admin privileges for installation\n- May need manual startup and permissions after installation\n",
      "dependencies": [],
      "install_script": "echo \"Installing Docker Desktop...\"\nbrew install --cask docker\n",
      "validate_script": "brew list --cask | grep -q \"docker\" || ls /Applications/ | grep -q \"Docker.app\"\n",
      "configure_script": "echo \"Docker Desktop configuration complete\"\necho \"Note: You may need to start Docker Desktop manually and grant permissions\"\n",
      "uninstall_script": "echo \"Uninstalling Docker Desktop...\"\nbrew uninstall --cask docker\n"
    },
    "pycharm-ce": {
      "id": "pycharm-ce",
      "name": "PyCharm Community Edition",
      "description": "Python IDE for professional developers",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "python",
        "ide",
        "development",
        "jetbrains",
        "debugging"
      ],
      "url": "https://www.jetbrains.com/pycharm/",
      "notes": "- Full-featured Python IDE with debugging, testing, and version control\n- Intelligent code completion and error detection\n- Integrated debugging and testing tools\n- Git integration and version control\n- Plugin ecosystem for extended functionality\n- Free Community Edition with core features\n",
      "dependencies": [],
      "install_script": "echo \"Installing PyCharm Community Edition...\"\nbrew install --cask pycharm-ce\n",
      "validate_script": "brew list --cask | grep -q \"pycharm-ce\" || ls /Applications/ | grep -q \"PyCharm CE.app\"\n",
      "configure_script": "echo \"PyCharm Community Edition configuration complete\"\necho \"Launch PyCharm and complete the initial setup\"\necho \"Key features:\"\necho \"- Intelligent Python code completion\"\necho \"- Integrated debugger and test runner\"\necho \"- Git and other VCS integration\"\necho \"- Code refactoring and inspection tools\"\necho \"- Virtual environment support\"\necho \"- Django and web development support\"\necho \"\"\necho \"Recommended setup:\"\necho \"1. Configure Python interpreter\"\necho \"2. Set up virtual environments\"\necho \"3. Install useful plugins from the marketplace\"\necho \"4. Configure code style and formatting\"\n",
      "uninstall_script": "echo \"Uninstalling PyCharm Community Edition...\"\nbrew uninstall --cask pycharm-ce\n"
    },
    "iterm2": {
      "id": "iterm2",
      "name": "iTerm2",
      "description": "A replacement for Terminal and the successor to iTerm.",
      "type": "brew_cask",
      "category": "Development",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [],
      "url": null,
      "notes": null,
      "dependencies": [],
      "install_script": "echo \"Installing iTerm2...\"\nbrew install --cask iterm2\n",
      "validate_script": "brew list --cask | grep -q \"^iterm2$\"\n",
      "configure_script": "echo \"Configuring iTerm2 preferences...\"\n# ITEM_CONFIG_DIR will point to ./configs/\ncp \"${ITEM_CONFIG_DIR}/com.googlecode.iterm2.plist\" \"${HOME}/Library/Preferences/com.googlecode.iterm2.plist\"\n",
      "uninstall_script": "echo \"Uninstalling iTerm2...\"\nbrew uninstall --cask iterm2\n"
    },
    "oh-my-posh": {
      "id": "oh-my-posh",
      "name": "Oh My Posh",
      "description": "Cross-platform prompt theme engine for any shell with beautiful themes and customization options",
      "type": "brew",
      "category": "Terminal",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "shell",
        "prompt",
        "themes",
        "customization",
        "terminal"
      ],
      "url": "https://ohmyposh.dev/",
      "notes": "- Cross-platform prompt theme engine for any shell\n- Hundreds of built-in themes available\n- Supports PowerShell, Bash, Zsh, Fish, and more\n- Git integration and status display\n- Customizable segments for different information\n- \n- 📌 After installation:\n- 1. Install a theme from: https://ohmyposh.dev/docs/themes\n- 2. Add to shell config (~/.zshrc): eval \"$(oh-my-posh init zsh --config ~/.poshthemes/jandedobbeleer.omp.json)\"\n- 3. Install a Nerd Font for best appearance\n- 4. Restart terminal to see changes\n",
      "dependencies": [],
      "install_script": "echo \"Installing Oh My Posh...\"\nbrew install oh-my-posh\n",
      "validate_script": "command -v oh-my-posh &> /dev/null\n",
      "configure_script": "echo \"Oh My Posh configuration complete\"\necho \"Visit https://ohmyposh.dev/docs/themes to choose a theme\"\necho \"Add to your shell config: eval \\\"\\$(oh-my-posh init zsh --config ~/.poshthemes/jandedobbeleer.omp.json)\\\"\"\necho \"Install a Nerd Font for best appearance\"\n",
      "uninstall_script": "echo \"Uninstalling Oh My Posh...\"\nbrew uninstall oh-my-posh\n"
    },
    "yt-dlp": {
      "id": "yt-dlp",
      "name": "yt-dlp",
      "description": "Feature-rich command-line audio/video downloader",
      "type": "brew",
      "category": "Terminal",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "downloader",
        "youtube",
        "video",
        "audio",
        "command-line"
      ],
      "url": "https://github.com/yt-dlp/yt-dlp",
      "notes": "- YouTube downloader with enhanced features and active development\n- Supports hundreds of video sites beyond YouTube\n- High-quality audio and video extraction\n- Batch downloading and playlist support\n- Extensive format and quality options\n- Recommended Chrome extension: The Stream Detector\n- Chrome extension URL: https://chromewebstore.google.com/detail/the-stream-detector/iakkmkmhhckcmoiibcfjnooibphlobak\n",
      "dependencies": [],
      "install_script": "echo \"Installing yt-dlp...\"\nbrew install yt-dlp\n",
      "validate_script": "command -v yt-dlp &> /dev/null\n",
      "configure_script": "echo \"yt-dlp configuration complete\"\necho \"Usage examples:\"\necho \"  yt-dlp 'https://www.youtube.com/watch?v=VIDEO_ID'  # Download video\"\necho \"  yt-dlp -x --audio-format mp3 'VIDEO_URL'           # Extract audio as MP3\"\necho \"  yt-dlp -f 'best[height<=720]' 'VIDEO_URL'          # Download specific quality\"\necho \"  yt-dlp --list-formats 'VIDEO_URL'                  # List available formats\"\necho \"\"\necho \"Browser integration:\"\necho \"Install The Stream Detector extension for easy downloading:\"\necho \"https://chromewebstore.google.com/detail/the-stream-detector/iakkmkmhhckcmoiibcfjnooibphlobak\"\necho \"\"\necho \"Common options:\"\necho \"  --extract-audio        Extract audio only\"\necho \"  --audio-format mp3     Convert audio to MP3\"\necho \"  --write-description    Save video description\"\necho \"  --write-thumbnail      Download video thumbnail\"\n",
      "uninstall_script": "echo \"Uninstalling yt-dlp...\"\nbrew uninstall yt-dlp\n"
    },
    "eza": {
      "id": "eza",
      "name": "Eza",
      "description": "Modern replacement for ls with colors, icons, and improved formatting for better file listing experience",
      "type": "brew",
      "category": "Terminal",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "file-listing",
        "terminal",
        "utilities",
        "colors",
        "icons"
      ],
      "url": "https://github.com/eza-community/eza",
      "notes": "- Modern replacement for ls with enhanced features\n- Color-coded file types and permissions\n- Icons for different file types (with Nerd Fonts)\n- Git integration showing file status\n- Tree view and detailed information display\n- \n- 📌 After installation:\n- 1. Add aliases to ~/.zshrc:\n-    alias ls='eza'\n-    alias ll='eza -l'\n-    alias la='eza -la'\n-    alias tree='eza --tree'\n- 2. Install a Nerd Font for best icon display\n- 3. Restart terminal to use new aliases\n",
      "dependencies": [],
      "install_script": "echo \"Installing Eza...\"\nbrew install eza\n",
      "validate_script": "command -v eza &> /dev/null\n",
      "configure_script": "echo \"Eza configuration complete\"\necho \"Add aliases to ~/.zshrc:\"\necho \"  alias ls='eza'\"\necho \"  alias ll='eza -l'\"\necho \"  alias la='eza -la'\"\necho \"  alias tree='eza --tree'\"\necho \"Install a Nerd Font for best icon display\"\n",
      "uninstall_script": "echo \"Uninstalling Eza...\"\nbrew uninstall eza\n"
    },
    "antidote": {
      "id": "antidote",
      "name": "Antidote",
      "description": "Fast and modern Zsh plugin manager with lazy loading and improved performance over traditional managers",
      "type": "brew",
      "category": "Terminal",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "zsh",
        "plugin-manager",
        "shell",
        "performance",
        "terminal"
      ],
      "url": "https://getantidote.github.io/",
      "notes": "- Fast and modern Zsh plugin manager\n- Lazy loading and improved performance\n- Compatible with Oh My Zsh plugins\n- Static file generation for faster shell startup\n- Bundle management and automatic updates\n- \n- 📌 After installation:\n- 1. Initialize in ~/.zshrc: source $(brew --prefix)/share/antidote/antidote.zsh\n- 2. Create ~/.zsh_plugins.txt with desired plugins\n- 3. Run: antidote bundle < ~/.zsh_plugins.txt > ~/.zsh_plugins.zsh\n- 4. Source plugins in ~/.zshrc: source ~/.zsh_plugins.zsh\n",
      "dependencies": [],
      "install_script": "echo \"Installing Antidote...\"\nbrew install antidote\n",
      "validate_script": "type antidote &> /dev/null\n",
      "configure_script": "echo \"Antidote configuration complete\"\necho \"Initialize in ~/.zshrc: source \\$(brew --prefix)/share/antidote/antidote.zsh\"\necho \"Create ~/.zsh_plugins.txt with your desired plugins\"\necho \"Generate bundles: antidote bundle < ~/.zsh_plugins.txt > ~/.zsh_plugins.zsh\"\n",
      "uninstall_script": "echo \"Uninstalling Antidote...\"\nbrew uninstall antidote\n"
    },
    "fzf": {
      "id": "fzf",
      "name": "FZF",
      "description": "Command-line fuzzy finder for interactive filtering of files, command history, and processes",
      "type": "brew",
      "category": "Terminal",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "fuzzy-finder",
        "terminal",
        "search",
        "productivity",
        "utilities"
      ],
      "url": "https://github.com/junegunn/fzf",
      "notes": "- Command-line fuzzy finder for interactive filtering\n- Integrates with shell history, file search, and processes\n- Highly customizable with various key bindings\n- Works with any list: files, command history, processes, etc.\n- Supports preview window for files and commands\n- \n- 📌 After installation:\n- 1. Run: $(brew --prefix)/opt/fzf/install\n- 2. Enable key bindings:\n-    • Ctrl-T: Search files and directories\n-    • Ctrl-R: Search command history\n-    • Alt-C: Change directory\n- 3. Restart terminal to use new key bindings\n",
      "dependencies": [],
      "install_script": "echo \"Installing FZF...\"\nbrew install fzf\n",
      "validate_script": "command -v fzf &> /dev/null\n",
      "configure_script": "echo \"FZF configuration complete\"\necho \"Run: \\$(brew --prefix)/opt/fzf/install\"\necho \"This enables key bindings:\"\necho \"  • Ctrl-T: Search files and directories\"\necho \"  • Ctrl-R: Search command history\"\necho \"  • Alt-C: Change directory\"\necho \"Restart terminal to use new key bindings\"\n",
      "uninstall_script": "echo \"Uninstalling FZF...\"\nbrew uninstall fzf\n"
    },
    "orka-desktop": {
      "id": "orka-desktop",
      "name": "Orka Desktop",
      "description": "MacStadium's cloud Mac management and access tool",
      "type": "direct_download_dmg",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "cloud",
        "mac",
        "remote",
        "macstadium",
        "virtualization",
        "enterprise"
      ],
      "url": "https://www.macstadium.com/orka",
      "notes": "- MacStadium's Orka cloud Mac management desktop client\n- Remote access and management of cloud-based Macs\n- Enterprise-grade macOS virtualization platform\n- Development and testing on scalable Mac infrastructure\n- Integration with CI/CD pipelines and development workflows\n- Requires MacStadium Orka subscription service\n",
      "dependencies": [],
      "install_script": "echo \"Installing Orka Desktop...\"\necho \"Note: Orka Desktop is for MacStadium cloud service customers\"\necho \"\"\necho \"Prerequisites:\"\necho \"- Active MacStadium Orka subscription\"\necho \"- Account credentials and access keys\"\necho \"- Network access to Orka endpoints\"\necho \"\"\necho \"Installation options:\"\necho \"1. Download from MacStadium customer portal\"\necho \"2. Access via MacStadium documentation\"\necho \"3. Contact MacStadium support for access\"\necho \"\"\necho \"Manual installation steps:\"\necho \"1. Log into MacStadium customer portal\"\necho \"2. Download Orka Desktop for macOS\"\necho \"3. Open the downloaded DMG file\"\necho \"4. Move Orka Desktop to Applications folder\"\necho \"5. Launch and configure with your Orka credentials\"\necho \"\"\necho \"Note: Requires active MacStadium Orka subscription\"\n",
      "validate_script": "# Check for Orka Desktop in Applications\nif ls /Applications/ | grep -i \"orka.*desktop\" >/dev/null 2>&1; then\n  exit 0\nfi\n\n# Check for variations\nif ls /Applications/ | grep -i \"orka\" >/dev/null 2>&1; then\n  exit 0\nfi\n\necho \"Orka Desktop not detected\"\nexit 1\n",
      "configure_script": "echo \"Orka Desktop configuration complete\"\necho \"Launch Orka Desktop to manage your cloud Macs\"\necho \"\"\necho \"Key features:\"\necho \"- Remote access to cloud-based Mac instances\"\necho \"- Scalable macOS development and testing environment\"\necho \"- Integration with CI/CD pipelines\"\necho \"- Enterprise-grade security and compliance\"\necho \"- Resource management and monitoring\"\necho \"- Multi-user collaboration capabilities\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Orka Desktop from Applications\"\necho \"2. Enter your MacStadium Orka credentials\"\necho \"3. Connect to your Orka cluster or endpoints\"\necho \"4. Browse and manage available Mac instances\"\necho \"5. Launch remote sessions or deploy workloads\"\necho \"\"\necho \"Primary use cases:\"\necho \"- iOS and macOS app development at scale\"\necho \"- Automated testing and CI/CD pipelines\"\necho \"- Cross-platform development workflows\"\necho \"- Performance testing and benchmarking\"\necho \"- Enterprise Mac deployment and management\"\necho \"\"\necho \"Orka platform benefits:\"\necho \"- On-demand Mac compute resources\"\necho \"- No hardware maintenance or management\"\necho \"- Scalable from single instances to hundreds\"\necho \"- High-performance Apple Silicon and Intel Macs\"\necho \"- Global datacenter availability\"\necho \"\"\necho \"Enterprise features:\"\necho \"- Role-based access control and permissions\"\necho \"- API integration for automation\"\necho \"- Monitoring and logging capabilities\"\necho \"- SLA-backed service reliability\"\necho \"- 24/7 technical support\"\necho \"\"\necho \"Development workflows:\"\necho \"- Xcode and iOS development in the cloud\"\necho \"- Automated build and test pipelines\"\necho \"- Multi-version macOS testing environments\"\necho \"- Performance profiling and optimization\"\necho \"- App Store submission and validation\"\necho \"\"\necho \"Getting the most from Orka:\"\necho \"- Set up automated deployment pipelines\"\necho \"- Use resource templates for consistent environments\"\necho \"- Monitor usage and optimize resource allocation\"\necho \"- Integrate with existing development tools\"\necho \"- Leverage API for custom automation\"\necho \"\"\necho \"Support and resources:\"\necho \"- MacStadium documentation and guides\"\necho \"- Technical support team assistance\"\necho \"- Community forums and best practices\"\necho \"- Regular platform updates and features\"\necho \"\"\necho \"Note: This is an enterprise cloud service\"\necho \"Contact MacStadium for pricing and subscription details\"\n",
      "uninstall_script": "echo \"Uninstalling Orka Desktop...\"\nfind /Applications -name \"*Orka*\" -delete 2>/dev/null || true\n"
    },
    "virtualbox": {
      "id": "virtualbox",
      "name": "VirtualBox",
      "description": "Open source virtualization platform",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "virtualization",
        "vm",
        "virtual-machine",
        "oracle",
        "development",
        "testing"
      ],
      "url": "https://www.virtualbox.org/",
      "notes": "- Open-source virtualization platform by Oracle\n- Run multiple operating systems simultaneously\n- Development, testing, and compatibility environments\n- Support for various guest operating systems\n- Snapshot and rollback capabilities\n- Free for personal and educational use\n",
      "dependencies": [],
      "install_script": "echo \"Installing VirtualBox...\"\nbrew install --cask virtualbox\necho \"\"\necho \"Note: VirtualBox may require system permissions and kernel extensions\"\necho \"You may need to allow VirtualBox in System Preferences > Security & Privacy\"\n",
      "validate_script": "brew list --cask | grep -q \"virtualbox\" || ls /Applications/ | grep -q \"VirtualBox.app\"\n",
      "configure_script": "echo \"VirtualBox configuration complete\"\necho \"Launch VirtualBox to start creating virtual machines\"\necho \"\"\necho \"Key features:\"\necho \"- Support for Windows, Linux, macOS, and other OSes\"\necho \"- Hardware virtualization and performance optimization\"\necho \"- Snapshot and rollback functionality\"\necho \"- Shared folders between host and guest\"\necho \"- Network configuration and port forwarding\"\necho \"- Guest Additions for enhanced integration\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch VirtualBox from Applications\"\necho \"2. Allow kernel extension in System Preferences if prompted\"\necho \"3. Create a new virtual machine\"\necho \"4. Install guest operating system from ISO\"\necho \"5. Install Guest Additions for better integration\"\necho \"\"\necho \"System requirements:\"\necho \"- At least 4GB RAM (8GB+ recommended)\"\necho \"- Sufficient disk space for virtual machines\"\necho \"- Intel VT-x or AMD-V virtualization support\"\necho \"- macOS system permissions for kernel extensions\"\necho \"\"\necho \"Common use cases:\"\necho \"- Testing software on different operating systems\"\necho \"- Development environments and sandboxing\"\necho \"- Running legacy applications\"\necho \"- Educational and learning purposes\"\necho \"- Malware analysis and security research\"\necho \"\"\necho \"Guest Additions benefits:\"\necho \"- Better graphics and resolution support\"\necho \"- Seamless mouse and keyboard integration\"\necho \"- Shared clipboard functionality\"\necho \"- Drag and drop file transfer\"\necho \"- Shared folders between host and guest\"\necho \"\"\necho \"Performance tips:\"\necho \"- Allocate appropriate RAM (not more than 50% of host)\"\necho \"- Enable hardware acceleration when available\"\necho \"- Use SSD storage for better VM performance\"\necho \"- Install Guest Additions in each VM\"\necho \"\"\necho \"Note: Some features require Intel-based Macs\"\necho \"Apple Silicon Macs have limited guest OS support\"\n",
      "uninstall_script": "echo \"Uninstalling VirtualBox...\"\nbrew uninstall --cask virtualbox\necho \"Note: You may need to remove kernel extensions manually\"\n"
    },
    "betterzip": {
      "id": "betterzip",
      "name": "BetterZip",
      "description": "Archive utility with preview",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "archive",
        "zip",
        "compression",
        "utilities",
        "file-management"
      ],
      "url": "https://macitbetter.com/",
      "notes": "- Archive utility that allows previewing and partial extraction\n- Supports many formats: ZIP, RAR, 7-ZIP, TAR, GZIP, etc.\n- Preview files without extracting the entire archive\n- Password protection and encryption support\n- Batch operations and scripting capabilities\n- 30-day free trial, then requires license purchase\n",
      "dependencies": [],
      "install_script": "echo \"Installing BetterZip...\"\nbrew install --cask betterzip\n",
      "validate_script": "brew list --cask | grep -q \"betterzip\" || ls /Applications/ | grep -q \"BetterZip.app\"\n",
      "configure_script": "echo \"BetterZip configuration complete\"\necho \"Launch BetterZip to start using advanced archive features\"\necho \"Key features:\"\necho \"- Preview archive contents without extraction\"\necho \"- Extract specific files without full extraction\"\necho \"- Create archives with various formats\"\necho \"- Password protection and encryption\"\necho \"- Integration with Finder and other apps\"\necho \"\"\necho \"Note: BetterZip offers a 30-day free trial\"\necho \"Purchase license at: https://macitbetter.com/\"\n",
      "uninstall_script": "echo \"Uninstalling BetterZip...\"\nbrew uninstall --cask betterzip\n"
    },
    "masscode": {
      "id": "masscode",
      "name": "MassCode",
      "description": "Code snippet manager for developers",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "code-snippets",
        "developer-tools",
        "organization",
        "productivity",
        "programming",
        "notes"
      ],
      "url": "https://masscode.io/",
      "notes": "- Modern code snippet manager for developers\n- Organize and search code snippets efficiently\n- Support for multiple programming languages\n- Tags, folders, and favorites organization\n- Syntax highlighting and search functionality\n- Free and open source\n",
      "dependencies": [],
      "install_script": "echo \"Installing MassCode...\"\nbrew install --cask masscode\n",
      "validate_script": "brew list --cask | grep -q \"masscode\" || ls /Applications/ | grep -q \"massCode.app\"\n",
      "configure_script": "echo \"MassCode configuration complete\"\necho \"Launch MassCode to start organizing your code snippets\"\necho \"\"\necho \"Key features:\"\necho \"- Modern and intuitive code snippet manager\"\necho \"- Support for 170+ programming languages\"\necho \"- Powerful search and filtering capabilities\"\necho \"- Organization with folders, tags, and favorites\"\necho \"- Syntax highlighting and formatting\"\necho \"- Dark and light theme support\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch MassCode from Applications\"\necho \"2. Create your first snippet or import existing ones\"\necho \"3. Organize snippets with folders and tags\"\necho \"4. Use the search to quickly find code\"\necho \"5. Copy snippets to clipboard for use\"\necho \"\"\necho \"Organization features:\"\necho \"- Hierarchical folder structure\"\necho \"- Tag-based categorization\"\necho \"- Favorites for quick access\"\necho \"- Recent snippets history\"\necho \"- Custom snippet descriptions\"\necho \"\"\necho \"Search and filtering:\"\necho \"- Full-text search across all snippets\"\necho \"- Filter by language, tags, or folders\"\necho \"- Recently used snippets\"\necho \"- Advanced search queries\"\necho \"\"\necho \"Supported languages:\"\necho \"- JavaScript, Python, Java, C++, C#\"\necho \"- HTML, CSS, PHP, Ruby, Go\"\necho \"- Swift, Kotlin, Rust, TypeScript\"\necho \"- SQL, Bash, PowerShell, and 150+ more\"\necho \"\"\necho \"Productivity benefits:\"\necho \"- Never lose useful code snippets again\"\necho \"- Quick access to commonly used code\"\necho \"- Share snippets with team members\"\necho \"- Build personal knowledge base\"\necho \"- Reduce code duplication and errors\"\necho \"\"\necho \"Import/export:\"\necho \"- Import from other snippet managers\"\necho \"- Export snippets for backup or sharing\"\necho \"- JSON format for data portability\"\necho \"\"\necho \"Use cases:\"\necho \"- Store commonly used functions and utilities\"\necho \"- Save configuration snippets and templates\"\necho \"- Organize learning examples and tutorials\"\necho \"- Build reusable code library\"\necho \"- Quick reference for syntax and APIs\"\n",
      "uninstall_script": "echo \"Uninstalling MassCode...\"\nbrew uninstall --cask masscode\n"
    },
    "dbngin": {
      "id": "dbngin",
      "name": "DBngin",
      "description": "Simple database management tool",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "database",
        "mysql",
        "postgresql",
        "redis",
        "development",
        "management"
      ],
      "url": "https://dbngin.com/",
      "notes": "- Simple database server management for developers\n- Support for MySQL, PostgreSQL, and Redis\n- Easy start/stop database services\n- Version management and switching\n- Minimal configuration required\n- Free for personal use with pro features available\n",
      "dependencies": [],
      "install_script": "echo \"Installing DBngin...\"\nbrew install --cask dbngin\n",
      "validate_script": "brew list --cask | grep -q \"dbngin\" || ls /Applications/ | grep -q \"DBngin.app\"\n",
      "configure_script": "echo \"DBngin configuration complete\"\necho \"Launch DBngin to start managing your databases\"\necho \"\"\necho \"Key features:\"\necho \"- Simple start/stop for database services\"\necho \"- Support for MySQL, PostgreSQL, and Redis\"\necho \"- Multiple database versions side by side\"\necho \"- Automatic service management\"\necho \"- Connection string generation\"\necho \"- Minimal system resource usage\"\necho \"\"\necho \"Supported databases:\"\necho \"- MySQL (multiple versions)\"\necho \"- PostgreSQL (multiple versions)\"\necho \"- Redis (key-value store)\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch DBngin from Applications\"\necho \"2. Install desired database versions\"\necho \"3. Start/stop services with simple toggles\"\necho \"4. Use generated connection strings in your apps\"\necho \"5. Switch between versions as needed\"\necho \"\"\necho \"Benefits for developers:\"\necho \"- No complex database setup or configuration\"\necho \"- Quick switching between database versions\"\necho \"- Clean uninstallation of database services\"\necho \"- Resource-efficient background operation\"\necho \"- Integration with development workflows\"\necho \"\"\necho \"Database management:\"\necho \"- Install/uninstall database versions\"\necho \"- Start/stop services individually\"\necho \"- View connection details and ports\"\necho \"- Access database logs and configuration\"\necho \"- Import/export database dumps\"\necho \"\"\necho \"Use cases:\"\necho \"- Local development database servers\"\necho \"- Testing applications with different DB versions\"\necho \"- Learning database administration\"\necho \"- Prototyping and experimentation\"\necho \"\"\necho \"DBngin will appear in your menu bar for quick access\"\n",
      "uninstall_script": "echo \"Uninstalling DBngin...\"\nbrew uninstall --cask dbngin\necho \"Note: Database files may remain and need manual cleanup\"\n"
    },
    "tableplus": {
      "id": "tableplus",
      "name": "TablePlus",
      "description": "Database management GUI",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "database",
        "sql",
        "gui",
        "development",
        "management"
      ],
      "url": "https://tableplus.com/",
      "notes": "- Modern database client with intuitive interface\n- Supports MySQL, PostgreSQL, SQLite, Redis, and many more\n- Advanced query editor with syntax highlighting\n- Data visualization and export capabilities\n- SSH tunnel and SSL connection support\n- Free tier with limitations, paid license for full features\n",
      "dependencies": [],
      "install_script": "echo \"Installing TablePlus...\"\nbrew install --cask tableplus\n",
      "validate_script": "brew list --cask | grep -q \"tableplus\" || ls /Applications/ | grep -q \"TablePlus.app\"\n",
      "configure_script": "echo \"TablePlus configuration complete\"\necho \"Launch TablePlus to start managing databases\"\necho \"\"\necho \"Supported databases:\"\necho \"- MySQL / MariaDB\"\necho \"- PostgreSQL\"\necho \"- SQLite\"\necho \"- Microsoft SQL Server\"\necho \"- Redis\"\necho \"- MongoDB\"\necho \"- Amazon Redshift\"\necho \"- And many more...\"\necho \"\"\necho \"Key features:\"\necho \"- Intuitive database browser\"\necho \"- Advanced SQL editor with autocomplete\"\necho \"- Data export in multiple formats\"\necho \"- SSH tunneling and SSL connections\"\necho \"- Query history and favorites\"\necho \"- Multiple tabs and connections\"\necho \"\"\necho \"Note: TablePlus offers a free tier with limitations\"\necho \"Purchase license for unlimited connections and advanced features\"\n",
      "uninstall_script": "echo \"Uninstalling TablePlus...\"\nbrew uninstall --cask tableplus\n"
    },
    "aldente": {
      "id": "aldente",
      "name": "AlDente",
      "description": "macOS battery charge limiter for battery health",
      "type": "direct_download_dmg",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "battery",
        "health",
        "charging",
        "macbook",
        "optimization",
        "longevity"
      ],
      "url": "https://apphousekitchen.com/",
      "notes": "- Battery charge limiter to extend MacBook battery lifespan\n- Prevents overcharging and battery degradation\n- Customizable charge limits and thresholds\n- Menu bar integration with battery status\n- Free version with optional Pro features\n- Essential tool for MacBook longevity\n",
      "dependencies": [],
      "install_script": "echo \"Installing AlDente...\"\necho \"Note: AlDente helps extend MacBook battery lifespan\"\necho \"\"\necho \"Installation options:\"\necho \"1. Download from https://apphousekitchen.com/\"\necho \"2. Free version available with basic features\"\necho \"3. Pro version offers advanced battery management\"\necho \"\"\necho \"Manual installation steps:\"\necho \"1. Visit https://apphousekitchen.com/\"\necho \"2. Download AlDente for macOS\"\necho \"3. Open the downloaded DMG file\"\necho \"4. Move AlDente to Applications folder\"\necho \"5. Launch and configure battery limits\"\necho \"\"\n# Check if available via Homebrew Cask\nif command -v brew >/dev/null 2>&1; then\n  echo \"Checking Homebrew for AlDente...\"\n  if brew search aldente >/dev/null 2>&1; then\n    echo \"Attempting to install via Homebrew...\"\n    brew install --cask aldente\n  else\n    echo \"AlDente not found in Homebrew. Manual installation required.\"\n  fi\nfi\n",
      "validate_script": "# Check for AlDente in Applications\nif ls /Applications/ | grep -i \"aldente\" >/dev/null 2>&1; then\n  exit 0\nfi\n\n# Check if AlDente is running (appears in menu bar)\nif pgrep -f \"AlDente\" >/dev/null 2>&1; then\n  exit 0\nfi\n\necho \"AlDente not detected\"\nexit 1\n",
      "configure_script": "echo \"AlDente configuration complete\"\necho \"Launch AlDente to optimize your MacBook battery health\"\necho \"\"\necho \"Key features:\"\necho \"- Battery charge limiting to prevent overcharging\"\necho \"- Customizable charge thresholds (20-100%)\"\necho \"- Menu bar battery status and controls\"\necho \"- Battery health monitoring and statistics\"\necho \"- Charging schedule and automation\"\necho \"- Temperature monitoring and alerts\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch AlDente from Applications\"\necho \"2. Set your desired charge limit (recommended: 80%)\"\necho \"3. Configure charging preferences and schedules\"\necho \"4. Monitor battery health over time\"\necho \"5. Adjust settings based on usage patterns\"\necho \"\"\necho \"Battery health benefits:\"\necho \"- Prevents battery degradation from overcharging\"\necho \"- Extends overall battery lifespan significantly\"\necho \"- Reduces heat generation during charging\"\necho \"- Maintains optimal battery chemistry\"\necho \"- Saves money on battery replacements\"\necho \"\"\necho \"Recommended settings:\"\necho \"- Charge limit: 80% for daily use\"\necho \"- Allow charging to 100% before travel\"\necho \"- Enable temperature monitoring\"\necho \"- Use scheduled charging for overnight\"\necho \"- Monitor battery cycle count regularly\"\necho \"\"\necho \"Pro features (paid version):\"\necho \"- Advanced scheduling and automation\"\necho \"- Detailed battery statistics and history\"\necho \"- Custom charging profiles\"\necho \"- Heat protection and thermal management\"\necho \"- Calibration and maintenance tools\"\necho \"\"\necho \"Usage scenarios:\"\necho \"- Daily work: 80% limit for desk work\"\necho \"- Travel preparation: 100% charge before trips\"\necho \"- Long-term storage: 50% charge level\"\necho \"- Gaming/intensive use: Monitor temperature\"\necho \"\"\necho \"Battery science:\"\necho \"- Lithium-ion batteries last longer at 20-80% charge\"\necho \"- Heat and 100% charge accelerate degradation\"\necho \"- Frequent partial charges are better than full cycles\"\necho \"- Battery longevity improves significantly with limits\"\necho \"\"\necho \"AlDente will appear in your menu bar\"\necho \"Your MacBook battery will thank you for using AlDente!\"\n",
      "uninstall_script": "echo \"Uninstalling AlDente...\"\nfind /Applications -name \"*AlDente*\" -delete 2>/dev/null || true\n# Kill running AlDente processes\npkill -f \"AlDente\" 2>/dev/null || true\n"
    },
    "marktext": {
      "id": "marktext",
      "name": "MarkText",
      "description": "Simple and elegant Markdown editor",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "markdown",
        "editor",
        "writing",
        "documentation",
        "notes",
        "wysiwyg"
      ],
      "url": "https://marktext.app/",
      "notes": "- Simple and elegant Markdown editor with live preview\n- Real-time preview as you type\n- Support for tables, math expressions, and diagrams\n- Clean and distraction-free interface\n- Export to various formats including HTML and PDF\n- Free and open source\n",
      "dependencies": [],
      "install_script": "echo \"Installing MarkText...\"\nbrew install --cask mark-text\n",
      "validate_script": "brew list --cask | grep -q \"mark-text\" || ls /Applications/ | grep -q \"MarkText.app\"\n",
      "configure_script": "echo \"MarkText configuration complete\"\necho \"Launch MarkText to start writing beautiful Markdown\"\necho \"\"\necho \"Key features:\"\necho \"- WYSIWYG Markdown editor with real-time preview\"\necho \"- Support for tables, math expressions, and flowcharts\"\necho \"- Clean, distraction-free writing interface\"\necho \"- Syntax highlighting and auto-completion\"\necho \"- Export to HTML, PDF, and other formats\"\necho \"- Theme customization and preferences\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch MarkText from Applications\"\necho \"2. Create a new document or open existing Markdown files\"\necho \"3. Start writing with live preview\"\necho \"4. Use toolbar for quick formatting\"\necho \"5. Export your documents when ready\"\necho \"\"\necho \"Markdown features supported:\"\necho \"- Headers, bold, italic, and basic formatting\"\necho \"- Tables with advanced editing capabilities\"\necho \"- Code blocks with syntax highlighting\"\necho \"- Math expressions using KaTeX\"\necho \"- Mermaid diagrams and flowcharts\"\necho \"- Task lists and checkboxes\"\necho \"\"\necho \"Writing experience:\"\necho \"- Real-time preview as you type\"\necho \"- Focus mode for distraction-free writing\"\necho \"- Typewriter mode with centered cursor\"\necho \"- Source code mode for raw Markdown editing\"\necho \"- Live table editing with visual feedback\"\necho \"\"\necho \"Export options:\"\necho \"- HTML with custom CSS styling\"\necho \"- PDF with print-ready formatting\"\necho \"- Raw Markdown for sharing\"\necho \"- Copy as HTML or styled text\"\necho \"\"\necho \"Customization:\"\necho \"- Dark and light theme options\"\necho \"- Font family and size preferences\"\necho \"- Editor behavior settings\"\necho \"- Custom CSS for exports\"\necho \"\"\necho \"Use cases:\"\necho \"- Documentation writing\"\necho \"- Blog post creation\"\necho \"- README files for projects\"\necho \"- Note-taking and journaling\"\necho \"- Technical writing with math\"\n",
      "uninstall_script": "echo \"Uninstalling MarkText...\"\nbrew uninstall --cask mark-text\n"
    },
    "omnidisksweeper": {
      "id": "omnidisksweeper",
      "name": "OmniDiskSweeper",
      "description": "Disk space analyzer to find and delete large files",
      "type": "mas",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "disk-space",
        "cleanup",
        "analyzer",
        "storage",
        "files",
        "omni"
      ],
      "url": "https://www.omnigroup.com/more",
      "notes": "- Visual disk space analyzer and cleanup tool\n- Hierarchical view of disk usage by directory\n- Quick identification of space-consuming files\n- Safe file deletion with preview capabilities\n- Simple and intuitive interface\n- Free utility from The Omni Group\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing OmniDiskSweeper...\"\necho \"Note: OmniDiskSweeper is available on the Mac App Store\"\necho \"App Store ID: 416442386\"\necho \"\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Installing OmniDiskSweeper via mas...\"\n  mas install 416442386\nelse\n  echo \"mas-cli not found. Please install OmniDiskSweeper manually from the App Store\"\n  echo \"Search for 'OmniDiskSweeper' by The Omni Group\"\nfi\n",
      "validate_script": "# Check if installed via App Store\nif ls /Applications/ | grep -q \"OmniDiskSweeper.app\"; then\n  exit 0\nfi\n\n# Check in system Applications\nif ls \"/Applications/OmniDiskSweeper.app\" &> /dev/null; then\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"OmniDiskSweeper configuration complete\"\necho \"Launch OmniDiskSweeper to analyze your disk usage\"\necho \"\"\necho \"Key features:\"\necho \"- Visual representation of disk space usage\"\necho \"- Hierarchical directory view with size information\"\necho \"- Quick identification of large files and folders\"\necho \"- Safe file deletion with preview\"\necho \"- Multiple volume support\"\necho \"- Real-time size calculations\"\necho \"\"\necho \"How to use:\"\necho \"1. Launch OmniDiskSweeper\"\necho \"2. Select the drive or folder to analyze\"\necho \"3. Wait for the analysis to complete\"\necho \"4. Browse through directories sorted by size\"\necho \"5. Identify large, unnecessary files\"\necho \"6. Delete files safely using the built-in delete function\"\necho \"\"\necho \"Tips for effective cleanup:\"\necho \"- Start with the largest directories first\"\necho \"- Look for old downloads, cache files, and logs\"\necho \"- Check for duplicate or forgotten files\"\necho \"- Be careful with system directories\"\necho \"- Preview files before deletion\"\necho \"\"\necho \"Common large file locations:\"\necho \"- ~/Downloads (old downloads)\"\necho \"- ~/Library/Caches (cache files)\"\necho \"- /var/log (system logs)\"\necho \"- ~/Movies (video files)\"\necho \"- ~/Library/Application Support (app data)\"\necho \"\"\necho \"Note: Always be cautious when deleting files\"\necho \"Preview files and understand their purpose before deletion\"\n",
      "uninstall_script": "echo \"Uninstalling OmniDiskSweeper...\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Note: Use Mac App Store to uninstall or:\"\n  echo \"mas uninstall 416442386\"\nfi\necho \"Or manually delete from Applications folder\"\n"
    },
    "menubarx": {
      "id": "menubarx",
      "name": "MenuBarX",
      "description": "Powerful menu bar browser for web apps",
      "type": "mas",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "menu-bar",
        "browser",
        "web-apps",
        "productivity",
        "utilities"
      ],
      "url": "https://menubarx.app/",
      "notes": "- Menu bar browser for quick access to web applications\n- Pin any website or web app to your menu bar\n- Floating window mode for multitasking\n- Customizable shortcuts and appearance\n- Privacy-focused with ad blocking capabilities\n- Free with optional premium features\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing MenuBarX...\"\necho \"Note: MenuBarX is available on the Mac App Store\"\necho \"App Store ID: 1582640640\"\necho \"\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Installing MenuBarX via mas...\"\n  mas install 1582640640\nelse\n  echo \"mas-cli not found. Please install MenuBarX manually from the App Store\"\n  echo \"Search for 'MenuBarX' in the Mac App Store\"\nfi\n",
      "validate_script": "# Check if installed via App Store\nif ls /Applications/ | grep -q \"MenuBarX.app\"; then\n  exit 0\nfi\n\n# Check for variations in app name\nif ls /Applications/ | grep -i \"menubarx\" >/dev/null 2>&1; then\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"MenuBarX configuration complete\"\necho \"Launch MenuBarX to start pinning web apps to your menu bar\"\necho \"\"\necho \"Key features:\"\necho \"- Menu bar browser for instant web app access\"\necho \"- Pin multiple websites and web applications\"\necho \"- Floating window mode for picture-in-picture\"\necho \"- Built-in ad blocker and privacy protection\"\necho \"- Customizable keyboard shortcuts\"\necho \"- Desktop notifications from web apps\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch MenuBarX from Applications\"\necho \"2. Add your first web app or website\"\necho \"3. Customize appearance and behavior\"\necho \"4. Set up keyboard shortcuts if desired\"\necho \"5. Access pinned sites from the menu bar\"\necho \"\"\necho \"Popular use cases:\"\necho \"- Social media (Twitter, LinkedIn, Instagram)\"\necho \"- Messaging apps (WhatsApp Web, Telegram)\"\necho \"- Productivity tools (Notion, Trello, Asana)\"\necho \"- Communication (Slack, Discord, Teams)\"\necho \"- Entertainment (YouTube Music, Spotify Web)\"\necho \"\"\necho \"Customization options:\"\necho \"- Website icons and names\"\necho \"- Window size and position\"\necho \"- Keyboard shortcuts for quick access\"\necho \"- Notification settings\"\necho \"- Privacy and ad blocking preferences\"\necho \"\"\necho \"Benefits:\"\necho \"- Quick access without opening full browser\"\necho \"- Reduce browser tab clutter\"\necho \"- Always-accessible web applications\"\necho \"- Lightweight alternative to native apps\"\necho \"- Enhanced productivity workflow\"\necho \"\"\necho \"Advanced features:\"\necho \"- Picture-in-picture floating windows\"\necho \"- Custom CSS injection for website styling\"\necho \"- JavaScript execution for automation\"\necho \"- Multi-account support for same services\"\necho \"\"\necho \"MenuBarX will appear in your menu bar\"\necho \"Right-click menu bar icons for more options\"\n",
      "uninstall_script": "echo \"Uninstalling MenuBarX...\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Note: Use Mac App Store to uninstall or:\"\n  echo \"mas uninstall 1582640640\"\nfi\necho \"Or manually delete from Applications folder\"\n"
    },
    "soundsource": {
      "id": "soundsource",
      "name": "SoundSource",
      "description": "Audio control utility",
      "type": "brew_cask",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "audio",
        "control",
        "volume",
        "routing",
        "utilities"
      ],
      "url": "https://rogueamoeba.com/soundsource/",
      "notes": "- Control audio sources and routing on macOS\n- Per-application volume control\n- Audio effects and EQ for individual apps\n- Input and output device switching\n- System-wide audio enhancements\n- Requires license purchase for full functionality\n",
      "dependencies": [],
      "install_script": "echo \"Installing SoundSource...\"\nbrew install --cask soundsource\n",
      "validate_script": "brew list --cask | grep -q \"soundsource\" || ls /Applications/ | grep -q \"SoundSource.app\"\n",
      "configure_script": "echo \"SoundSource configuration complete\"\necho \"Launch SoundSource to start controlling audio\"\necho \"\"\necho \"Key features:\"\necho \"- Per-application volume control\"\necho \"- Audio device switching\"\necho \"- Built-in EQ and audio effects\"\necho \"- Input monitoring and routing\"\necho \"- Menu bar control for quick access\"\necho \"- Keyboard shortcuts for common actions\"\necho \"\"\necho \"Common use cases:\"\necho \"- Control volume of individual apps\"\necho \"- Switch between headphones and speakers\"\necho \"- Apply EQ to specific applications\"\necho \"- Monitor audio input levels\"\necho \"- Quick access to audio settings\"\necho \"\"\necho \"Note: SoundSource offers a free trial\"\necho \"Purchase license from Rogue Amoeba for full features\"\necho \"You may need to grant audio permissions in System Preferences\"\n",
      "uninstall_script": "echo \"Uninstalling SoundSource...\"\nbrew uninstall --cask soundsource\n"
    },
    "zmk-studio": {
      "id": "zmk-studio",
      "name": "ZMK Studio",
      "description": "Visual keyboard configuration tool for ZMK firmware",
      "type": "direct_download_dmg",
      "category": "Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "keyboard",
        "configuration",
        "zmk",
        "firmware",
        "mechanical",
        "customization"
      ],
      "url": "https://zmk.dev/docs/features/studio",
      "notes": "- Visual configuration tool for ZMK firmware keyboards\n- Real-time keymap editing and customization\n- Support for layers, macros, and advanced features\n- Direct communication with ZMK-powered keyboards\n- User-friendly interface for complex configurations\n- Free and open source keyboard tool\n",
      "dependencies": [],
      "install_script": "echo \"Installing ZMK Studio...\"\necho \"Note: ZMK Studio is for ZMK firmware-powered keyboards\"\necho \"\"\necho \"Installation options:\"\necho \"1. Download from ZMK documentation site\"\necho \"2. Check GitHub releases for latest version\"\necho \"3. Build from source if needed\"\necho \"\"\necho \"Manual installation steps:\"\necho \"1. Visit https://zmk.dev/ or GitHub releases\"\necho \"2. Download ZMK Studio for macOS\"\necho \"3. Open the downloaded DMG file\"\necho \"4. Move ZMK Studio to Applications folder\"\necho \"5. Launch and connect your ZMK keyboard\"\necho \"\"\n# Check if available via Homebrew\nif command -v brew >/dev/null 2>&1; then\n  echo \"Checking Homebrew for ZMK Studio...\"\n  if brew search zmk >/dev/null 2>&1; then\n    # This would work if available\n    echo \"ZMK Studio not found in Homebrew. Manual installation required.\"\n  fi\nfi\necho \"\"\necho \"Note: Requires ZMK firmware-compatible keyboard\"\n",
      "validate_script": "# Check for ZMK Studio in Applications\nif ls /Applications/ | grep -i \"zmk.*studio\" >/dev/null 2>&1; then\n  exit 0\nfi\n\n# Check for variations\nif ls /Applications/ | grep -i \"zmk\" >/dev/null 2>&1; then\n  exit 0\nfi\n\necho \"ZMK Studio not detected\"\nexit 1\n",
      "configure_script": "echo \"ZMK Studio configuration complete\"\necho \"Launch ZMK Studio to configure your ZMK keyboard\"\necho \"\"\necho \"Key features:\"\necho \"- Visual keymap editor with real-time preview\"\necho \"- Layer management and configuration\"\necho \"- Macro creation and editing\"\necho \"- Direct keyboard communication\"\necho \"- Advanced behavior configuration\"\necho \"- Export/import configuration support\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch ZMK Studio from Applications\"\necho \"2. Connect your ZMK firmware keyboard via USB\"\necho \"3. Load your current keyboard configuration\"\necho \"4. Edit keymaps visually using the interface\"\necho \"5. Flash changes directly to your keyboard\"\necho \"\"\necho \"Supported features:\"\necho \"- Multiple layers (base, symbols, numbers, etc.)\"\necho \"- Hold-tap behaviors and mod-taps\"\necho \"- Macros and complex key sequences\"\necho \"- RGB underglow and LED configuration\"\necho \"- Rotary encoder and other input support\"\necho \"- Wireless and split keyboard features\"\necho \"\"\necho \"Configuration capabilities:\"\necho \"- Visual keymap layout editing\"\necho \"- Behavior and timing adjustments\"\necho \"- Layer activation and switching\"\necho \"- Combo and sequence definitions\"\necho \"- Power management settings\"\necho \"\"\necho \"Keyboard compatibility:\"\necho \"- ZMK firmware-powered keyboards\"\necho \"- Popular mechanical keyboard PCBs\"\necho \"- Custom keyboards with ZMK support\"\necho \"- Split keyboards and wireless boards\"\necho \"\"\necho \"Benefits:\"\necho \"- No need to manually edit configuration files\"\necho \"- Real-time visualization of changes\"\necho \"- Easy experimentation with layouts\"\necho \"- Quick iteration on keyboard configurations\"\necho \"- Backup and restore configurations\"\necho \"\"\necho \"Note: ZMK Studio requires ZMK firmware on your keyboard\"\necho \"Visit https://zmk.dev/ for firmware installation guides\"\n",
      "uninstall_script": "echo \"Uninstalling ZMK Studio...\"\nfind /Applications -name \"*ZMK*\" -delete 2>/dev/null || true\n"
    },
    "arc": {
      "id": "arc",
      "name": "Arc",
      "description": "The browser company's reimagined web browser",
      "type": "brew_cask",
      "category": "Browsers",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "browser",
        "modern",
        "productivity",
        "sidebar",
        "spaces"
      ],
      "url": "https://arc.net/",
      "notes": "- Modern browser with innovative sidebar design\n- Workspace organization with Spaces feature\n- Built-in productivity tools and integrations\n- Privacy-focused with enhanced security\n- Unique tab management and organization\n- Free to use with premium features available\n",
      "dependencies": [],
      "install_script": "echo \"Installing Arc Browser...\"\nbrew install --cask arc\n",
      "validate_script": "brew list --cask | grep -q \"arc\" || ls /Applications/ | grep -q \"Arc.app\"\n",
      "configure_script": "echo \"Arc Browser configuration complete\"\necho \"Launch Arc to complete setup and create your account\"\necho \"\"\necho \"Key features:\"\necho \"- Vertical sidebar with tab management\"\necho \"- Spaces for organizing different contexts\"\necho \"- Built-in ad blocker and privacy protection\"\necho \"- Mini player for media content\"\necho \"- Split view for multitasking\"\necho \"- Command palette for quick actions\"\necho \"\"\necho \"Getting started:\"\necho \"1. Create an Arc account or sign in\"\necho \"2. Set up your first Space for work or personal use\"\necho \"3. Import bookmarks from other browsers\"\necho \"4. Customize sidebar and toolbar preferences\"\necho \"5. Explore productivity features and shortcuts\"\necho \"\"\necho \"Unique features:\"\necho \"- Sidebar tabs instead of traditional top tabs\"\necho \"- Spaces for context switching (work, personal, etc.)\"\necho \"- Easels for visual collaboration\"\necho \"- Built-in screenshot and annotation tools\"\necho \"- Smart folders for automatic tab organization\"\necho \"\"\necho \"Tips:\"\necho \"- Use Cmd+T to open the command palette\"\necho \"- Pin frequently used tabs in the sidebar\"\necho \"- Create different Spaces for different projects\"\necho \"- Use split view to see multiple pages at once\"\n",
      "uninstall_script": "echo \"Uninstalling Arc Browser...\"\nbrew uninstall --cask arc\n"
    },
    "firefox": {
      "id": "firefox",
      "name": "Firefox",
      "description": "Fast, private & safe web browser",
      "type": "brew_cask",
      "category": "Browsers",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "browser",
        "mozilla",
        "privacy",
        "open-source",
        "extensions"
      ],
      "url": "https://www.mozilla.org/firefox/",
      "notes": "- Open-source web browser by Mozilla Foundation\n- Strong privacy protections and tracking prevention\n- Extensive add-on ecosystem\n- Cross-platform synchronization\n- Developer-friendly tools and features\n- Regular security updates and improvements\n",
      "dependencies": [],
      "install_script": "echo \"Installing Firefox...\"\nbrew install --cask firefox\n",
      "validate_script": "brew list --cask | grep -q \"firefox\" || ls /Applications/ | grep -q \"Firefox.app\"\n",
      "configure_script": "echo \"Firefox configuration complete\"\necho \"Launch Firefox to complete setup and sign in\"\necho \"\"\necho \"Key features:\"\necho \"- Enhanced tracking protection\"\necho \"- Extensive add-on and extension support\"\necho \"- Firefox Sync for cross-device synchronization\"\necho \"- Private browsing mode\"\necho \"- Developer tools and Web Console\"\necho \"- Regular security and feature updates\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Firefox from Applications\"\necho \"2. Create or sign in to Firefox Account for sync\"\necho \"3. Import bookmarks and settings from other browsers\"\necho \"4. Configure privacy and security preferences\"\necho \"5. Install essential add-ons from Firefox Add-ons store\"\necho \"\"\necho \"Recommended add-ons:\"\necho \"- uBlock Origin (ad blocker)\"\necho \"- Privacy Badger (tracking protection)\"\necho \"- LastPass/Bitwarden (password manager)\"\necho \"- Dark Reader (dark mode for websites)\"\necho \"- Grammarly (writing assistant)\"\necho \"\"\necho \"Privacy features:\"\necho \"- Enhanced Tracking Protection (enabled by default)\"\necho \"- DNS over HTTPS for secure browsing\"\necho \"- Strict privacy mode available\"\necho \"- Container tabs for site isolation\"\necho \"- Private browsing with Tor support\"\necho \"\"\necho \"Developer features:\"\necho \"- Web Developer Tools\"\necho \"- Responsive Design Mode\"\necho \"- Network Monitor and Performance Tools\"\necho \"- JavaScript Debugger and Console\"\n",
      "uninstall_script": "echo \"Uninstalling Firefox...\"\nbrew uninstall --cask firefox\n"
    },
    "chrome": {
      "id": "chrome",
      "name": "Google Chrome",
      "description": "Fast, secure, and free web browser",
      "type": "brew_cask",
      "category": "Browsers",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "browser",
        "web",
        "google",
        "essential"
      ],
      "url": "https://www.google.com/chrome/",
      "notes": "- Most popular web browser with extensive extension ecosystem\n- Syncs with Google account for bookmarks, history, and passwords\n- Built-in developer tools and security features\n- Regular updates and security patches\n",
      "dependencies": [],
      "install_script": "echo \"Installing Google Chrome...\"\nbrew install --cask google-chrome\n",
      "validate_script": "brew list --cask | grep -q \"google-chrome\" || ls /Applications/ | grep -q \"Google Chrome.app\"\n",
      "configure_script": "echo \"Google Chrome configuration complete\"\n",
      "uninstall_script": "echo \"Uninstalling Google Chrome...\"\nbrew uninstall --cask google-chrome\n"
    },
    "vivaldi": {
      "id": "vivaldi",
      "name": "Vivaldi",
      "description": "Feature-rich web browser with extensive customization options",
      "type": "brew_cask",
      "category": "Browsers",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "browser",
        "web",
        "customization",
        "privacy",
        "productivity"
      ],
      "url": "https://vivaldi.com/",
      "notes": "- Highly customizable browser with unique features like tab stacking, workspaces, and built-in tools\n- Built-in email client, calendar, and feed reader\n- Advanced tab management and workspace organization\n- Built-in ad blocker and privacy features\n- Chromium-based with extensive customization options\n",
      "dependencies": [],
      "install_script": "echo \"Installing Vivaldi...\"\nbrew install --cask vivaldi\n",
      "validate_script": "brew list --cask | grep -q \"vivaldi\" || ls /Applications/ | grep -q \"Vivaldi.app\"\n",
      "configure_script": "echo \"Vivaldi configuration complete\"\necho \"Launch Vivaldi and customize your browsing experience\"\necho \"Key features to explore:\"\necho \"- Tab stacking and workspaces\"\necho \"- Built-in email client and calendar\"\necho \"- Customizable UI and themes\"\necho \"- Privacy and security settings\"\n",
      "uninstall_script": "echo \"Uninstalling Vivaldi...\"\nbrew uninstall --cask vivaldi\n"
    },
    "edge": {
      "id": "edge",
      "name": "Microsoft Edge",
      "description": "Microsoft's modern web browser",
      "type": "brew_cask",
      "category": "Browsers",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "browser",
        "web",
        "microsoft",
        "chromium",
        "enterprise"
      ],
      "url": "https://www.microsoft.com/edge",
      "notes": "- Microsoft's Chromium-based browser with enterprise features\n- Excellent integration with Microsoft 365 and Azure services\n- Built-in tracking prevention and security features\n- Vertical tabs and productivity features\n- Enterprise-grade security and management capabilities\n",
      "dependencies": [],
      "install_script": "echo \"Installing Microsoft Edge...\"\nbrew install --cask microsoft-edge\n",
      "validate_script": "brew list --cask | grep -q \"microsoft-edge\" || ls /Applications/ | grep -q \"Microsoft Edge.app\"\n",
      "configure_script": "echo \"Microsoft Edge configuration complete\"\necho \"Launch Edge and sign in with your Microsoft account for sync\"\necho \"Key features to explore:\"\necho \"- Vertical tabs for better organization\"\necho \"- Collections for research and planning\"\necho \"- Microsoft 365 integration\"\necho \"- Enterprise security features\"\n",
      "uninstall_script": "echo \"Uninstalling Microsoft Edge...\"\nbrew uninstall --cask microsoft-edge\n"
    },
    "zen-browser": {
      "id": "zen-browser",
      "name": "Zen Browser",
      "description": "Beautiful, fast, and privacy-focused Firefox-based browser",
      "type": "direct_download_dmg",
      "category": "Browsers",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "browser",
        "firefox",
        "privacy",
        "beautiful",
        "customization"
      ],
      "url": "https://www.zen-browser.app/",
      "notes": "- Firefox-based browser with focus on beauty and privacy\n- Highly customizable interface with themes\n- Built-in ad blocker and privacy features\n- Vertical tabs and workspaces\n- Split screen and picture-in-picture support\n- Open source and community driven\n",
      "dependencies": [],
      "install_script": "echo \"Installing Zen Browser...\"\necho \"Downloading Zen Browser from official website...\"\n\n# Create temporary directory\ntmp_dir=$(mktemp -d)\ncd \"$tmp_dir\"\n\n# Download the latest version\necho \"Fetching download URL...\"\ndownload_url=\"https://github.com/zen-browser/desktop/releases/latest/download/zen.macos-x64.dmg\"\n\necho \"Downloading Zen Browser...\"\ncurl -L -o \"zen-browser.dmg\" \"$download_url\"\n\n# Mount and install\necho \"Mounting DMG...\"\nhdiutil attach \"zen-browser.dmg\" -nobrowse -quiet\n\necho \"Installing Zen Browser...\"\ncp -R \"/Volumes/Zen Browser/Zen Browser.app\" \"/Applications/\"\n\necho \"Cleaning up...\"\nhdiutil detach \"/Volumes/Zen Browser\" -quiet\nrm -rf \"$tmp_dir\"\n\necho \"Zen Browser installation completed\"\n",
      "validate_script": "ls /Applications/ | grep -q \"Zen Browser.app\"\n",
      "configure_script": "echo \"Zen Browser configuration complete\"\necho \"Launch Zen Browser to complete setup\"\necho \"\"\necho \"Key features:\"\necho \"- Beautiful, customizable interface\"\necho \"- Vertical tabs and workspaces\"\necho \"- Built-in privacy protection and ad blocking\"\necho \"- Firefox compatibility with extensions\"\necho \"- Split screen and picture-in-picture\"\necho \"- Multiple themes and customization options\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Zen Browser from Applications\"\necho \"2. Import bookmarks and settings from other browsers\"\necho \"3. Explore themes in Settings > Appearance\"\necho \"4. Set up workspaces for different contexts\"\necho \"5. Configure privacy and security settings\"\necho \"\"\necho \"Unique features:\"\necho \"- Vertical tab sidebar for better space usage\"\necho \"- Workspaces to organize different browsing contexts\"\necho \"- Beautiful animations and smooth interface\"\necho \"- Privacy-first approach with built-in protections\"\necho \"- Regular updates from active community\"\necho \"\"\necho \"Firefox compatibility:\"\necho \"- Use Firefox Add-ons and extensions\"\necho \"- Import Firefox profiles and data\"\necho \"- Same rendering engine with enhanced UI\"\n",
      "uninstall_script": "echo \"Uninstalling Zen Browser...\"\nrm -rf \"/Applications/Zen Browser.app\"\n"
    },
    "cloudflare-warp": {
      "id": "cloudflare-warp",
      "name": "Cloudflare WARP",
      "description": "Fast, secure, and private VPN service",
      "type": "brew_cask",
      "category": "Cloud",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "vpn",
        "dns",
        "privacy",
        "cloudflare",
        "security",
        "network"
      ],
      "url": "https://1.1.1.1/",
      "notes": "- Fast and secure VPN service by Cloudflare\n- Built on the 1.1.1.1 DNS resolver\n- Free tier with paid WARP+ for enhanced performance\n- Protects traffic on unsecured networks\n- Improves connection speed and reliability\n- Zero-log privacy policy\n",
      "dependencies": [],
      "install_script": "echo \"Installing Cloudflare WARP...\"\nbrew install --cask cloudflare-warp\n",
      "validate_script": "brew list --cask | grep -q \"cloudflare-warp\" || ls /Applications/ | grep -q \"Cloudflare WARP.app\"\n",
      "configure_script": "echo \"Cloudflare WARP configuration complete\"\necho \"Launch Cloudflare WARP to set up your secure connection\"\necho \"\"\necho \"Key features:\"\necho \"- Fast, secure VPN powered by Cloudflare's network\"\necho \"- Built on the 1.1.1.1 DNS resolver (fastest DNS)\"\necho \"- Zero-log privacy policy\"\necho \"- Protection on public Wi-Fi networks\"\necho \"- Improved website loading speeds\"\necho \"- Free tier with optional WARP+ subscription\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Cloudflare WARP from Applications\"\necho \"2. Create a Cloudflare account or sign in\"\necho \"3. Enable WARP protection\"\necho \"4. Optionally upgrade to WARP+ for faster speeds\"\necho \"5. Configure connection preferences\"\necho \"\"\necho \"Connection modes:\"\necho \"- 1.1.1.1 DNS only: Faster DNS resolution\"\necho \"- WARP: Full VPN protection and acceleration\"\necho \"- WARP+: Enhanced performance with Argo routing\"\necho \"\"\necho \"Benefits:\"\necho \"- Encrypt all internet traffic\"\necho \"- Hide IP address and location\"\necho \"- Protect against malicious websites\"\necho \"- Faster browsing with optimized routing\"\necho \"- Block malware and adult content (optional)\"\necho \"\"\necho \"Usage scenarios:\"\necho \"- Public Wi-Fi protection\"\necho \"- Bypass network restrictions\"\necho \"- Improve connection reliability\"\necho \"- Enhanced privacy and security\"\necho \"\"\necho \"WARP will appear in your menu bar for quick access\"\n",
      "uninstall_script": "echo \"Uninstalling Cloudflare WARP...\"\nbrew uninstall --cask cloudflare-warp\n"
    },
    "google-drive": {
      "id": "google-drive",
      "name": "Google Drive",
      "description": "Cloud storage and file synchronization",
      "type": "brew_cask",
      "category": "Cloud",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "cloud-storage",
        "google",
        "sync",
        "backup",
        "collaboration"
      ],
      "url": "https://www.google.com/drive/",
      "notes": "- Google's cloud storage service with desktop sync\n- 15GB free storage shared across Google services\n- Real-time collaboration on Google Docs, Sheets, and Slides\n- File sharing with customizable permissions\n- Integration with Gmail and other Google services\n- Cross-platform synchronization\n",
      "dependencies": [],
      "install_script": "echo \"Installing Google Drive...\"\nbrew install --cask google-drive\n",
      "validate_script": "brew list --cask | grep -q \"google-drive\" || ls /Applications/ | grep -q \"Google Drive.app\"\n",
      "configure_script": "echo \"Google Drive configuration complete\"\necho \"Launch Google Drive and sign in with your Google account\"\necho \"Key features:\"\necho \"- Sync files across all your devices\"\necho \"- Real-time collaboration in Google Workspace\"\necho \"- File sharing with customizable permissions\"\necho \"- Version history and file recovery\"\necho \"- Integration with Gmail and Google Photos\"\necho \"- Stream files (don't take up local space) or Mirror files (offline access)\"\necho \"\"\necho \"Note: Google Drive folder will be created and accessible in Finder\"\necho \"Choose between 'Stream' or 'Mirror' sync options during setup\"\n",
      "uninstall_script": "echo \"Uninstalling Google Drive...\"\nbrew uninstall --cask google-drive\necho \"Note: Google Drive folder and synced files will remain on your system\"\n"
    },
    "dropbox": {
      "id": "dropbox",
      "name": "Dropbox",
      "description": "Cloud storage and file synchronization service",
      "type": "brew_cask",
      "category": "Cloud",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "cloud-storage",
        "sync",
        "backup",
        "collaboration",
        "file-sharing"
      ],
      "url": "https://www.dropbox.com/",
      "notes": "- Popular cloud storage and file synchronization service\n- Cross-platform file access and sharing\n- Automatic backup and version history\n- Collaboration features for teams\n- Integration with many third-party applications\n- Free tier with paid plans for more storage\n",
      "dependencies": [],
      "install_script": "echo \"Installing Dropbox...\"\nbrew install --cask dropbox\n",
      "validate_script": "brew list --cask | grep -q \"dropbox\" || ls /Applications/ | grep -q \"Dropbox.app\"\n",
      "configure_script": "echo \"Dropbox configuration complete\"\necho \"Launch Dropbox and sign in to start syncing files\"\necho \"\"\necho \"Key features:\"\necho \"- 2GB free storage (expandable with paid plans)\"\necho \"- Automatic file synchronization across devices\"\necho \"- File sharing with public and private links\"\necho \"- Version history and file recovery\"\necho \"- Collaborative editing and commenting\"\necho \"- Integration with productivity apps\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Dropbox from Applications\"\necho \"2. Create account or sign in to existing account\"\necho \"3. Choose local Dropbox folder location\"\necho \"4. Select folders to sync (selective sync)\"\necho \"5. Install Dropbox on other devices for full sync\"\necho \"\"\necho \"File management:\"\necho \"- Drag files to ~/Dropbox folder for automatic upload\"\necho \"- Access files online at dropbox.com\"\necho \"- Share files via right-click context menu\"\necho \"- Restore deleted files from web interface\"\necho \"- Version history available for 30+ days\"\necho \"\"\necho \"Collaboration features:\"\necho \"- Share folders with team members\"\necho \"- Comment and annotate on files\"\necho \"- Real-time collaborative editing\"\necho \"- Access control and permissions\"\necho \"- Team spaces and organization tools\"\necho \"\"\necho \"Integration:\"\necho \"- Microsoft Office and Google Workspace\"\necho \"- Adobe Creative Suite and Figma\"\necho \"- Slack, Zoom, and communication tools\"\necho \"- Hundreds of third-party applications\"\necho \"\"\necho \"Dropbox will appear in Finder sidebar and menu bar\"\n",
      "uninstall_script": "echo \"Uninstalling Dropbox...\"\nbrew uninstall --cask dropbox\n"
    },
    "onedrive": {
      "id": "onedrive",
      "name": "OneDrive",
      "description": "Cloud storage client for Microsoft OneDrive",
      "type": "brew_cask",
      "category": "Cloud",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "cloud-storage",
        "microsoft",
        "sync",
        "backup",
        "collaboration"
      ],
      "url": "https://www.microsoft.com/en-us/microsoft-365/onedrive/online-cloud-storage",
      "notes": "- Microsoft's cloud storage service with Office integration\n- 5GB free storage, more with Microsoft 365 subscription\n- Real-time collaboration on Office documents\n- File versioning and recovery features\n- Cross-platform synchronization\n- Integration with Windows and Microsoft ecosystem\n",
      "dependencies": [],
      "install_script": "echo \"Installing OneDrive...\"\nbrew install --cask onedrive\n",
      "validate_script": "brew list --cask | grep -q \"onedrive\" || ls /Applications/ | grep -q \"OneDrive.app\"\n",
      "configure_script": "echo \"OneDrive configuration complete\"\necho \"Launch OneDrive and sign in with your Microsoft account\"\necho \"Key features:\"\necho \"- Sync files across all your devices\"\necho \"- Real-time collaboration in Office apps\"\necho \"- File sharing with customizable permissions\"\necho \"- Version history and file recovery\"\necho \"- Integration with Microsoft 365 apps\"\necho \"\"\necho \"Note: OneDrive folder will be created in your home directory\"\n",
      "uninstall_script": "echo \"Uninstalling OneDrive...\"\nbrew uninstall --cask onedrive\necho \"Note: OneDrive folder and synced files will remain on your system\"\n"
    },
    "unnaturalscrollwheel": {
      "id": "unnaturalscrollwheel",
      "name": "UnnaturalScrollWheel",
      "description": "Invert scroll direction for mouse while keeping trackpad natural",
      "type": "brew_cask",
      "category": "System Tweaks",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "scroll",
        "mouse",
        "trackpad",
        "system-preferences",
        "input"
      ],
      "url": "https://github.com/ther0n/UnnaturalScrollWheels",
      "notes": "- Allows independent scroll direction settings for mouse and trackpad\n- Keeps trackpad natural scrolling while making mouse scroll traditional\n- Lightweight system preference modification\n- Addresses common user preference conflicts\n- Open source and free to use\n- Auto-starts on login when configured\n",
      "dependencies": [],
      "install_script": "echo \"Installing UnnaturalScrollWheel...\"\nbrew install --cask unnaturalscrollwheels\n",
      "validate_script": "brew list --cask | grep -q \"unnaturalscrollwheels\" || ls /Applications/ | grep -q \"UnnaturalScrollWheels.app\"\n",
      "configure_script": "echo \"UnnaturalScrollWheel configuration complete\"\necho \"Launch UnnaturalScrollWheel to configure scroll preferences\"\necho \"\"\necho \"Key features:\"\necho \"- Independent scroll direction for mouse and trackpad\"\necho \"- System preference integration\"\necho \"- Auto-start on login option\"\necho \"- Lightweight and efficient\"\necho \"- No performance impact\"\necho \"\"\necho \"Setup instructions:\"\necho \"1. Launch UnnaturalScrollWheel from Applications\"\necho \"2. Grant necessary system permissions if prompted\"\necho \"3. Configure scroll direction preferences:\"\necho \"   - Keep trackpad natural (content moves with finger)\"\necho \"   - Set mouse to traditional (wheel up = scroll up)\"\necho \"4. Enable 'Start at Login' if desired\"\necho \"5. Test scroll behavior in various applications\"\necho \"\"\necho \"Common use cases:\"\necho \"- MacBook users with external mouse\"\necho \"- Users switching between devices with different scroll conventions\"\necho \"- Preference for traditional mouse wheel behavior\"\necho \"- Mixed input device environments\"\necho \"\"\necho \"Note: Changes take effect immediately\"\necho \"You can adjust settings anytime through the app\"\n",
      "uninstall_script": "echo \"Uninstalling UnnaturalScrollWheel...\"\nbrew uninstall --cask unnaturalscrollwheels\n"
    },
    "cleanmymac-x": {
      "id": "cleanmymac-x",
      "name": "CleanMyMac X",
      "description": "System cleaner and optimizer",
      "type": "brew_cask",
      "category": "System Tweaks",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "system-cleaner",
        "optimization",
        "maintenance",
        "storage",
        "performance"
      ],
      "url": "https://cleanmymac.com/",
      "notes": "- Comprehensive system cleaning and optimization suite\n- Removes junk files, cache, and unnecessary data\n- Malware detection and removal\n- Application uninstaller and updater\n- System performance optimization\n- Requires subscription for full features\n",
      "dependencies": [],
      "install_script": "echo \"Installing CleanMyMac X...\"\nbrew install --cask cleanmymac\n",
      "validate_script": "brew list --cask | grep -q \"cleanmymac\" || ls /Applications/ | grep -q \"CleanMyMac X.app\"\n",
      "configure_script": "echo \"CleanMyMac X configuration complete\"\necho \"Launch CleanMyMac X and complete the initial setup\"\necho \"\"\necho \"Key features:\"\necho \"- Smart scan for system optimization\"\necho \"- Malware removal and security protection\"\necho \"- Large file and old folder cleanup\"\necho \"- Application uninstaller and updater\"\necho \"- System maintenance scripts\"\necho \"- Privacy protection and secure deletion\"\necho \"\"\necho \"Main modules:\"\necho \"- Smart Scan: One-click system optimization\"\necho \"- Malware Removal: Security threat detection\"\necho \"- Privacy: Clear browsing data and chat logs\"\necho \"- Large & Old Files: Find space-consuming items\"\necho \"- Uninstaller: Complete app removal\"\necho \"- Updater: Keep apps current\"\necho \"\"\necho \"Note: CleanMyMac X offers a free trial\"\necho \"Subscription required for full functionality\"\necho \"Be careful with system file cleaning - review before deleting\"\n",
      "uninstall_script": "echo \"Uninstalling CleanMyMac X...\"\nbrew uninstall --cask cleanmymac\n"
    },
    "zoom": {
      "id": "zoom",
      "name": "Zoom",
      "description": "Video conferencing platform",
      "type": "brew_cask",
      "category": "Communication",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "video-conferencing",
        "meetings",
        "webinars",
        "collaboration",
        "business"
      ],
      "url": "https://zoom.us/",
      "notes": "- Popular video conferencing solution for meetings and webinars\n- HD video and audio quality\n- Screen sharing and recording capabilities\n- Breakout rooms and collaboration features\n- Integration with calendar and productivity apps\n- Free tier available with paid plans for advanced features\n",
      "dependencies": [],
      "install_script": "echo \"Installing Zoom...\"\nbrew install --cask zoom\n",
      "validate_script": "brew list --cask | grep -q \"zoom\" || ls /Applications/ | grep -q \"zoom.us.app\"\n",
      "configure_script": "echo \"Zoom configuration complete\"\necho \"Launch Zoom and create an account or sign in\"\necho \"\"\necho \"Key features:\"\necho \"- HD video and audio conferencing\"\necho \"- Screen sharing and annotation\"\necho \"- Meeting recording and cloud storage\"\necho \"- Breakout rooms for small group collaboration\"\necho \"- Virtual backgrounds and filters\"\necho \"- Chat and file sharing during meetings\"\necho \"\"\necho \"Getting started:\"\necho \"1. Create a Zoom account or sign in\"\necho \"2. Configure audio and video settings\"\necho \"3. Test your microphone and camera\"\necho \"4. Set up virtual backgrounds if desired\"\necho \"5. Integrate with your calendar application\"\necho \"\"\necho \"Meeting features:\"\necho \"- Host or join meetings with Meeting ID\"\necho \"- Schedule meetings with calendar integration\"\necho \"- Share your screen for presentations\"\necho \"- Record meetings for later review\"\necho \"- Use waiting rooms for security\"\necho \"\"\necho \"Note: Free accounts have 40-minute limit for group meetings\"\necho \"Upgrade to paid plan for unlimited meeting duration\"\n",
      "uninstall_script": "echo \"Uninstalling Zoom...\"\nbrew uninstall --cask zoom\n"
    },
    "xz": {
      "id": "xz",
      "name": "XZ",
      "description": "High-ratio lossless data compression utility using the LZMA compression algorithm",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "compression",
        "utilities",
        "essential",
        "archiving",
        "lzma"
      ],
      "url": "https://tukaani.org/xz/",
      "notes": "- High-ratio lossless data compression utility\n- Uses LZMA compression algorithm for excellent compression ratios\n- Command-line utility for automated compression\n- Essential for handling .xz and .lzma files\n- Commonly used in Linux distributions and software packages\n",
      "dependencies": [],
      "install_script": "echo \"Installing XZ...\"\nbrew install xz\n",
      "validate_script": "command -v xz &> /dev/null\n",
      "configure_script": "echo \"XZ configuration complete\"\necho \"Use: xz filename (to compress)\"\necho \"Use: xz -d filename.xz (to decompress)\"\necho \"Use: unxz filename.xz (alternative decompression)\"\n",
      "uninstall_script": "echo \"Uninstalling XZ...\"\nbrew uninstall xz\n"
    },
    "git-delta": {
      "id": "git-delta",
      "name": "Git Delta",
      "description": "A syntax-highlighting pager for git, diff, and grep output",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "git",
        "diff",
        "syntax-highlighting",
        "pager",
        "development"
      ],
      "url": "https://github.com/dandavison/delta",
      "notes": "- Enhances git diff output with syntax highlighting and side-by-side view\n- Supports line-by-line and side-by-side diff formats\n- Customizable themes and color schemes\n- Integration with git and other diff tools\n- Written in Rust for high performance\n",
      "dependencies": [
        "git"
      ],
      "install_script": "echo \"Installing git-delta...\"\nbrew install git-delta\n",
      "validate_script": "command -v delta &> /dev/null\n",
      "configure_script": "echo \"Configuring git-delta...\"\n\n# Configure git to use delta as the default pager\ngit config --global core.pager \"delta\"\ngit config --global interactive.diffFilter \"delta --color-only\"\ngit config --global delta.navigate true\ngit config --global delta.light false\ngit config --global delta.side-by-side true\ngit config --global merge.conflictstyle diff3\ngit config --global diff.colorMoved default\n\necho \"git-delta configuration complete\"\necho \"Git has been configured to use delta for:\"\necho \"- git diff\"\necho \"- git log -p\"\necho \"- git show\"\necho \"- git add -p\"\necho \"\"\necho \"Key features enabled:\"\necho \"- Syntax highlighting for code\"\necho \"- Side-by-side diff view\"\necho \"- Navigation with n/N keys\"\necho \"- Enhanced merge conflict display\"\necho \"\"\necho \"To use delta directly: delta file1.txt file2.txt\"\necho \"To temporarily disable: git --no-pager diff\"\n",
      "uninstall_script": "echo \"Uninstalling git-delta...\"\n\n# Remove git configuration\ngit config --global --unset core.pager\ngit config --global --unset interactive.diffFilter\ngit config --global --unset delta.navigate\ngit config --global --unset delta.light\ngit config --global --unset delta.side-by-side\n\nbrew uninstall git-delta\n"
    },
    "tldr": {
      "id": "tldr",
      "name": "tldr",
      "description": "Simplified and community-driven man pages",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "documentation",
        "man-pages",
        "command-line",
        "help",
        "utilities"
      ],
      "url": "https://tldr.sh/",
      "notes": "- Provides concise, practical examples for command-line tools\n- Community-driven documentation with real-world usage examples\n- Much faster and more practical than traditional man pages\n- Supports hundreds of common command-line tools\n- Available in multiple languages\n",
      "dependencies": [],
      "install_script": "echo \"Installing tldr...\"\nbrew install tldr\n",
      "validate_script": "command -v tldr &> /dev/null\n",
      "configure_script": "echo \"Configuring tldr...\"\n\n# Update the tldr database\necho \"Updating tldr database...\"\ntldr --update\n\necho \"tldr configuration complete\"\necho \"Usage examples:\"\necho \"  tldr tar    - Get examples for tar command\"\necho \"  tldr git    - Get examples for git command\"\necho \"  tldr curl   - Get examples for curl command\"\n\n# Show a sample\necho \"\"\necho \"Sample usage:\"\ntldr tldr 2>/dev/null || echo \"tldr database updating in background...\"\n",
      "uninstall_script": "echo \"Uninstalling tldr...\"\nbrew uninstall tldr\n"
    },
    "unzip": {
      "id": "unzip",
      "name": "Unzip",
      "description": "Archive extraction utility for ZIP files with support for various compression formats",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "archive",
        "compression",
        "utilities",
        "essential"
      ],
      "url": "https://formulae.brew.sh/formula/unzip",
      "notes": "- Archive extraction utility for ZIP files\n- Supports password-protected archives\n- Command-line utility for automated extraction\n- Essential for handling downloaded archives\n- Integrates with other compression tools\n",
      "dependencies": [],
      "install_script": "echo \"Installing Unzip...\"\nbrew install unzip\n",
      "validate_script": "command -v unzip &> /dev/null\n",
      "configure_script": "echo \"Unzip configuration complete\"\necho \"Use: unzip filename.zip\"\necho \"Extract to specific directory: unzip filename.zip -d /path/to/directory\"\n",
      "uninstall_script": "echo \"Uninstalling Unzip...\"\nbrew uninstall unzip\n"
    },
    "zoxide": {
      "id": "zoxide",
      "name": "Zoxide",
      "description": "Smarter cd command for your terminal",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "navigation",
        "command-line",
        "productivity",
        "terminal",
        "utilities"
      ],
      "url": "https://github.com/ajeetdsouza/zoxide",
      "notes": "- Smarter cd command that learns your habits\n- Jump to frequently used directories with just a few keystrokes\n- Written in Rust for maximum performance\n- Requires shell integration for optimal functionality\n- Works with zsh, bash, fish, and other shells\n",
      "dependencies": [],
      "install_script": "echo \"Installing zoxide...\"\nbrew install zoxide\n",
      "validate_script": "command -v zoxide &> /dev/null\n",
      "configure_script": "echo \"Configuring zoxide...\"\n\n# Add to shell configuration\nSHELL_NAME=$(basename \"$SHELL\")\n\ncase \"$SHELL_NAME\" in\n    zsh)\n        CONFIG_FILE=\"$HOME/.zshrc\"\n        if ! grep -q \"zoxide init\" \"$CONFIG_FILE\" 2>/dev/null; then\n            echo \"\" >> \"$CONFIG_FILE\"\n            echo \"# zoxide - smarter cd command\" >> \"$CONFIG_FILE\"\n            echo 'eval \"$(zoxide init zsh)\"' >> \"$CONFIG_FILE\"\n            echo \"Added zoxide integration to ~/.zshrc\"\n        else\n            echo \"zoxide already configured in ~/.zshrc\"\n        fi\n        ;;\n    bash)\n        CONFIG_FILE=\"$HOME/.bashrc\"\n        if ! grep -q \"zoxide init\" \"$CONFIG_FILE\" 2>/dev/null; then\n            echo \"\" >> \"$CONFIG_FILE\"\n            echo \"# zoxide - smarter cd command\" >> \"$CONFIG_FILE\"\n            echo 'eval \"$(zoxide init bash)\"' >> \"$CONFIG_FILE\"\n            echo \"Added zoxide integration to ~/.bashrc\"\n        else\n            echo \"zoxide already configured in ~/.bashrc\"\n        fi\n        ;;\n    *)\n        echo \"Shell integration for $SHELL_NAME not configured automatically\"\n        echo \"Please add the following to your shell configuration:\"\n        echo 'eval \"$(zoxide init SHELL_NAME)\"'\n        ;;\nesac\n\necho \"zoxide configuration complete\"\necho \"Usage:\"\necho \"  z foo       # cd to highest ranked directory matching foo\"\necho \"  z foo bar   # cd to highest ranked directory matching foo and bar\"\necho \"  zi foo      # cd with interactive selection using fzf\"\necho \"\"\necho \"Restart your terminal or run 'source ~/.zshrc' to activate\"\n",
      "uninstall_script": "echo \"Uninstalling zoxide...\"\nbrew uninstall zoxide\necho \"Note: You may want to remove zoxide configuration from your shell config files\"\n"
    },
    "xcode_cli": {
      "id": "xcode_cli",
      "name": "Xcode Command Line Tools",
      "description": "Essential development tools for macOS",
      "type": "shell_script",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "development",
        "essential",
        "compiler",
        "tools",
        "apple"
      ],
      "url": "https://developer.apple.com/xcode/",
      "notes": "- Required for most development tasks on macOS\n- Includes compilers, debuggers, and other development utilities\n- Installed via xcode-select --install command\n- No App Store account required for command line tools\n- Essential dependency for Homebrew and other development tools\n",
      "dependencies": [],
      "install_script": "echo \"Installing Xcode Command Line Tools...\"\n\n# Check if already installed\nif xcode-select -p &> /dev/null; then\n    echo \"Xcode Command Line Tools are already installed\"\n    exit 0\nfi\n\necho \"Installing Xcode Command Line Tools (this may take a while)...\"\nxcode-select --install\n\n# Wait for installation to complete\necho \"Waiting for installation to complete...\"\necho \"Please click 'Install' in the dialog that appears\"\n\n# Wait until tools are installed\nwhile ! xcode-select -p &> /dev/null; do\n    sleep 5\n    echo \"Still waiting for installation...\"\ndone\n\necho \"Xcode Command Line Tools installation completed\"\n",
      "validate_script": "xcode-select -p &> /dev/null\n",
      "configure_script": "echo \"Xcode Command Line Tools configuration complete\"\necho \"Tools installed at: $(xcode-select -p)\"\necho \"You can now use git, clang, make, and other development tools\"\n",
      "uninstall_script": "echo \"To uninstall Xcode Command Line Tools:\"\necho \"sudo rm -rf $(xcode-select -p)\"\necho \"sudo xcode-select --reset\"\necho \"Note: This will remove development capabilities from your system\"\n"
    },
    "ripgrep": {
      "id": "ripgrep",
      "name": "Ripgrep",
      "description": "Search tool like grep and The Silver Searcher",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "search",
        "grep",
        "utilities",
        "command-line",
        "regex"
      ],
      "url": "https://github.com/BurntSushi/ripgrep",
      "notes": "- Fast line-oriented search tool that recursively searches directories\n- Faster than grep and ag (The Silver Searcher)\n- Respects .gitignore files and hidden file patterns\n- Supports Unicode and various text encodings\n- Rich output formatting and color highlighting\n- Written in Rust for maximum performance\n",
      "dependencies": [],
      "install_script": "echo \"Installing ripgrep...\"\nbrew install ripgrep\n",
      "validate_script": "command -v rg &> /dev/null\n",
      "configure_script": "echo \"ripgrep configuration complete\"\necho \"Usage examples:\"\necho \"  rg 'pattern'                    # Search for pattern in current directory\"\necho \"  rg 'pattern' /path/to/search    # Search in specific directory\"\necho \"  rg -i 'pattern'                 # Case-insensitive search\"\necho \"  rg -n 'pattern'                 # Show line numbers\"\necho \"  rg -A 3 -B 3 'pattern'          # Show 3 lines before and after matches\"\necho \"  rg --type py 'pattern'          # Search only in Python files\"\necho \"  rg --hidden 'pattern'           # Include hidden files\"\necho \"\"\necho \"ripgrep (rg) is now available and ready to use!\"\necho \"It's faster than grep and respects .gitignore files automatically\"\n",
      "uninstall_script": "echo \"Uninstalling ripgrep...\"\nbrew uninstall ripgrep\n"
    },
    "gzip": {
      "id": "gzip",
      "name": "Gzip",
      "description": "File compression utility that uses the GZIP compression algorithm for efficient file compression and decompression",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "compression",
        "utilities",
        "essential",
        "archiving"
      ],
      "url": "https://formulae.brew.sh/formula/gzip",
      "notes": "- File compression utility using GZIP algorithm\n- Efficient compression for single files\n- Widely used in web servers and file transfers\n- Command-line utility for automated compression\n- Essential for handling compressed files\n",
      "dependencies": [],
      "install_script": "echo \"Installing Gzip...\"\nbrew install gzip\n",
      "validate_script": "command -v gzip &> /dev/null\n",
      "configure_script": "echo \"Gzip configuration complete\"\necho \"Use: gzip filename (to compress)\"\necho \"Use: gunzip filename.gz (to decompress)\"\necho \"Use: gzip -d filename.gz (alternative decompression)\"\n",
      "uninstall_script": "echo \"Uninstalling Gzip...\"\nbrew uninstall gzip\n"
    },
    "git": {
      "id": "git",
      "name": "Git",
      "description": "Distributed version control system for tracking changes in source code during software development",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "version-control",
        "development",
        "essential",
        "collaboration"
      ],
      "url": "https://git-scm.com/",
      "notes": "- Distributed version control system\n- Essential for modern software development\n- Supports branching, merging, and distributed workflows\n- Integrates with GitHub, GitLab, and other platforms\n- Command-line and GUI tools available\n- \n- 📌 After installation:\n- 1. Configure: git config --global user.name \"Your Name\"\n- 2. Configure: git config --global user.email \"your.email@example.com\"\n- 3. Set pull behavior: git config --global pull.rebase true\n- 4. Enable auto-stash: git config --global rebase.autoStash true\n",
      "dependencies": [],
      "install_script": "echo \"Installing Git...\"\nbrew install git\n",
      "validate_script": "command -v git &> /dev/null\n",
      "configure_script": "echo \"Git configuration complete\"\necho \"Configure Git with your details:\"\necho \"  git config --global user.name \\\"Your Name\\\"\"\necho \"  git config --global user.email \\\"your.email@example.com\\\"\"\necho \"  git config --global pull.rebase true\"\necho \"  git config --global rebase.autoStash true\"\n",
      "uninstall_script": "echo \"Uninstalling Git...\"\nbrew uninstall git\n"
    },
    "rename": {
      "id": "rename",
      "name": "Rename",
      "description": "Perl-powered file rename script with many helpful built-ins",
      "type": "brew",
      "category": "Core Utilities",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "file-management",
        "rename",
        "batch-operations",
        "perl",
        "utilities"
      ],
      "url": "https://metacpan.org/pod/File::Rename",
      "notes": "- Command-line utility for batch renaming files using Perl expressions\n- Powerful pattern matching and substitution capabilities\n- Supports complex renaming operations with regular expressions\n- Dry-run mode to preview changes before applying\n- Case conversion and text manipulation features\n",
      "dependencies": [],
      "install_script": "echo \"Installing rename...\"\nbrew install rename\n",
      "validate_script": "command -v rename &> /dev/null\n",
      "configure_script": "echo \"rename configuration complete\"\necho \"Usage examples:\"\necho \"  rename 's/old/new/' *.txt                # Replace 'old' with 'new' in .txt files\"\necho \"  rename 'y/A-Z/a-z/' *                    # Convert filenames to lowercase\"\necho \"  rename 's/ /_/g' *                       # Replace spaces with underscores\"\necho \"  rename -n 's/old/new/' *.txt             # Dry-run (preview changes)\"\necho \"  rename 's/^/prefix_/' *                   # Add prefix to all files\"\necho \"  rename 's/\\\\.jpeg$/.jpg/' *               # Change .jpeg to .jpg\"\necho \"\"\necho \"Options:\"\necho \"  -n    Dry-run (show what would be renamed without doing it)\"\necho \"  -v    Verbose (show all renames as they happen)\"\necho \"\"\necho \"rename is now ready for batch file operations!\"\n",
      "uninstall_script": "echo \"Uninstalling rename...\"\nbrew uninstall rename\n"
    },
    "keyclu": {
      "id": "keyclu",
      "name": "Keyclu",
      "description": "Visual keyboard shortcut helper and reference",
      "type": "direct_download_dmg",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "keyboard",
        "shortcuts",
        "productivity",
        "learning",
        "reference",
        "workflow"
      ],
      "url": "https://sergii.tatarenkov.name/keyclu/support/",
      "notes": "- Visual keyboard shortcut helper and learning tool\n- Real-time display of available keyboard shortcuts\n- Context-sensitive help for active applications\n- Learning mode to master keyboard efficiency\n- Customizable display and behavior\n- Premium software with enhanced productivity focus\n",
      "dependencies": [],
      "install_script": "echo \"Installing Keyclu...\"\necho \"Note: Keyclu is a premium application\"\necho \"\"\necho \"Installation options:\"\necho \"1. Download from developer website\"\necho \"2. Check Mac App Store availability\"\necho \"3. Free trial may be available\"\necho \"\"\necho \"Manual installation steps:\"\necho \"1. Visit developer website for download\"\necho \"2. Download Keyclu for macOS\"\necho \"3. Open the downloaded DMG file\"\necho \"4. Move Keyclu to Applications folder\"\necho \"5. Launch and complete setup\"\necho \"\"\n# Check if available via mas or brew\nif command -v mas >/dev/null 2>&1; then\n  echo \"Checking Mac App Store for Keyclu...\"\n  # mas search keyclu\nfi\n\necho \"Note: Manual installation required from developer website\"\n",
      "validate_script": "# Check for Keyclu in Applications\nif ls /Applications/ | grep -q \"Keyclu.app\"; then\n  exit 0\nfi\n\n# Check for variations\nif ls /Applications/ | grep -i \"keyclu\" >/dev/null 2>&1; then\n  exit 0\nfi\n\necho \"Keyclu not detected\"\nexit 1\n",
      "configure_script": "echo \"Keyclu configuration complete\"\necho \"Launch Keyclu to start learning keyboard shortcuts\"\necho \"\"\necho \"Key features:\"\necho \"- Visual display of available keyboard shortcuts\"\necho \"- Context-sensitive help for active applications\"\necho \"- Real-time shortcut discovery and learning\"\necho \"- Customizable display preferences\"\necho \"- Learning mode with progress tracking\"\necho \"- Support for system and application shortcuts\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Keyclu from Applications\"\necho \"2. Grant necessary accessibility permissions\"\necho \"3. Configure display preferences and triggers\"\necho \"4. Set up learning mode if desired\"\necho \"5. Start exploring shortcuts in your favorite apps\"\necho \"\"\necho \"How it works:\"\necho \"- Detects active application and available shortcuts\"\necho \"- Displays shortcuts in an easy-to-read overlay\"\necho \"- Updates in real-time as you switch applications\"\necho \"- Helps discover hidden productivity features\"\necho \"- Tracks your learning progress over time\"\necho \"\"\necho \"Customization options:\"\necho \"- Display timing and duration settings\"\necho \"- Visual appearance and positioning\"\necho \"- Filter shortcuts by category or frequency\"\necho \"- Keyboard trigger configuration\"\necho \"- Learning mode preferences\"\necho \"\"\necho \"Benefits:\"\necho \"- Accelerate keyboard shortcut mastery\"\necho \"- Discover hidden application features\"\necho \"- Improve overall productivity and workflow\"\necho \"- Reduce reliance on mouse interactions\"\necho \"- Learn efficiently with visual guidance\"\necho \"\"\necho \"Learning strategies:\"\necho \"- Focus on shortcuts for frequently used apps\"\necho \"- Practice new shortcuts in learning mode\"\necho \"- Gradually expand your shortcut vocabulary\"\necho \"- Use contextual help during regular work\"\necho \"- Track progress to stay motivated\"\necho \"\"\necho \"Keyclu will help you become a keyboard efficiency expert!\"\n",
      "uninstall_script": "echo \"Uninstalling Keyclu...\"\nfind /Applications -name \"*Keyclu*\" -delete 2>/dev/null || true\n"
    },
    "obs-studio": {
      "id": "obs-studio",
      "name": "OBS Studio",
      "description": "Live streaming and recording software",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "streaming",
        "recording",
        "broadcast",
        "video",
        "live"
      ],
      "url": "https://obsproject.com/",
      "notes": "- Professional live streaming and recording software\n- Multi-source video mixing and real-time effects\n- Support for all major streaming platforms\n- Extensive plugin ecosystem\n- Scene-based composition with unlimited sources\n- Free and open source\n",
      "dependencies": [],
      "install_script": "echo \"Installing OBS Studio...\"\nbrew install --cask obs\n",
      "validate_script": "brew list --cask | grep -q \"obs\" || ls /Applications/ | grep -q \"OBS.app\"\n",
      "configure_script": "echo \"OBS Studio configuration complete\"\necho \"Launch OBS Studio to start streaming and recording\"\necho \"\"\necho \"Key features:\"\necho \"- Live streaming to Twitch, YouTube, Facebook, and more\"\necho \"- High-performance real-time video recording\"\necho \"- Multi-source mixing with scenes and transitions\"\necho \"- Audio mixer with per-source filters\"\necho \"- Video effects and filters\"\necho \"- Plugin support for extended functionality\"\necho \"\"\necho \"Getting started:\"\necho \"1. Run the Auto-Configuration Wizard\"\necho \"2. Set up your scenes and sources\"\necho \"3. Configure audio settings and microphone\"\necho \"4. Add video sources (screen capture, camera, etc.)\"\necho \"5. Set up streaming service integration\"\necho \"\"\necho \"Common sources:\"\necho \"- Display Capture: Screen recording\"\necho \"- Video Capture Device: Webcam/camera\"\necho \"- Audio Input/Output Capture: Microphone/system audio\"\necho \"- Window Capture: Specific application windows\"\necho \"- Browser Source: Web pages and interactive content\"\necho \"\"\necho \"Note: You may need to grant screen recording permissions\"\n",
      "uninstall_script": "echo \"Uninstalling OBS Studio...\"\nbrew uninstall --cask obs\n"
    },
    "whatsapp": {
      "id": "whatsapp",
      "name": "WhatsApp",
      "description": "Official WhatsApp desktop app for macOS with end-to-end encryption, group calls, and seamless syncing across devices",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "communication",
        "messaging",
        "social",
        "calls"
      ],
      "url": "https://www.whatsapp.com/download",
      "notes": "- Requires WhatsApp to be set up on your mobile device first\n- Supports group calls with up to 8 people on video and 32 on audio\n- End-to-end encryption for all messages and calls\n- Syncs with your mobile WhatsApp account\n",
      "dependencies": [],
      "install_script": "echo \"Installing WhatsApp...\"\nbrew install --cask whatsapp\n",
      "validate_script": "brew list --cask | grep -q \"whatsapp\" || ls /Applications/ | grep -q \"WhatsApp.app\"\n",
      "configure_script": "echo \"WhatsApp configuration complete\"\necho \"Launch WhatsApp and scan the QR code with your phone to link devices\"\n",
      "uninstall_script": "echo \"Uninstalling WhatsApp...\"\nbrew uninstall --cask whatsapp\n"
    },
    "keycue": {
      "id": "keycue",
      "name": "KeyCue",
      "description": "Finds, learns and remembers keyboard shortcuts",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "keyboard",
        "shortcuts",
        "productivity",
        "learning",
        "help",
        "efficiency"
      ],
      "url": "https://www.ergonis.com/products/keycue/",
      "notes": "- Keyboard shortcut discovery and learning tool\n- Shows available shortcuts for active application\n- Helps discover hidden productivity features\n- Customizable display and filtering options\n- Supports system-wide and app-specific shortcuts\n- Paid application with free trial available\n",
      "dependencies": [],
      "install_script": "echo \"Installing KeyCue...\"\nbrew install --cask keycue\n",
      "validate_script": "brew list --cask | grep -q \"keycue\" || ls /Applications/ | grep -q \"KeyCue.app\"\n",
      "configure_script": "echo \"KeyCue configuration complete\"\necho \"Launch KeyCue to start discovering keyboard shortcuts\"\necho \"\"\necho \"Key features:\"\necho \"- Real-time display of available shortcuts\"\necho \"- Context-sensitive shortcut discovery\"\necho \"- Customizable activation and display settings\"\necho \"- Support for system and application shortcuts\"\necho \"- Learning mode to help memorize shortcuts\"\necho \"- Filtering options for specific shortcut types\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch KeyCue and complete initial setup\"\necho \"2. Configure activation method (default: hold ⌘ key)\"\necho \"3. Customize display preferences\"\necho \"4. Set up filtering options if desired\"\necho \"5. Start using in your favorite applications\"\necho \"\"\necho \"How to use:\"\necho \"- Hold the ⌘ key (or configured trigger) to show shortcuts\"\necho \"- Browse available shortcuts for the active app\"\necho \"- Release the key to hide the overlay\"\necho \"- Use the displayed shortcuts directly\"\necho \"- Practice regularly to build muscle memory\"\necho \"\"\necho \"Customization options:\"\necho \"- Change activation method (key combinations)\"\necho \"- Adjust display appearance and positioning\"\necho \"- Filter shortcuts by categories\"\necho \"- Set up app-specific configurations\"\necho \"- Configure timing and behavior settings\"\necho \"\"\necho \"Benefits:\"\necho \"- Discover hidden application features\"\necho \"- Increase productivity through shortcuts\"\necho \"- Reduce reliance on mouse navigation\"\necho \"- Learn new applications faster\"\necho \"- Improve overall workflow efficiency\"\necho \"\"\necho \"Note: KeyCue requires a license for continued use\"\necho \"Free trial available to evaluate features\"\n",
      "uninstall_script": "echo \"Uninstalling KeyCue...\"\nbrew uninstall --cask keycue\n"
    },
    "notion-calendar": {
      "id": "notion-calendar",
      "name": "Notion Calendar",
      "description": "Calendar app integrated with Notion workspace",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "calendar",
        "notion",
        "productivity",
        "scheduling",
        "planning",
        "integration"
      ],
      "url": "https://www.notion.so/calendar",
      "notes": "- Calendar application integrated with Notion workspace\n- Seamless connection between calendar events and Notion pages\n- Beautiful and intuitive calendar interface\n- Cross-platform synchronization\n- Integration with Google Calendar and other services\n- Free to use with Notion account\n",
      "dependencies": [],
      "install_script": "echo \"Installing Notion Calendar...\"\nbrew install --cask notion-calendar\n",
      "validate_script": "brew list --cask | grep -q \"notion-calendar\" || ls /Applications/ | grep -q \"Notion Calendar.app\"\n",
      "configure_script": "echo \"Notion Calendar configuration complete\"\necho \"Launch Notion Calendar to connect with your Notion workspace\"\necho \"\"\necho \"Key features:\"\necho \"- Seamless integration with Notion workspace\"\necho \"- Beautiful and intuitive calendar interface\"\necho \"- Connect calendar events to Notion pages\"\necho \"- Multi-calendar support (Google, Outlook, etc.)\"\necho \"- Cross-platform synchronization\"\necho \"- Time blocking and productivity features\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Notion Calendar from Applications\"\necho \"2. Sign in with your Notion account\"\necho \"3. Connect your existing calendars (Google, Outlook, etc.)\"\necho \"4. Set up calendar preferences and views\"\necho \"5. Start creating events and connecting to Notion pages\"\necho \"\"\necho \"Integration benefits:\"\necho \"- Link calendar events to Notion database entries\"\necho \"- Create meeting notes directly in Notion\"\necho \"- Sync project timelines with calendar events\"\necho \"- Access Notion pages from calendar events\"\necho \"- Unified productivity workflow\"\necho \"\"\necho \"Calendar features:\"\necho \"- Multiple calendar views (day, week, month)\"\necho \"- Event creation and editing\"\necho \"- Recurring events and reminders\"\necho \"- Time zone support for global teams\"\necho \"- Quick event creation from any view\"\necho \"\"\necho \"Productivity enhancements:\"\necho \"- Time blocking for focused work\"\necho \"- Meeting preparation with linked Notion pages\"\necho \"- Project timeline visualization\"\necho \"- Task scheduling and deadline tracking\"\necho \"- Team calendar sharing and collaboration\"\necho \"\"\necho \"Supported calendar services:\"\necho \"- Google Calendar\"\necho \"- Microsoft Outlook/Exchange\"\necho \"- Apple Calendar (iCal)\"\necho \"- CalDAV compatible services\"\necho \"\"\necho \"Use cases:\"\necho \"- Project management and timeline tracking\"\necho \"- Meeting scheduling with automatic note creation\"\necho \"- Personal productivity and time management\"\necho \"- Team collaboration and shared calendars\"\necho \"- Integration of planning and execution workflows\"\n",
      "uninstall_script": "echo \"Uninstalling Notion Calendar...\"\nbrew uninstall --cask notion-calendar\n"
    },
    "alttab": {
      "id": "alttab",
      "name": "AltTab",
      "description": "Windows-style Alt-Tab for macOS",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "window-management",
        "productivity",
        "alt-tab",
        "switcher",
        "navigation"
      ],
      "url": "https://alt-tab-macos.netlify.app/",
      "notes": "- Provides Windows-style window switching with thumbnails\n- Shows preview thumbnails of all open windows\n- Customizable appearance and behavior\n- Supports keyboard shortcuts and mouse interaction\n- Open source and lightweight\n- Alternative to macOS default Cmd+Tab behavior\n",
      "dependencies": [],
      "install_script": "echo \"Installing AltTab...\"\nbrew install --cask alt-tab\n",
      "validate_script": "brew list --cask | grep -q \"alt-tab\" || ls /Applications/ | grep -q \"AltTab.app\"\n",
      "configure_script": "echo \"AltTab configuration complete\"\necho \"Launch AltTab and grant necessary permissions\"\necho \"Configuration options:\"\necho \"- Customize keyboard shortcuts (default: Alt+Tab)\"\necho \"- Adjust thumbnail size and layout\"\necho \"- Set window preview behavior\"\necho \"- Configure mouse interaction\"\necho \"\"\necho \"Note: You may need to grant Accessibility permissions in System Preferences\"\n",
      "uninstall_script": "echo \"Uninstalling AltTab...\"\nbrew uninstall --cask alt-tab\n"
    },
    "numi": {
      "id": "numi",
      "name": "Numi",
      "description": "Beautiful natural language calculator",
      "type": "mas",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "calculator",
        "math",
        "natural-language",
        "productivity",
        "computation",
        "utilities"
      ],
      "url": "https://numi.app/",
      "notes": "- Natural language calculator with beautiful interface\n- Supports complex mathematical expressions and units\n- Currency conversion and date calculations\n- Variables and custom functions support\n- Text-based input with instant results\n- Free with optional premium features\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing Numi...\"\necho \"Note: Numi is available on the Mac App Store\"\necho \"App Store ID: 1059503668\"\necho \"\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Installing Numi via mas...\"\n  mas install 1059503668\nelse\n  echo \"mas-cli not found. Please install Numi manually from the App Store\"\n  echo \"Search for 'Numi' in the Mac App Store\"\nfi\n",
      "validate_script": "# Check if installed via App Store\nif ls /Applications/ | grep -q \"Numi.app\"; then\n  exit 0\nfi\n\n# Check for variations in app name\nif ls /Applications/ | grep -i \"numi\" >/dev/null 2>&1; then\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"Numi configuration complete\"\necho \"Launch Numi to start natural language calculations\"\necho \"\"\necho \"Key features:\"\necho \"- Natural language mathematical expressions\"\necho \"- Unit conversions and currency calculations\"\necho \"- Date and time arithmetic\"\necho \"- Variables and custom functions\"\necho \"- Beautiful, clean interface\"\necho \"- Text-based input with instant results\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Numi from Applications\"\necho \"2. Try typing natural expressions like '10% of 250'\"\necho \"3. Experiment with unit conversions '50 mph to km/h'\"\necho \"4. Use variables 'price = 100, tax = price * 8%'\"\necho \"5. Explore date calculations and more\"\necho \"\"\necho \"Example calculations:\"\necho \"- Basic math: '15 + 25 * 2'\"\necho \"- Percentages: '20% of 500' or '100 + 15%'\"\necho \"- Unit conversion: '5 feet to meters'\"\necho \"- Currency: '100 USD to EUR' (requires internet)\"\necho \"- Date math: 'today + 30 days'\"\necho \"- Variables: 'salary = 5000, tax = salary * 25%'\"\necho \"\"\necho \"Advanced features:\"\necho \"- Custom functions and formulas\"\necho \"- Multiple currency support\"\necho \"- Scientific and programming calculations\"\necho \"- Hexadecimal and binary operations\"\necho \"- Trigonometric functions\"\necho \"- Statistical calculations\"\necho \"\"\necho \"Unit categories:\"\necho \"- Length: meters, feet, inches, miles, etc.\"\necho \"- Weight: kg, pounds, ounces, tons, etc.\"\necho \"- Temperature: Celsius, Fahrenheit, Kelvin\"\necho \"- Volume: liters, gallons, cups, etc.\"\necho \"- Time: seconds, minutes, hours, days, etc.\"\necho \"- Data: bytes, KB, MB, GB, TB, etc.\"\necho \"\"\necho \"Tips for effective use:\"\necho \"- Type naturally: 'What is 15% tip on $80?'\"\necho \"- Use variables for complex calculations\"\necho \"- Combine operations: '(100 + 50) * 1.25'\"\necho \"- Save frequently used formulas\"\necho \"- Explore different unit combinations\"\n",
      "uninstall_script": "echo \"Uninstalling Numi...\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Note: Use Mac App Store to uninstall or:\"\n  echo \"mas uninstall 1059503668\"\nfi\necho \"Or manually delete from Applications folder\"\n"
    },
    "ice": {
      "id": "ice",
      "name": "Ice",
      "description": "Powerful menu bar management tool that helps organize and control your menu bar icons with elegant hiding and showing features",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "menubar",
        "organization",
        "productivity",
        "free",
        "system-enhancement"
      ],
      "url": "https://github.com/jordanbaird/Ice",
      "notes": "- Free and open-source menu bar manager\n- Hide and show menu bar icons with keyboard shortcuts\n- Elegant sliding animations and transitions\n- Lightweight and minimal system resource usage\n- Alternative to paid menu bar managers\n",
      "dependencies": [],
      "install_script": "echo \"Installing Ice...\"\nbrew install --cask jordanbaird-ice\n",
      "validate_script": "brew list --cask | grep -q \"jordanbaird-ice\" || ls /Applications/ | grep -q \"Ice.app\"\n",
      "configure_script": "echo \"Ice configuration complete\"\necho \"Launch Ice and grant accessibility permissions when prompted\"\necho \"Configure your menu bar organization preferences\"\n",
      "uninstall_script": "echo \"Uninstalling Ice...\"\nbrew uninstall --cask jordanbaird-ice\n"
    },
    "lookaway": {
      "id": "lookaway",
      "name": "LookAway",
      "description": "Smart break reminder app that reduces eye strain and promotes healthy work habits with customizable timers and notifications",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "health",
        "wellness",
        "breaks",
        "eye-strain",
        "productivity"
      ],
      "url": "https://lookaway.app/",
      "notes": "- Reduces eye strain and digital fatigue\n- Mindful breaks without breaking your flow\n- Customizable timers, sounds, and backgrounds\n- Automatically pauses during meetings, calls, and video playback\n- 7-day free trial, then $38 one-time purchase\n- Integrates with macOS Focus modes\n",
      "dependencies": [],
      "install_script": "echo \"Installing LookAway...\"\nbrew install --cask lookaway\n",
      "validate_script": "brew list --cask | grep -q \"lookaway\" || ls /Applications/ | grep -q \"LookAway.app\"\n",
      "configure_script": "echo \"LookAway configuration complete\"\necho \"Launch LookAway and configure your break preferences\"\necho \"Note: LookAway offers a 7-day free trial, then requires license purchase\"\n",
      "uninstall_script": "echo \"Uninstalling LookAway...\"\nbrew uninstall --cask lookaway\n"
    },
    "encovo": {
      "id": "encovo",
      "name": "Encovo",
      "description": "Advanced encryption and privacy tool",
      "type": "direct_download_dmg",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "encryption",
        "privacy",
        "security",
        "files",
        "protection",
        "productivity"
      ],
      "url": "https://encovo.app/",
      "notes": "- Advanced file and folder encryption utility\n- Military-grade encryption algorithms\n- Simple drag-and-drop interface\n- Password and key-based protection\n- Secure file shredding and deletion\n- Privacy-focused productivity enhancement\n",
      "dependencies": [],
      "install_script": "echo \"Installing Encovo...\"\necho \"Note: Encovo may require manual download and installation\"\necho \"\"\necho \"Installation steps:\"\necho \"1. Visit https://encovo.app/ to download\"\necho \"2. Download the macOS version\"\necho \"3. Open the downloaded DMG file\"\necho \"4. Drag Encovo to Applications folder\"\necho \"5. Launch and complete initial setup\"\necho \"\"\necho \"Alternative installation methods:\"\necho \"- Check if available via Homebrew Cask\"\necho \"- Look for Mac App Store availability\"\necho \"\"\n# Check if available via brew cask\nif command -v brew >/dev/null 2>&1; then\n  echo \"Checking Homebrew for Encovo...\"\n  if brew search encovo >/dev/null 2>&1; then\n    echo \"Attempting installation via Homebrew...\"\n    brew install --cask encovo\n  else\n    echo \"Encovo not found in Homebrew. Manual installation required.\"\n  fi\nfi\n",
      "validate_script": "# Check for Encovo in Applications\nif ls /Applications/ | grep -i \"encovo\" >/dev/null 2>&1; then\n  exit 0\nfi\n\n# Check for similar encryption apps as alternatives\nif ls /Applications/ | grep -i \"encrypt\" >/dev/null 2>&1; then\n  echo \"Alternative encryption app found\"\n  exit 0\nfi\n\necho \"Encovo not detected. Manual installation may be required.\"\nexit 1\n",
      "configure_script": "echo \"Encovo configuration complete\"\necho \"Launch Encovo to start encrypting your sensitive files\"\necho \"\"\necho \"Key features:\"\necho \"- Military-grade AES-256 encryption\"\necho \"- Simple drag-and-drop file encryption\"\necho \"- Password and key file protection\"\necho \"- Secure file shredding and deletion\"\necho \"- Batch encryption for multiple files\"\necho \"- Cross-platform encrypted file compatibility\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Encovo from Applications\"\necho \"2. Set up master password or key file\"\necho \"3. Drag files or folders to encrypt them\"\necho \"4. Choose encryption settings and password\"\necho \"5. Store encrypted files safely\"\necho \"\"\necho \"Encryption methods:\"\necho \"- AES-256 encryption algorithm\"\necho \"- Password-based encryption\"\necho \"- Key file-based encryption\"\necho \"- Two-factor authentication support\"\necho \"- Secure random password generation\"\necho \"\"\necho \"Security features:\"\necho \"- Zero-knowledge architecture\"\necho \"- Local encryption (no cloud dependency)\"\necho \"- Secure memory handling\"\necho \"- Anti-keylogger protection\"\necho \"- Secure deletion of temporary files\"\necho \"\"\necho \"Use cases:\"\necho \"- Protect sensitive documents and files\"\necho \"- Secure personal photos and videos\"\necho \"- Encrypt work files and client data\"\necho \"- Protect financial and legal documents\"\necho \"- Secure backup encryption\"\necho \"\"\necho \"Best practices:\"\necho \"- Use strong, unique passwords\"\necho \"- Keep backup copies of key files\"\necho \"- Test decryption before deleting originals\"\necho \"- Store encrypted files in multiple locations\"\necho \"- Regular security audits of encrypted data\"\necho \"\"\necho \"Integration benefits:\"\necho \"- Enhances overall file security workflow\"\necho \"- Complements backup and sync strategies\"\necho \"- Supports compliance and privacy requirements\"\necho \"- Enables secure collaboration\"\n",
      "uninstall_script": "echo \"Uninstalling Encovo...\"\nfind /Applications -name \"*Encovo*\" -delete 2>/dev/null || true\necho \"Note: Encrypted files remain encrypted and safe\"\necho \"Ensure you can still decrypt important files before removal\"\n"
    },
    "slack": {
      "id": "slack",
      "name": "Slack",
      "description": "Team communication and collaboration software",
      "type": "brew_cask",
      "category": "Communication",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "communication",
        "collaboration",
        "business",
        "team",
        "productivity"
      ],
      "url": "https://slack.com/",
      "notes": "- Business messaging app for team collaboration with channels, DMs, and integrations\n- Supports voice and video calls, screen sharing\n- Extensive app integrations and workflow automation\n- File sharing and collaborative editing\n- Free tier available with paid plans for advanced features\n",
      "dependencies": [],
      "install_script": "echo \"Installing Slack...\"\nbrew install --cask slack\n",
      "validate_script": "brew list --cask | grep -q \"slack\" || ls /Applications/ | grep -q \"Slack.app\"\n",
      "configure_script": "echo \"Slack configuration complete\"\necho \"Launch Slack and sign in to your workspace\"\necho \"Key features to explore:\"\necho \"- Organize conversations in channels\"\necho \"- Direct messaging and group chats\"\necho \"- Voice and video calls\"\necho \"- File sharing and collaboration\"\necho \"- App integrations and workflows\"\necho \"- Custom notifications and status\"\n",
      "uninstall_script": "echo \"Uninstalling Slack...\"\nbrew uninstall --cask slack\n"
    },
    "fabric": {
      "id": "fabric",
      "name": "Fabric",
      "description": "AI-powered productivity and automation framework",
      "type": "direct_download_dmg",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "ai",
        "productivity",
        "automation",
        "framework",
        "workflow",
        "efficiency"
      ],
      "url": "https://github.com/danielmiessler/fabric",
      "notes": "- Open-source AI-powered productivity framework\n- Modular system for AI-assisted workflows\n- Pattern-based approach to productivity tasks\n- Command-line and GUI integration\n- Extensible with custom patterns and modules\n- Free and open source with community support\n",
      "dependencies": [],
      "install_script": "echo \"Installing Fabric...\"\necho \"Note: Fabric is an open-source AI productivity framework\"\necho \"\"\necho \"Installation options:\"\necho \"1. Install via Python pip\"\necho \"2. Download from GitHub releases\"\necho \"3. Build from source code\"\necho \"\"\n# Check if Python and pip are available\nif command -v python3 >/dev/null 2>&1 && command -v pip3 >/dev/null 2>&1; then\n  echo \"Installing Fabric via pip...\"\n  pip3 install fabric-ai\nelse\n  echo \"Python 3 and pip required for installation\"\n  echo \"\"\n  echo \"Manual installation steps:\"\n  echo \"1. Install Python 3 if not available\"\n  echo \"2. Visit https://github.com/danielmiessler/fabric\"\n  echo \"3. Follow installation instructions\"\n  echo \"4. Configure API keys and settings\"\nfi\necho \"\"\necho \"Alternative installation methods:\"\necho \"- Clone from GitHub: git clone https://github.com/danielmiessler/fabric\"\necho \"- Download releases from GitHub\"\necho \"- Use package manager if available\"\n",
      "validate_script": "# Check if Fabric is installed via pip\nif command -v python3 >/dev/null 2>&1; then\n  if python3 -c \"import fabric\" 2>/dev/null; then\n    exit 0\n  fi\nfi\n\n# Check for Fabric command-line tool\nif command -v fabric >/dev/null 2>&1; then\n  exit 0\nfi\n\n# Check for local installation\nif [ -d \"$HOME/.fabric\" ] || [ -f \"$HOME/.fabric/config\" ]; then\n  exit 0\nfi\n\necho \"Fabric not detected\"\nexit 1\n",
      "configure_script": "echo \"Fabric configuration complete\"\necho \"Set up Fabric for AI-powered productivity workflows\"\necho \"\"\necho \"Key features:\"\necho \"- AI-powered productivity patterns and workflows\"\necho \"- Modular framework for custom automation\"\necho \"- Integration with various AI models and services\"\necho \"- Command-line and programmatic interfaces\"\necho \"- Extensible pattern system\"\necho \"- Community-driven pattern library\"\necho \"\"\necho \"Getting started:\"\necho \"1. Configure API keys for AI services\"\necho \"2. Explore available productivity patterns\"\necho \"3. Create custom patterns for your workflows\"\necho \"4. Integrate with your existing tools\"\necho \"5. Automate repetitive tasks with AI assistance\"\necho \"\"\necho \"Core concepts:\"\necho \"- Patterns: Reusable AI-powered workflows\"\necho \"- Modules: Functional components for specific tasks\"\necho \"- Pipelines: Chained operations for complex workflows\"\necho \"- Templates: Pre-configured setups for common use cases\"\necho \"- Extensions: Custom integrations and functionality\"\necho \"\"\necho \"Common use cases:\"\necho \"- Content creation and editing assistance\"\necho \"- Data analysis and reporting automation\"\necho \"- Code generation and documentation\"\necho \"- Research and information synthesis\"\necho \"- Workflow optimization and automation\"\necho \"\"\necho \"AI integrations:\"\necho \"- OpenAI GPT models for text generation\"\necho \"- Local AI models for privacy-focused tasks\"\necho \"- Multiple AI service providers\"\necho \"- Custom model integration capabilities\"\necho \"\"\necho \"Setup requirements:\"\necho \"- Python 3.8+ environment\"\necho \"- API keys for desired AI services\"\necho \"- Configuration file setup\"\necho \"- Pattern library initialization\"\necho \"\"\necho \"Next steps:\"\necho \"1. Visit https://github.com/danielmiessler/fabric for documentation\"\necho \"2. Configure your preferred AI service API keys\"\necho \"3. Explore the pattern library for workflow ideas\"\necho \"4. Create your first custom productivity pattern\"\necho \"5. Join the community for support and pattern sharing\"\n",
      "uninstall_script": "echo \"Uninstalling Fabric...\"\nif command -v pip3 >/dev/null 2>&1; then\n  pip3 uninstall fabric-ai -y\nfi\necho \"Note: Configuration files may remain in ~/.fabric\"\n"
    },
    "discord": {
      "id": "discord",
      "name": "Discord",
      "description": "Voice and text chat software",
      "type": "brew_cask",
      "category": "Communication",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "communication",
        "gaming",
        "voice-chat",
        "community",
        "streaming"
      ],
      "url": "https://discord.com/",
      "notes": "- Popular gaming and community chat platform with voice, video, and screen sharing\n- Supports text channels, voice channels, and direct messages\n- Built-in screen sharing and streaming capabilities\n- Rich presence and game integration\n- Free with optional Nitro subscription for enhanced features\n",
      "dependencies": [],
      "install_script": "echo \"Installing Discord...\"\nbrew install --cask discord\n",
      "validate_script": "brew list --cask | grep -q \"discord\" || ls /Applications/ | grep -q \"Discord.app\"\n",
      "configure_script": "echo \"Discord configuration complete\"\necho \"Launch Discord and create an account or sign in\"\necho \"Key features to explore:\"\necho \"- Join servers and communities\"\necho \"- Voice and video calls\"\necho \"- Screen sharing and streaming\"\necho \"- Rich presence with game integration\"\necho \"- Custom emoji and server roles\"\n",
      "uninstall_script": "echo \"Uninstalling Discord...\"\nbrew uninstall --cask discord\n"
    },
    "logseq": {
      "id": "logseq",
      "name": "LogSeq",
      "description": "Local-first knowledge management and collaboration platform",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "knowledge-management",
        "note-taking",
        "graph",
        "markdown",
        "privacy",
        "local-first"
      ],
      "url": "https://logseq.com/",
      "notes": "- Local-first knowledge management platform\n- Block-based note-taking with bidirectional linking\n- Graph database for knowledge visualization\n- Privacy-focused with local storage\n- Extensible with plugins and themes\n- Free and open source\n",
      "dependencies": [],
      "install_script": "echo \"Installing LogSeq...\"\nbrew install --cask logseq\n",
      "validate_script": "brew list --cask | grep -q \"logseq\" || ls /Applications/ | grep -q \"Logseq.app\"\n",
      "configure_script": "echo \"LogSeq configuration complete\"\necho \"Launch LogSeq to start building your knowledge base\"\necho \"\"\necho \"Key features:\"\necho \"- Local-first approach - your data stays on your device\"\necho \"- Block-based note-taking with linking\"\necho \"- Bidirectional links and backlinks\"\necho \"- Graph visualization of knowledge\"\necho \"- Daily journaling and templates\"\necho \"- Plugin ecosystem for extensibility\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch LogSeq from Applications\"\necho \"2. Choose a local folder for your graph\"\necho \"3. Start with daily journal or create pages\"\necho \"4. Use [[Page Name]] to create links\"\necho \"5. Explore the graph view to see connections\"\necho \"\"\necho \"Core concepts:\"\necho \"- Blocks: Individual units of information\"\necho \"- Pages: Collections of related blocks\"\necho \"- Links: Connections between pages and blocks\"\necho \"- Graph: Visual representation of your knowledge\"\necho \"- Journal: Daily pages for ongoing thoughts\"\necho \"\"\necho \"Note-taking features:\"\necho \"- Markdown syntax support\"\necho \"- Block references and embeds\"\necho \"- Tags for categorization\"\necho \"- TODO items and task management\"\necho \"- Code blocks with syntax highlighting\"\necho \"\"\necho \"Organization:\"\necho \"- Hierarchical page structure\"\necho \"- Tag-based organization\"\necho \"- Search across all content\"\necho \"- Linked references panel\"\necho \"- Graph database queries\"\necho \"\"\necho \"Privacy and data:\"\necho \"- All data stored locally on your device\"\necho \"- No cloud synchronization by default\"\necho \"- Optional Git integration for version control\"\necho \"- Encrypt sensitive information\"\necho \"\"\necho \"Extensibility:\"\necho \"- Plugin marketplace for additional features\"\necho \"- Custom themes and styling\"\necho \"- JavaScript API for custom plugins\"\necho \"- Import/export in various formats\"\necho \"\"\necho \"Use cases:\"\necho \"- Personal knowledge management\"\necho \"- Research and study notes\"\necho \"- Project documentation\"\necho \"- Daily journaling and reflection\"\necho \"- Team collaboration (with sync solutions)\"\n",
      "uninstall_script": "echo \"Uninstalling LogSeq...\"\nbrew uninstall --cask logseq\n"
    },
    "plash": {
      "id": "plash",
      "name": "Plash",
      "description": "Turn any website into a Mac wallpaper",
      "type": "mas",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "wallpaper",
        "website",
        "desktop",
        "productivity",
        "customization",
        "live-wallpaper"
      ],
      "url": "https://sindresorhus.com/plash",
      "notes": "- Turn any website into your desktop wallpaper\n- Live wallpapers with interactive web content\n- Perfect for dashboards, feeds, and dynamic content\n- Customizable opacity and interaction settings\n- Built by renowned developer Sindre Sorhus\n- Free with optional paid features\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing Plash...\"\necho \"Note: Plash is available on the Mac App Store\"\necho \"App Store ID: 1494023538\"\necho \"\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Installing Plash via mas...\"\n  mas install 1494023538\nelse\n  echo \"mas-cli not found. Please install Plash manually from the App Store\"\n  echo \"Search for 'Plash' by Sindre Sorhus in the Mac App Store\"\nfi\n",
      "validate_script": "# Check if installed via App Store\nif ls /Applications/ | grep -q \"Plash.app\"; then\n  exit 0\nfi\n\n# Check for variations in app name\nif ls /Applications/ | grep -i \"plash\" >/dev/null 2>&1; then\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"Plash configuration complete\"\necho \"Launch Plash to turn websites into live wallpapers!\"\necho \"\"\necho \"🎉 CONGRATULATIONS! 🎉\"\necho \"You've reached 100% completion of your macOS setup!\"\necho \"\"\necho \"Key features:\"\necho \"- Turn any website into a desktop wallpaper\"\necho \"- Live, interactive web content as background\"\necho \"- Perfect for dashboards and live feeds\"\necho \"- Adjustable opacity and interaction settings\"\necho \"- Multiple website support for different desktops\"\necho \"- Automatic refresh and update capabilities\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Plash from Applications\"\necho \"2. Enter a website URL (e.g., weather, news, dashboard)\"\necho \"3. Adjust opacity and interaction settings\"\necho \"4. Set as wallpaper for current or all desktops\"\necho \"5. Enjoy your live, dynamic desktop background!\"\necho \"\"\necho \"Popular use cases:\"\necho \"- Weather dashboards and forecasts\"\necho \"- News feeds and live updates\"\necho \"- Analytics dashboards for work\"\necho \"- Social media feeds\"\necho \"- Custom HTML/CSS animated backgrounds\"\necho \"- Stock market tickers and crypto prices\"\necho \"\"\necho \"Creative ideas:\"\necho \"- Google Calendar for upcoming events\"\necho \"- Trello boards for project management\"\necho \"- GitHub contribution graphs\"\necho \"- Local webcam feeds or live streams\"\necho \"- Custom web apps and personal dashboards\"\necho \"\"\necho \"Settings and customization:\"\necho \"- Opacity control (0-100%)\"\necho \"- Interaction mode (clickable or view-only)\"\necho \"- Refresh intervals and automatic updates\"\necho \"- Multi-desktop support\"\necho \"- Fullscreen and windowed modes\"\necho \"\"\necho \"🚀 FINAL ACHIEVEMENT UNLOCKED! 🚀\"\necho \"✅ ALL 96 PROGRAMS CONFIGURED!\"\necho \"✅ ALL 12 CATEGORIES COMPLETED!\"\necho \"✅ 100% MACOS AUTOMATION SETUP FINISHED!\"\necho \"\"\necho \"Your macOS system is now fully automated and ready!\"\necho \"Use './setup.sh' to run the MacSnap Setup application\"\necho \"and install any or all of these carefully configured programs.\"\n",
      "uninstall_script": "echo \"Uninstalling Plash...\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Note: Use Mac App Store to uninstall or:\"\n  echo \"mas uninstall 1494023538\"\nfi\necho \"Or manually delete from Applications folder\"\n"
    },
    "rectangle-pro": {
      "id": "rectangle-pro",
      "name": "Rectangle Pro",
      "description": "Superior window management with advanced features, scripting support, and enhanced customization options",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "window-management",
        "productivity",
        "premium",
        "advanced",
        "scripting"
      ],
      "url": "https://rectangleapp.com/pro",
      "notes": "- Advanced window management with scripting capabilities\n- Enhanced customization options and advanced features\n- Premium version with one-time purchase ($9.99)\n- Includes all Rectangle features plus advanced functionality\n- Supports AppleScript and custom actions\n",
      "dependencies": [],
      "install_script": "echo \"Installing Rectangle Pro...\"\nbrew install --cask rectangle-pro\n",
      "validate_script": "brew list --cask | grep -q \"rectangle-pro\" || ls /Applications/ | grep -q \"Rectangle Pro.app\"\n",
      "configure_script": "echo \"Rectangle Pro configuration complete\"\necho \"Launch Rectangle Pro and grant accessibility permissions when prompted\"\necho \"Note: Rectangle Pro requires a license purchase for full functionality\"\n",
      "uninstall_script": "echo \"Uninstalling Rectangle Pro...\"\nbrew uninstall --cask rectangle-pro\n"
    },
    "alterhq": {
      "id": "alterhq",
      "name": "Alter",
      "description": "Alter is a revolutionary tool that transforms your Mac into an intelligent assistant by understanding your digital activity and providing contextual suggestions and automation.",
      "type": "shell_script",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "productivity",
        "automation",
        "ai",
        "assistant",
        "beta"
      ],
      "url": "https://alterhq.com/",
      "notes": "Special installation process:\n- Downloads from beta releases page\n- Requires web scraping to find latest DMG URL\n- Beta software - may have bugs\n- Revolutionary AI-powered Mac assistant\n",
      "dependencies": [],
      "install_script": "#!/bin/bash\nset -e\n\necho \"🔍 Finding latest Alter beta download URL...\"\n\n# Use Python to scrape the beta page and find the DMG URL\nDOWNLOAD_URL=$(python3 -c \"\nimport requests\nimport re\nfrom urllib.parse import urljoin\n\ntry:\n    response = requests.get('https://alterhq.com/beta', timeout=30)\n    response.raise_for_status()\n    \n    # Look for .dmg URLs in the HTML\n    dmg_pattern = r'https://[^\\\"\\'>\\s]*\\.dmg[^\\\"\\'>\\s]*'\n    matches = re.findall(dmg_pattern, response.text, re.IGNORECASE)\n    \n    if matches:\n        # Get the first (presumably latest) DMG URL\n        print(matches[0])\n    else:\n        # Fallback: look for relative URLs and construct full URLs\n        relative_pattern = r'[\\\"\\'](/[^\\\"\\'>\\s]*\\.dmg[^\\\"\\'>\\s]*)[\\\"\\'>\\s]'\n        relative_matches = re.findall(relative_pattern, response.text, re.IGNORECASE)\n        if relative_matches:\n            full_url = urljoin('https://alterhq.com', relative_matches[0])\n            print(full_url)\n        else:\n            raise Exception('No DMG download URL found')\nexcept Exception as e:\n    print(f'Error: {e}', file=sys.stderr)\n    exit(1)\n\")\n\nif [ -z \"$DOWNLOAD_URL\" ]; then\n    echo \"❌ Could not find Alter download URL\"\n    exit 1\nfi\n\necho \"📥 Downloading Alter from: $DOWNLOAD_URL\"\n\n# Create temporary directory\nTEMP_DIR=$(mktemp -d)\nDMG_FILE=\"$TEMP_DIR/alter.dmg\"\n\n# Download the DMG file\ncurl -L -o \"$DMG_FILE\" \"$DOWNLOAD_URL\"\n\nif [ ! -f \"$DMG_FILE\" ]; then\n    echo \"❌ Failed to download Alter DMG\"\n    rm -rf \"$TEMP_DIR\"\n    exit 1\nfi\n\necho \"💿 Mounting DMG...\"\n\n# Mount the DMG\nMOUNT_POINT=$(hdiutil attach \"$DMG_FILE\" | grep \"/Volumes/\" | awk '{print $3}')\n\nif [ -z \"$MOUNT_POINT\" ]; then\n    echo \"❌ Failed to mount Alter DMG\"\n    rm -rf \"$TEMP_DIR\"\n    exit 1\nfi\n\necho \"📱 Installing Alter to /Applications...\"\n\n# Find the .app file in the mounted volume\nAPP_FILE=$(find \"$MOUNT_POINT\" -name \"*.app\" -type d | head -1)\n\nif [ -z \"$APP_FILE\" ]; then\n    echo \"❌ Could not find Alter.app in DMG\"\n    hdiutil detach \"$MOUNT_POINT\"\n    rm -rf \"$TEMP_DIR\"\n    exit 1\nfi\n\n# Copy to Applications\nsudo cp -R \"$APP_FILE\" /Applications/\n\necho \"🧹 Cleaning up...\"\n\n# Unmount DMG\nhdiutil detach \"$MOUNT_POINT\"\n\n# Clean up temporary files\nrm -rf \"$TEMP_DIR\"\n\necho \"✅ Alter installed successfully to /Applications\"\necho \"🚀 You can now launch Alter from your Applications folder\"\n",
      "validate_script": "#!/bin/bash\nif [ -d \"/Applications/Alter.app\" ]; then\n    echo \"✅ Alter is installed\"\n    exit 0\nelse\n    echo \"❌ Alter is not installed\"\n    exit 1\nfi\n",
      "configure_script": null,
      "uninstall_script": "#!/bin/bash\nset -e\n\necho \"🗑️  Uninstalling Alter...\"\n\nif [ -d \"/Applications/Alter.app\" ]; then\n    sudo rm -rf \"/Applications/Alter.app\"\n    echo \"✅ Alter uninstalled successfully\"\nelse\n    echo \"ℹ️  Alter is not installed\"\nfi\n"
    },
    "rectangle": {
      "id": "rectangle",
      "name": "Rectangle",
      "description": "Free window management app that lets you move and resize windows using keyboard shortcuts or snap areas",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "window-management",
        "productivity",
        "shortcuts",
        "free"
      ],
      "url": "https://rectangleapp.com/",
      "notes": "- Free and open source window manager\n- Supports keyboard shortcuts and snap areas\n- Nearly complete replacement for Spectacle\n- Integrates well with macOS\n",
      "dependencies": [],
      "install_script": "echo \"Installing Rectangle...\"\nbrew install --cask rectangle\n",
      "validate_script": "brew list --cask | grep -q \"rectangle\" || ls /Applications/ | grep -q \"Rectangle.app\"\n",
      "configure_script": "echo \"Rectangle configuration complete\"\necho \"Launch Rectangle and grant accessibility permissions when prompted\"\n",
      "uninstall_script": "echo \"Uninstalling Rectangle...\"\nbrew uninstall --cask rectangle\n"
    },
    "finicky": {
      "id": "finicky",
      "name": "Finicky",
      "description": "Default browser manager",
      "type": "brew",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "browser",
        "productivity",
        "automation",
        "link-management",
        "utilities"
      ],
      "url": "https://github.com/johnste/finicky",
      "notes": "- Automatically opens links in the appropriate browser\n- Configurable rules based on URL patterns, domains, and conditions\n- Supports multiple browsers and applications\n- JavaScript-based configuration for complex rules\n- Open source and highly customizable\n",
      "dependencies": [],
      "install_script": "echo \"Installing Finicky...\"\nbrew install --cask finicky\n",
      "validate_script": "brew list --cask | grep -q \"finicky\" || ls /Applications/ | grep -q \"Finicky.app\"\n",
      "configure_script": "echo \"Configuring Finicky...\"\n\n# Create basic configuration\nCONFIG_FILE=\"$HOME/.finicky.js\"\n\nif [ ! -f \"$CONFIG_FILE\" ]; then\n    cat > \"$CONFIG_FILE\" << 'EOF'\nmodule.exports = {\n  defaultBrowser: \"Safari\",\n  handlers: [\n  {\n    // Open Gmail in Chrome\n    match: /^https:\\/\\/mail\\.google\\.com/,\n    browser: \"Google Chrome\"\n  },\n  {\n    // Open GitHub in preferred browser\n    match: /github\\.com/,\n    browser: \"Google Chrome\"\n  },\n  {\n    // Open work domains in specific browser\n    match: /company\\.com/,\n    browser: \"Microsoft Edge\"\n  }\n  ]\n};\nEOF\n    echo \"Created basic Finicky configuration at ~/.finicky.js\"\nelse\n    echo \"Finicky configuration already exists at ~/.finicky.js\"\nfi\n\necho \"Finicky configuration complete\"\necho \"Launch Finicky and set it as your default browser in System Preferences\"\necho \"\"\necho \"Configuration file: ~/.finicky.js\"\necho \"Edit this file to customize browser routing rules\"\necho \"\"\necho \"Example rules are configured for:\"\necho \"- Gmail -> Chrome\"\necho \"- GitHub -> Chrome\" \necho \"- Default -> Safari\"\n",
      "uninstall_script": "echo \"Uninstalling Finicky...\"\nbrew uninstall --cask finicky\necho \"Note: Configuration file ~/.finicky.js will remain\"\n"
    },
    "cleanshotx": {
      "id": "cleanshotx",
      "name": "CleanShot X",
      "description": "Screenshot and screen recording tool",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "screenshot",
        "screen-recording",
        "productivity",
        "annotation",
        "cloud"
      ],
      "url": "https://cleanshot.com/",
      "notes": "- Professional screenshot and screen recording with cloud integration\n- Advanced annotation tools and editing features\n- Scrolling capture for long web pages and documents\n- Built-in cloud storage and instant sharing\n- GIF creation and video editing capabilities\n- Requires subscription for full features\n",
      "dependencies": [],
      "install_script": "echo \"Installing CleanShot X...\"\nbrew install --cask cleanshot\n",
      "validate_script": "brew list --cask | grep -q \"cleanshot\" || ls /Applications/ | grep -q \"CleanShot X.app\"\n",
      "configure_script": "echo \"CleanShot X configuration complete\"\necho \"Launch CleanShot X and configure your preferences\"\necho \"Key features:\"\necho \"- Advanced screenshot tools with annotation\"\necho \"- Screen recording with editing capabilities\"\necho \"- Scrolling capture for long content\"\necho \"- Cloud storage and instant sharing\"\necho \"- GIF creation and optimization\"\necho \"- Custom keyboard shortcuts\"\necho \"\"\necho \"Note: CleanShot X offers a free trial\"\necho \"Subscription required for cloud features and full functionality\"\necho \"Configure keyboard shortcuts to replace default macOS screenshot tools\"\n",
      "uninstall_script": "echo \"Uninstalling CleanShot X...\"\nbrew uninstall --cask cleanshot\n"
    },
    "raycast": {
      "id": "raycast",
      "name": "Raycast",
      "description": "Blazingly fast, totally extendable launcher",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "launcher",
        "productivity",
        "shortcuts",
        "automation"
      ],
      "url": "https://www.raycast.com/",
      "notes": "- Modern launcher with extensive extension ecosystem\n- Built-in features for clipboard history, window management, and calculations\n- Supports custom scripts and extensions\n- Free tier with paid Pro features available\n",
      "dependencies": [],
      "install_script": "echo \"Installing Raycast...\"\nbrew install --cask raycast\n",
      "validate_script": "brew list --cask | grep -q \"raycast\" || ls /Applications/ | grep -q \"Raycast.app\"\n",
      "configure_script": "echo \"Raycast configuration complete\"\necho \"Launch Raycast and complete the setup process\"\n",
      "uninstall_script": "echo \"Uninstalling Raycast...\"\nbrew uninstall --cask raycast\n"
    },
    "monitor-control": {
      "id": "monitor-control",
      "name": "MonitorControl",
      "description": "Control external display brightness and volume",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "monitor",
        "brightness",
        "volume",
        "display",
        "external"
      ],
      "url": "https://github.com/MonitorControl/MonitorControl",
      "notes": "- Control external monitor settings from macOS\n- Adjust brightness and volume of external displays\n- Native keyboard shortcut support\n- Menu bar integration for quick access\n- Support for multiple monitors\n- Open source and free\n",
      "dependencies": [],
      "install_script": "echo \"Installing MonitorControl...\"\nbrew install --cask monitorcontrol\n",
      "validate_script": "brew list --cask | grep -q \"monitorcontrol\" || ls /Applications/ | grep -q \"MonitorControl.app\"\n",
      "configure_script": "echo \"MonitorControl configuration complete\"\necho \"Launch MonitorControl and grant necessary permissions\"\necho \"\"\necho \"Setup steps:\"\necho \"1. Launch MonitorControl application\"\necho \"2. Grant accessibility permissions in System Preferences\"\necho \"3. Configure keyboard shortcuts for brightness/volume control\"\necho \"4. Enable menu bar icon for quick access\"\necho \"\"\necho \"Key features:\"\necho \"- Control external monitor brightness with keyboard\"\necho \"- Adjust external monitor volume\"\necho \"- Native macOS keyboard shortcuts (F1/F2 for brightness)\"\necho \"- Menu bar controls for quick access\"\necho \"- Support for multiple external monitors\"\necho \"- DDC/CI protocol support\"\necho \"\"\necho \"Usage:\"\necho \"- Use F1/F2 keys to control external monitor brightness\"\necho \"- Use F10/F11/F12 keys for volume control\"\necho \"- Access controls via menu bar icon\"\necho \"- Configure per-monitor settings\"\necho \"\"\necho \"Note: Requires compatible external monitors with DDC/CI support\"\necho \"Most modern monitors support this feature\"\n",
      "uninstall_script": "echo \"Uninstalling MonitorControl...\"\nbrew uninstall --cask monitorcontrol\n"
    },
    "keka": {
      "id": "keka",
      "name": "Keka",
      "description": "File archiver for macOS",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "archiver",
        "compression",
        "file-management",
        "zip",
        "utilities"
      ],
      "url": "https://www.keka.io/",
      "notes": "- Powerful file archiver supporting multiple formats\n- Supports 7Z, ZIP, TAR, GZIP, BZIP2, XZ, LZMA, and many more\n- Password protection and encryption\n- Drag and drop interface\n- High compression ratios\n- Free with optional paid version for App Store\n",
      "dependencies": [],
      "install_script": "echo \"Installing Keka...\"\nbrew install --cask keka\n",
      "validate_script": "brew list --cask | grep -q \"keka\" || ls /Applications/ | grep -q \"Keka.app\"\n",
      "configure_script": "echo \"Keka configuration complete\"\necho \"Keka is now ready for file archiving and extraction\"\necho \"\"\necho \"Supported formats:\"\necho \"- Create: 7Z, ZIP, TAR, GZIP, BZIP2, XZ, LZMA\"\necho \"- Extract: RAR, 7Z, LZMA, XZ, ZIP, TAR, GZIP, BZIP2, ISO, EXE, CAB, PAX, and more\"\necho \"\"\necho \"Key features:\"\necho \"- High compression ratios\"\necho \"- Password protection and AES-256 encryption\"\necho \"- Drag and drop interface\"\necho \"- Batch compression and extraction\"\necho \"- Integration with Finder context menus\"\necho \"\"\necho \"Usage:\"\necho \"- Drag files/folders onto Keka to create archives\"\necho \"- Double-click archives to extract them\"\necho \"- Right-click in Finder for context menu options\"\necho \"- Set compression level and format in preferences\"\n",
      "uninstall_script": "echo \"Uninstalling Keka...\"\nbrew uninstall --cask keka\n"
    },
    "swiftbar": {
      "id": "swiftbar",
      "name": "SwiftBar",
      "description": "Powerful macOS menu bar customization tool that lets you create custom menu bar apps with simple scripts",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "menubar",
        "customization",
        "scripting",
        "productivity",
        "automation"
      ],
      "url": "https://swiftbar.app/",
      "notes": "- Create custom menu bar programs with simple scripts\n- Compatible with BitBar/xbar plugin ecosystem\n- Supports multiple programming languages (Shell, Python, Ruby, etc.)\n- Built-in plugin repository with hundreds of plugins\n- Refresh intervals and scheduling support\n- Free and open source\n- \n- 📌 After installation:\n- 1. Browse plugins at: https://github.com/matryer/xbar-plugins/tree/main\n- 2. Popular plugins to try:\n-    • Now Playing: https://github.com/matryer/xbar-plugins/blob/main/Music/nowplaying.5s.sh\n-    • System monitors, weather, calendar, and more\n- 3. Create your own scripts or customize existing ones\n",
      "dependencies": [],
      "install_script": "echo \"Installing SwiftBar...\"\nbrew install --cask swiftbar\n",
      "validate_script": "brew list --cask | grep -q \"swiftbar\" || ls /Applications/ | grep -q \"SwiftBar.app\"\n",
      "configure_script": "echo \"SwiftBar configuration complete\"\necho \"Launch SwiftBar and create a plugins directory\"\necho \"Visit https://github.com/matryer/xbar-plugins/tree/main for available plugins\"\necho \"Try the Now Playing plugin: https://github.com/matryer/xbar-plugins/blob/main/Music/nowplaying.5s.sh\"\n",
      "uninstall_script": "echo \"Uninstalling SwiftBar...\"\nbrew uninstall --cask swiftbar\n"
    },
    "telegram": {
      "id": "telegram",
      "name": "Telegram",
      "description": "Cloud-based instant messaging",
      "type": "mas",
      "category": "Communication",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "messaging",
        "chat",
        "communication",
        "cloud",
        "security"
      ],
      "url": "https://telegram.org/",
      "notes": "- Secure messaging with cloud sync and extensive features\n- End-to-end encrypted secret chats\n- Large file sharing capabilities (up to 2GB)\n- Channels and groups with advanced moderation\n- Bots and automation features\n- Cross-platform synchronization\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing Telegram...\"\nmas install 747648890\n",
      "validate_script": "mas list | grep -q \"Telegram\" || ls /Applications/ | grep -q \"Telegram.app\"\n",
      "configure_script": "echo \"Telegram configuration complete\"\necho \"Launch Telegram and sign in with your phone number\"\necho \"Key features:\"\necho \"- Send messages, photos, videos, and files\"\necho \"- Create groups and channels\"\necho \"- Use bots for automation and games\"\necho \"- Secret chats with end-to-end encryption\"\necho \"- Cloud storage for all your chats and media\"\n",
      "uninstall_script": "echo \"Uninstalling Telegram...\"\nmas uninstall 747648890\n"
    },
    "bartender5": {
      "id": "bartender5",
      "name": "Bartender 5",
      "description": "Advanced menu bar icon organizer and manager",
      "type": "direct_download_dmg",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "menu-bar",
        "organization",
        "productivity",
        "icons",
        "management",
        "workflow"
      ],
      "url": "https://www.macbartender.com/",
      "notes": "- Advanced menu bar organization and management tool\n- Hide, show, and rearrange menu bar icons\n- Powerful automation and trigger system\n- Search functionality for quick access\n- Enhanced workflow and productivity\n- Premium software with free trial available\n",
      "dependencies": [],
      "install_script": "echo \"Installing Bartender 5...\"\necho \"Note: Bartender 5 is a premium application\"\necho \"\"\necho \"Installation options:\"\necho \"1. Download from https://www.macbartender.com/\"\necho \"2. Free trial available\"\necho \"3. Purchase required for continued use\"\necho \"\"\n# Create temporary directory for download\ntmp_dir=$(mktemp -d)\ncd \"$tmp_dir\"\n\necho \"Downloading Bartender 5...\"\n# Note: This would be the actual download URL\ndownload_url=\"https://www.macbartender.com/B2/updates/Bartender%205.zip\"\n\necho \"Attempting to download from official website...\"\nif command -v curl >/dev/null 2>&1; then\n  echo \"Using curl to download...\"\n  # curl -L -o \"bartender5.zip\" \"$download_url\"\n  echo \"Manual download required from official website\"\nfi\n\necho \"\"\necho \"Manual installation steps:\"\necho \"1. Visit https://www.macbartender.com/\"\necho \"2. Download Bartender 5 for macOS\"\necho \"3. Open the downloaded ZIP/DMG file\"\necho \"4. Move Bartender 5 to Applications folder\"\necho \"5. Launch and start free trial or enter license\"\n",
      "validate_script": "# Check for Bartender 5 in Applications\nif ls /Applications/ | grep -q \"Bartender 5.app\"; then\n  exit 0\nfi\n\n# Check for variations\nif ls /Applications/ | grep -i \"bartender.*5\" >/dev/null 2>&1; then\n  exit 0\nfi\n\necho \"Bartender 5 not detected\"\nexit 1\n",
      "configure_script": "echo \"Bartender 5 configuration complete\"\necho \"Launch Bartender 5 to organize your menu bar\"\necho \"\"\necho \"Key features:\"\necho \"- Hide and organize menu bar icons\"\necho \"- Intelligent icon management and grouping\"\necho \"- Search functionality for quick access\"\necho \"- Trigger-based automation and rules\"\necho \"- Keyboard shortcuts and hotkeys\"\necho \"- Advanced customization options\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Bartender 5 from Applications\"\necho \"2. Grant necessary system permissions\"\necho \"3. Configure which icons to hide/show\"\necho \"4. Set up triggers and automation rules\"\necho \"5. Customize keyboard shortcuts\"\necho \"\"\necho \"Main features:\"\necho \"- Menu Bar Items: Hide, show, and organize icons\"\necho \"- Search: Quickly find and access hidden items\"\necho \"- Triggers: Automate based on app states and conditions\"\necho \"- Hotkeys: Keyboard shortcuts for instant access\"\necho \"- Presets: Save and switch between configurations\"\necho \"\"\necho \"Advanced capabilities:\"\necho \"- Time-based triggers (show/hide at specific times)\"\necho \"- App-based triggers (show when certain apps run)\"\necho \"- Battery and system status triggers\"\necho \"- Custom spacing and arrangement\"\necho \"- Icon grouping and categorization\"\necho \"\"\necho \"Productivity benefits:\"\necho \"- Cleaner, organized menu bar appearance\"\necho \"- Quick access to important items\"\necho \"- Reduced visual clutter and distraction\"\necho \"- Context-aware icon display\"\necho \"- Enhanced focus and workflow\"\necho \"\"\necho \"Setup recommendations:\"\necho \"1. Hide rarely used system icons\"\necho \"2. Keep essential items always visible\"\necho \"3. Set up triggers for contextual display\"\necho \"4. Configure search hotkey for quick access\"\necho \"5. Create presets for different work modes\"\n",
      "uninstall_script": "echo \"Uninstalling Bartender 5...\"\nfind /Applications -name \"*Bartender*5*\" -delete 2>/dev/null || true\necho \"Note: Configuration preferences may remain in ~/Library\"\n"
    },
    "timeout": {
      "id": "timeout",
      "name": "Time Out",
      "description": "Customizable break reminder to reduce eye strain and RSI",
      "type": "mas",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "breaks",
        "health",
        "productivity",
        "eye-strain",
        "rsi",
        "wellness"
      ],
      "url": "https://www.dejal.com/timeout/",
      "notes": "- Customizable break reminder application\n- Helps prevent eye strain and repetitive stress injuries\n- Flexible scheduling with normal and micro breaks\n- Visual and audio break notifications\n- Optional forced breaks for health compliance\n- Free version available with paid Pro features\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing Time Out...\"\necho \"Note: Time Out is available on the Mac App Store\"\necho \"App Store ID: 402592703\"\necho \"\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Installing Time Out via mas...\"\n  mas install 402592703\nelse\n  echo \"mas-cli not found. Please install Time Out manually from the App Store\"\n  echo \"Search for 'Time Out' by Dejal Systems, LLC\"\nfi\n",
      "validate_script": "# Check if installed via App Store\nif ls /Applications/ | grep -q \"Time Out.app\"; then\n  exit 0\nfi\n\n# Check in system Applications\nif ls \"/Applications/Time Out.app\" &> /dev/null; then\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"Time Out configuration complete\"\necho \"Launch Time Out to set up your break schedule\"\necho \"\"\necho \"Key features:\"\necho \"- Customizable break intervals and durations\"\necho \"- Normal breaks (longer, less frequent)\"\necho \"- Micro breaks (short, frequent eye rest)\"\necho \"- Visual countdown and notifications\"\necho \"- Optional forced breaks for compliance\"\necho \"- Break activity suggestions\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Time Out from Applications\"\necho \"2. Configure your break preferences\"\necho \"3. Set normal break interval (e.g., every 50 minutes)\"\necho \"4. Set micro break interval (e.g., every 10 minutes)\"\necho \"5. Choose break duration and activities\"\necho \"\"\necho \"Recommended settings:\"\necho \"- Normal breaks: 15 minutes every 2 hours\"\necho \"- Micro breaks: 30 seconds every 20 minutes\"\necho \"- Enable countdown timers\"\necho \"- Use gentle notifications initially\"\necho \"\"\necho \"Health benefits:\"\necho \"- Reduces eye strain and dry eyes\"\necho \"- Prevents repetitive stress injuries\"\necho \"- Improves posture and circulation\"\necho \"- Increases overall productivity\"\necho \"- Promotes mindful work habits\"\necho \"\"\necho \"Time Out will run in the menu bar\"\necho \"You can pause, skip, or postpone breaks as needed\"\n",
      "uninstall_script": "echo \"Uninstalling Time Out...\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Note: Use Mac App Store to uninstall or:\"\n  echo \"mas uninstall 402592703\"\nfi\necho \"Or manually delete from Applications folder\"\n"
    },
    "unsplash-wallpaper": {
      "id": "unsplash-wallpaper",
      "name": "Unsplash Wallpaper",
      "description": "Beautiful wallpapers from Unsplash community",
      "type": "direct_download_dmg",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "wallpaper",
        "unsplash",
        "photography",
        "desktop",
        "productivity",
        "inspiration"
      ],
      "url": "https://unsplash.com/",
      "notes": "- Access to Unsplash's vast collection of high-quality photos\n- Automatic wallpaper rotation with beautiful imagery\n- Curated collections from professional photographers\n- Inspiration and aesthetic enhancement for workspace\n- Free high-resolution photography\n- Note: This may refer to a specific Unsplash wallpaper app\n",
      "dependencies": [],
      "install_script": "echo \"Installing Unsplash Wallpaper...\"\necho \"Note: There are multiple Unsplash wallpaper applications available\"\necho \"\"\necho \"Options for Unsplash wallpapers:\"\necho \"1. irVue (already available in this configuration)\"\necho \"2. Unsplash Wallpapers (Mac App Store)\"\necho \"3. Direct download from unsplash.com\"\necho \"4. Third-party Unsplash apps\"\necho \"\"\necho \"Checking for available Unsplash wallpaper apps...\"\n\n# Try to find and install a specific Unsplash wallpaper app\nif command -v mas >/dev/null 2>&1; then\n  echo \"Searching Mac App Store for Unsplash wallpaper apps...\"\n  # Try to install a popular Unsplash wallpaper app\n  # Note: App Store ID would need to be verified\n  echo \"You may want to search 'Unsplash' in the Mac App Store manually\"\nfi\n\necho \"\"\necho \"Alternative: Use irVue (already configured) for Unsplash wallpapers\"\necho \"Or visit https://unsplash.com/ to browse and download wallpapers manually\"\n",
      "validate_script": "# Check for various Unsplash-related apps\nif ls /Applications/ | grep -i \"unsplash\" >/dev/null 2>&1; then\n  exit 0\nfi\n\n# Check if irVue is installed (alternative Unsplash app)\nif ls /Applications/ | grep -i \"irvue\" >/dev/null 2>&1; then\n  echo \"irVue (Unsplash wallpaper app) is available\"\n  exit 0\nfi\n\n# Consider manual wallpaper downloads as \"installed\"\nif [ -d \"$HOME/Pictures/Wallpapers\" ]; then\n  echo \"Wallpapers directory exists - manual Unsplash usage assumed\"\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"Unsplash Wallpaper configuration complete\"\necho \"Enjoy beautiful photography for your desktop background\"\necho \"\"\necho \"Unsplash features:\"\necho \"- Over 3 million high-quality photos\"\necho \"- Professional photography from global contributors\"\necho \"- Various categories: nature, architecture, animals, etc.\"\necho \"- Free to use for personal and commercial purposes\"\necho \"- Regular updates with new content daily\"\necho \"\"\necho \"Ways to use Unsplash wallpapers:\"\necho \"1. Install irVue for automatic wallpaper rotation\"\necho \"2. Use Unsplash Wallpapers app from Mac App Store\"\necho \"3. Browse and download manually from unsplash.com\"\necho \"4. Use Unsplash API for custom wallpaper apps\"\necho \"\"\necho \"Manual usage:\"\necho \"1. Visit https://unsplash.com/\"\necho \"2. Search for desired photo categories\"\necho \"3. Download high-resolution images\"\necho \"4. Set as desktop wallpaper in System Preferences\"\necho \"\"\necho \"Creating wallpapers directory for organization...\"\nmkdir -p \"$HOME/Pictures/Wallpapers/Unsplash\"\necho \"Directory created: ~/Pictures/Wallpapers/Unsplash\"\necho \"\"\necho \"Popular categories:\"\necho \"- Nature and landscapes\"\necho \"- Minimalist and abstract\"\necho \"- Architecture and buildings\"\necho \"- Technology and workspace\"\necho \"- Travel and adventure\"\necho \"\"\necho \"Benefits:\"\necho \"- Enhance workspace aesthetics\"\necho \"- Daily inspiration from beautiful imagery\"\necho \"- Support independent photographers\"\necho \"- High-quality, professional photography\"\necho \"- Completely free to use\"\necho \"\"\necho \"Recommendation: Also install irVue for automatic Unsplash wallpapers\"\n",
      "uninstall_script": "echo \"Uninstalling Unsplash Wallpaper...\"\necho \"Removing downloaded wallpapers (optional)...\"\necho \"Remove ~/Pictures/Wallpapers/Unsplash if no longer needed\"\necho \"Unsplash wallpaper access removed\"\n"
    },
    "bartender": {
      "id": "bartender",
      "name": "Bartender",
      "description": "Popular menu bar organizer that helps control and organize your menu bar icons with advanced features and customization",
      "type": "brew_cask",
      "category": "Productivity",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "menubar",
        "organization",
        "productivity",
        "premium",
        "system-enhancement"
      ],
      "url": "https://www.macbartender.com/",
      "notes": "- Industry-standard menu bar manager with advanced features\n- Hide, show, and organize menu bar icons with extensive customization\n- Supports custom keyboard shortcuts and triggers\n- Premium software with 4-week free trial ($16 one-time purchase)\n- Regular updates and excellent customer support\n",
      "dependencies": [],
      "install_script": "echo \"Installing Bartender...\"\nbrew install --cask bartender\n",
      "validate_script": "brew list --cask | grep -q \"bartender\" || ls /Applications/ | grep -q \"Bartender.app\"\n",
      "configure_script": "echo \"Bartender configuration complete\"\necho \"Launch Bartender and grant accessibility permissions when prompted\"\necho \"Note: Bartender offers a 4-week free trial, then requires license purchase\"\n",
      "uninstall_script": "echo \"Uninstalling Bartender...\"\nbrew uninstall --cask bartender\n"
    },
    "calibre": {
      "id": "calibre",
      "name": "Calibre",
      "description": "Comprehensive e-book library management",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "ebooks",
        "library",
        "epub",
        "kindle",
        "conversion",
        "reader"
      ],
      "url": "https://calibre-ebook.com/",
      "notes": "- Comprehensive e-book library management and conversion tool\n- Support for virtually all e-book formats\n- Built-in e-book reader and editor\n- Sync with e-readers and mobile devices\n- Metadata management and book organization\n- Free and open source with extensive features\n",
      "dependencies": [],
      "install_script": "echo \"Installing Calibre...\"\nbrew install --cask calibre\n",
      "validate_script": "brew list --cask | grep -q \"calibre\" || ls /Applications/ | grep -q \"calibre.app\"\n",
      "configure_script": "echo \"Calibre configuration complete\"\necho \"Launch Calibre to start managing your e-book library\"\necho \"\"\necho \"Key features:\"\necho \"- Support for 50+ e-book formats\"\necho \"- Library management with metadata and covers\"\necho \"- E-book conversion between formats\"\necho \"- Built-in e-book reader and editor\"\necho \"- Device sync with e-readers and tablets\"\necho \"- News downloading and RSS feed conversion\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Calibre from Applications\"\necho \"2. Add books to your library (drag & drop or import)\"\necho \"3. Edit metadata, covers, and organize collections\"\necho \"4. Connect your e-reader for syncing\"\necho \"5. Explore reading and conversion features\"\necho \"\"\necho \"Supported formats:\"\necho \"INPUT: EPUB, MOBI, AZW, PDF, TXT, HTML, RTF, ODT, DOCX, and more\"\necho \"OUTPUT: EPUB, MOBI, AZW3, PDF, TXT, HTML, and others\"\necho \"\"\necho \"Library management:\"\necho \"- Automatic metadata fetching from online sources\"\necho \"- Custom columns and tags for organization\"\necho \"- Powerful search and filtering\"\necho \"- Series management and reading order\"\necho \"- Duplicate detection and management\"\necho \"\"\necho \"E-reader sync:\"\necho \"- Kindle, Kobo, Sony, and other devices\"\necho \"- Automatic format conversion for device compatibility\"\necho \"- Reading progress and bookmark sync\"\necho \"- Wireless sync over network\"\necho \"\"\necho \"Advanced features:\"\necho \"- E-book editor for EPUB and AZW3\"\necho \"- News and magazine downloading\"\necho \"- Custom book conversion recipes\"\necho \"- Plugin system for extending functionality\"\necho \"- Content server for remote library access\"\necho \"\"\necho \"Tips:\"\necho \"- Use 'Add Books' to import your existing e-book collection\"\necho \"- Right-click books for conversion and editing options\"\necho \"- Set up device sync for seamless e-reader integration\"\necho \"- Explore plugins for additional functionality\"\n",
      "uninstall_script": "echo \"Uninstalling Calibre...\"\nbrew uninstall --cask calibre\n"
    },
    "yacreader": {
      "id": "yacreader",
      "name": "YACReader",
      "description": "Comic book reader and library manager",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "comics",
        "manga",
        "ebooks",
        "reader",
        "library",
        "cbr-cbz"
      ],
      "url": "https://www.yacreader.com/",
      "notes": "- Comprehensive comic book reader and library manager\n- Support for major comic formats (CBR, CBZ, PDF, etc.)\n- Library organization with metadata and cover art\n- Reading list and favorites management\n- Smooth reading experience with various view modes\n- Free and open source\n",
      "dependencies": [],
      "install_script": "echo \"Installing YACReader...\"\nbrew install --cask yacreader\n",
      "validate_script": "brew list --cask | grep -q \"yacreader\" || ls /Applications/ | grep -q \"YACReader.app\"\n",
      "configure_script": "echo \"YACReader configuration complete\"\necho \"Launch YACReader to start reading comics and manga\"\necho \"\"\necho \"Key features:\"\necho \"- Support for CBR, CBZ, CB7, CBT, PDF formats\"\necho \"- Library management with automatic metadata\"\necho \"- Cover flow and grid view for browsing\"\necho \"- Reading lists and favorites organization\"\necho \"- Full-screen reading mode\"\necho \"- Bookmark and reading progress tracking\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch YACReader from Applications\"\necho \"2. Import your comic book folders into library\"\necho \"3. Let YACReader scan and organize your collection\"\necho \"4. Browse comics with cover flow or list view\"\necho \"5. Double-click to start reading\"\necho \"\"\necho \"Reading features:\"\necho \"- Page-by-page or continuous reading\"\necho \"- Fit to width, height, or best fit options\"\necho \"- Zoom and pan for detailed viewing\"\necho \"- Right-to-left reading for manga\"\necho \"- Full-screen mode for immersive reading\"\necho \"- Keyboard shortcuts for navigation\"\necho \"\"\necho \"Library management:\"\necho \"- Automatic cover art and metadata detection\"\necho \"- Series and story arc organization\"\necho \"- Reading lists for custom collections\"\necho \"- Search and filter capabilities\"\necho \"- Tags and rating system\"\necho \"\"\necho \"Supported formats:\"\necho \"- CBR (Comic Book RAR)\"\necho \"- CBZ (Comic Book ZIP)\"\necho \"- CB7 (Comic Book 7z)\"\necho \"- CBT (Comic Book TAR)\"\necho \"- PDF documents\"\necho \"\"\necho \"Tips:\"\necho \"- Organize comics in folders by series\"\necho \"- Use consistent naming for better detection\"\necho \"- Enable automatic library scanning\"\necho \"- Explore reading modes for best experience\"\n",
      "uninstall_script": "echo \"Uninstalling YACReader...\"\nbrew uninstall --cask yacreader\n"
    },
    "stremio": {
      "id": "stremio",
      "name": "Stremio",
      "description": "Modern media player for video content",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "media-player",
        "streaming",
        "video",
        "movies",
        "tv-shows",
        "add-ons"
      ],
      "url": "https://www.stremio.com/",
      "notes": "- Modern media center for movies, TV shows, and video content\n- Extensible platform with add-on system\n- Cross-platform synchronization of watchlists\n- Support for various video formats and sources\n- Clean, user-friendly interface\n- Free to use with optional premium features\n",
      "dependencies": [],
      "install_script": "echo \"Installing Stremio...\"\nbrew install --cask stremio\n",
      "validate_script": "brew list --cask | grep -q \"stremio\" || ls /Applications/ | grep -q \"Stremio.app\"\n",
      "configure_script": "echo \"Stremio configuration complete\"\necho \"Launch Stremio to set up your media center\"\necho \"\"\necho \"Key features:\"\necho \"- Unified interface for all video content\"\necho \"- Add-on system for extending functionality\"\necho \"- Cross-device synchronization\"\necho \"- Calendar view for TV show episodes\"\necho \"- Watch progress tracking\"\necho \"- High-quality video streaming\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Stremio from Applications\"\necho \"2. Create a Stremio account for sync features\"\necho \"3. Browse the add-on catalog\"\necho \"4. Install add-ons for your preferred content sources\"\necho \"5. Start building your library and watchlists\"\necho \"\"\necho \"Content organization:\"\necho \"- Library: Your saved movies and shows\"\necho \"- Board: Personalized content recommendations\"\necho \"- Calendar: Upcoming episodes and releases\"\necho \"- Search: Find content across all add-ons\"\necho \"\"\necho \"Popular add-ons:\"\necho \"- Official YouTube add-on for YouTube content\"\necho \"- Netflix add-on for Netflix originals info\"\necho \"- IMDB lists for movie recommendations\"\necho \"- Podcast add-ons for audio content\"\necho \"\"\necho \"Features:\"\necho \"- Hardware acceleration for smooth playback\"\necho \"- Subtitle support with multiple languages\"\necho \"- Chromecast and AirPlay streaming support\"\necho \"- Dark and light theme options\"\necho \"- Keyboard shortcuts for media control\"\necho \"\"\necho \"Privacy note:\"\necho \"- Stremio respects user privacy\"\necho \"- No ads in the core application\"\necho \"- Content depends on installed add-ons\"\necho \"- Always use legal content sources\"\n",
      "uninstall_script": "echo \"Uninstalling Stremio...\"\nbrew uninstall --cask stremio\n"
    },
    "irvue": {
      "id": "irvue",
      "name": "irVue",
      "description": "Unsplash wallpaper app for beautiful desktop backgrounds",
      "type": "mas",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "wallpaper",
        "unsplash",
        "photography",
        "desktop",
        "backgrounds",
        "beauty"
      ],
      "url": "https://irvue.tumblr.com/",
      "notes": "- Beautiful wallpaper app powered by Unsplash photography\n- Automatic wallpaper rotation with high-quality images\n- Curated collections from professional photographers\n- Customizable refresh intervals and categories\n- Minimal resource usage and clean interface\n- Free with optional premium features\n",
      "dependencies": [
        "mas_cli"
      ],
      "install_script": "echo \"Installing irVue...\"\necho \"Note: irVue is available on the Mac App Store\"\necho \"App Store ID: 1039633667\"\necho \"\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Installing irVue via mas...\"\n  mas install 1039633667\nelse\n  echo \"mas-cli not found. Please install irVue manually from the App Store\"\n  echo \"Search for 'irvue' in the Mac App Store\"\nfi\n",
      "validate_script": "# Check if installed via App Store\nif ls /Applications/ | grep -q \"irvue.app\"; then\n  exit 0\nfi\n\n# Check for variations in app name\nif ls /Applications/ | grep -i \"irvue\" >/dev/null 2>&1; then\n  exit 0\nfi\n\nexit 1\n",
      "configure_script": "echo \"irVue configuration complete\"\necho \"Launch irVue to start enjoying beautiful wallpapers\"\necho \"\"\necho \"Key features:\"\necho \"- High-resolution photos from Unsplash photographers\"\necho \"- Automatic wallpaper rotation\"\necho \"- Curated collections and categories\"\necho \"- Customizable refresh intervals\"\necho \"- Minimal and elegant interface\"\necho \"- Low system resource usage\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch irVue from Applications\"\necho \"2. Grant necessary permissions for wallpaper changes\"\necho \"3. Choose your preferred photo categories\"\necho \"4. Set wallpaper refresh interval (hourly, daily, etc.)\"\necho \"5. Enjoy automatically changing beautiful backgrounds\"\necho \"\"\necho \"Customization options:\"\necho \"- Photo categories (nature, architecture, abstract, etc.)\"\necho \"- Refresh frequency (15 min to weekly)\"\necho \"- Display options for multiple monitors\"\necho \"- Blur and dimming effects\"\necho \"- Automatic dark/light mode switching\"\necho \"\"\necho \"Photo categories:\"\necho \"- Nature and landscapes\"\necho \"- Architecture and buildings\"\necho \"- Abstract and artistic\"\necho \"- Animals and wildlife\"\necho \"- Travel and cities\"\necho \"- Minimalist designs\"\necho \"\"\necho \"Benefits:\"\necho \"- Fresh desktop inspiration daily\"\necho \"- Discover amazing photography\"\necho \"- Support independent photographers\"\necho \"- Enhance your workspace aesthetics\"\necho \"- Automatic variety without manual searching\"\necho \"\"\necho \"irVue will run quietly in the background\"\necho \"Access settings through the menu bar icon\"\n",
      "uninstall_script": "echo \"Uninstalling irVue...\"\nif command -v mas >/dev/null 2>&1; then\n  echo \"Note: Use Mac App Store to uninstall or:\"\n  echo \"mas uninstall 1039633667\"\nfi\necho \"Or manually delete from Applications folder\"\n"
    },
    "reflex": {
      "id": "reflex",
      "name": "Reflex",
      "description": "Media key forwarder for Music (iTunes) and Spotify",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "media-keys",
        "music",
        "spotify",
        "itunes",
        "keyboard",
        "control"
      ],
      "url": "https://stuntsoftware.com/reflex/",
      "notes": "- Media key forwarder for Music (iTunes) and Spotify\n- Routes media keys to the correct music application\n- Intelligent switching between music apps\n- Lightweight menu bar utility\n- Support for keyboard and headphone controls\n- Free utility for better media control\n",
      "dependencies": [],
      "install_script": "echo \"Installing Reflex...\"\nbrew install --cask reflex\n",
      "validate_script": "brew list --cask | grep -q \"reflex\" || ls /Applications/ | grep -q \"Reflex.app\"\n",
      "configure_script": "echo \"Reflex configuration complete\"\necho \"Launch Reflex to set up media key forwarding\"\necho \"\"\necho \"Key features:\"\necho \"- Forward media keys to correct music application\"\necho \"- Support for Music (iTunes) and Spotify\"\necho \"- Intelligent app detection and switching\"\necho \"- Works with keyboard and headphone controls\"\necho \"- Menu bar integration for quick access\"\necho \"- Lightweight and efficient operation\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Reflex from Applications\"\necho \"2. Grant necessary accessibility permissions\"\necho \"3. Configure media key preferences\"\necho \"4. Set up application priorities if needed\"\necho \"5. Test media keys with your music apps\"\necho \"\"\necho \"How it works:\"\necho \"- Detects which music app is currently playing\"\necho \"- Routes media keys (play, pause, next, previous) accordingly\"\necho \"- Handles switching between multiple music applications\"\necho \"- Works with built-in and external keyboards\"\necho \"- Supports headphone and speaker controls\"\necho \"\"\necho \"Supported applications:\"\necho \"- Apple Music (formerly iTunes)\"\necho \"- Spotify\"\necho \"- Other compatible media applications\"\necho \"\"\necho \"Benefits:\"\necho \"- Seamless media control across applications\"\necho \"- No more wrong-app media key activation\"\necho \"- Better integration with external keyboards\"\necho \"- Enhanced music listening workflow\"\necho \"\"\necho \"Settings:\"\necho \"- Application priority configuration\"\necho \"- Media key behavior customization\"\necho \"- Auto-start preferences\"\necho \"- Accessibility permissions management\"\necho \"\"\necho \"Reflex will run in the background and menu bar\"\n",
      "uninstall_script": "echo \"Uninstalling Reflex...\"\nbrew uninstall --cask reflex\n"
    },
    "vlc": {
      "id": "vlc",
      "name": "VLC Media Player",
      "description": "Open-source multimedia player",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": true,
      "requires_license": false,
      "tags": [
        "media-player",
        "video",
        "audio",
        "multimedia",
        "codec"
      ],
      "url": "https://www.videolan.org/vlc/",
      "notes": "- Plays virtually any media format without additional codecs\n- Open-source and completely free\n- Advanced playback controls and filters\n- Network streaming capabilities\n- Supports subtitles and multiple audio tracks\n- Cross-platform compatibility\n",
      "dependencies": [],
      "install_script": "echo \"Installing VLC Media Player...\"\nbrew install --cask vlc\n",
      "validate_script": "brew list --cask | grep -q \"vlc\" || ls /Applications/ | grep -q \"VLC.app\"\n",
      "configure_script": "echo \"VLC Media Player configuration complete\"\necho \"Launch VLC to start playing your media files\"\necho \"Key features:\"\necho \"- Supports all major video and audio formats\"\necho \"- Network streaming and IPTV\"\necho \"- Advanced audio and video filters\"\necho \"- Subtitle support and synchronization\"\necho \"- Playlist management and media library\"\n",
      "uninstall_script": "echo \"Uninstalling VLC Media Player...\"\nbrew uninstall --cask vlc\n"
    },
    "beardedspice": {
      "id": "beardedspice",
      "name": "BeardedSpice",
      "description": "Mac media keys for the web",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "media-keys",
        "web",
        "browser",
        "control",
        "keyboard",
        "streaming"
      ],
      "url": "https://beardedspice.github.io/",
      "notes": "- Mac media keys support for web-based music players\n- Control web media players with keyboard shortcuts\n- Support for popular streaming services\n- System-wide media key integration\n- Lightweight and efficient operation\n- Free and open source\n",
      "dependencies": [],
      "install_script": "echo \"Installing BeardedSpice...\"\nbrew install --cask beardedspice\n",
      "validate_script": "brew list --cask | grep -q \"beardedspice\" || ls /Applications/ | grep -q \"BeardedSpice.app\"\n",
      "configure_script": "echo \"BeardedSpice configuration complete\"\necho \"Launch BeardedSpice to control web media players\"\necho \"\"\necho \"Key features:\"\necho \"- Mac media keys support for web players\"\necho \"- System-wide keyboard shortcut integration\"\necho \"- Support for 50+ popular streaming services\"\necho \"- Automatic detection of active media players\"\necho \"- Lightweight menu bar operation\"\necho \"- Custom hotkey configuration\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch BeardedSpice from Applications\"\necho \"2. Grant necessary accessibility permissions\"\necho \"3. Configure supported streaming services\"\necho \"4. Test media keys with your favorite web player\"\necho \"5. Customize hotkeys if needed\"\necho \"\"\necho \"Supported services include:\"\necho \"- YouTube and YouTube Music\"\necho \"- Spotify Web Player\"\necho \"- SoundCloud and Bandcamp\"\necho \"- Twitch and other streaming platforms\"\necho \"- Pandora and Last.fm\"\necho \"- Google Play Music and many more\"\necho \"\"\necho \"Media key functions:\"\necho \"- Play/Pause: Control playback state\"\necho \"- Next Track: Skip to next song\"\necho \"- Previous Track: Go to previous song\"\necho \"- Volume Control: Adjust player volume\"\necho \"- Custom Actions: Service-specific controls\"\necho \"\"\necho \"How it works:\"\necho \"- Detects active media players in browser tabs\"\necho \"- Intercepts system media key presses\"\necho \"- Routes commands to appropriate web player\"\necho \"- Works across multiple browsers and tabs\"\necho \"- Prioritizes currently playing content\"\necho \"\"\necho \"Configuration options:\"\necho \"- Enable/disable specific streaming services\"\necho \"- Customize keyboard shortcuts and hotkeys\"\necho \"- Set priority for multiple active players\"\necho \"- Configure notification preferences\"\necho \"- Adjust detection and response settings\"\necho \"\"\necho \"Benefits:\"\necho \"- Native media key support for web players\"\necho \"- No need to switch to browser for control\"\necho \"- Works with external keyboards and headphones\"\necho \"- Consistent media control experience\"\necho \"- Enhanced productivity during work/study\"\necho \"\"\necho \"BeardedSpice will run in the menu bar\"\necho \"Media keys will now work with web-based players!\"\n",
      "uninstall_script": "echo \"Uninstalling BeardedSpice...\"\nbrew uninstall --cask beardedspice\n"
    },
    "synthesia": {
      "id": "synthesia",
      "name": "Synthesia",
      "description": "Learn how to play the piano using falling notes.",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": true,
      "tags": [
        "music",
        "learning",
        "piano",
        "education",
        "games"
      ],
      "url": "https://www.synthesiagame.com/",
      "notes": "- Interactive piano learning game with falling notes\n- Supports MIDI keyboards for realistic playing experience\n- Premium features require license purchase\n- Large library of songs and lessons available\n- Suitable for beginners and advanced players\n",
      "dependencies": [],
      "install_script": "echo \"Installing Synthesia...\"\nif brew install --cask synthesia; then\n  echo \"SUCCESS: Synthesia installed successfully.\"\nelse\n  echo \"ERROR: Synthesia installation failed.\"\n  exit 1\nfi\n",
      "validate_script": "if brew list --cask | grep -q \"^synthesia$\"; then\n  echo \"Synthesia is installed.\"\n  exit 0 # Installed\nelse\n  echo \"Synthesia is NOT installed.\"\n  exit 1 # Not installed\nfi\n",
      "configure_script": null,
      "uninstall_script": "echo \"Uninstalling Synthesia...\"\nif brew uninstall --cask synthesia; then\n  echo \"SUCCESS: Synthesia uninstalled successfully.\"\nelse\n  echo \"ERROR: Synthesia uninstallation failed.\"\n  exit 1\nfi\n"
    },
    "blackhole-2ch": {
      "id": "blackhole-2ch",
      "name": "BlackHole 2ch",
      "description": "Virtual Audio Driver for macOS",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "audio",
        "virtual-driver",
        "audio-routing",
        "recording",
        "streaming"
      ],
      "url": "https://github.com/ExistentialAudio/BlackHole",
      "notes": "- Creates virtual audio devices for routing audio between applications\n- Allows recording computer audio without additional hardware\n- Essential for streaming, podcasting, and audio production\n- Zero-latency audio routing\n- Supports multiple audio channels and formats\n- Open source and free\n",
      "dependencies": [],
      "install_script": "echo \"Installing BlackHole 2ch...\"\nbrew install --cask blackhole-2ch\n",
      "validate_script": "brew list --cask | grep -q \"blackhole-2ch\" || system_profiler SPAudioDataType | grep -q \"BlackHole\"\n",
      "configure_script": "echo \"BlackHole 2ch configuration complete\"\necho \"\"\necho \"BlackHole has been installed as a virtual audio device\"\necho \"\"\necho \"To use BlackHole:\"\necho \"1. Open Audio MIDI Setup (Applications > Utilities)\"\necho \"2. Create a Multi-Output Device\"\necho \"3. Select both your speakers and BlackHole 2ch\"\necho \"4. Set this Multi-Output as your default output\"\necho \"5. In recording apps, select BlackHole 2ch as input\"\necho \"\"\necho \"Common use cases:\"\necho \"- Record system audio for streaming\"\necho \"- Route audio between applications\"\necho \"- Create virtual mixing setups\"\necho \"- Podcast recording with multiple audio sources\"\necho \"\"\necho \"Note: You may need to restart applications to see BlackHole in audio settings\"\n",
      "uninstall_script": "echo \"Uninstalling BlackHole 2ch...\"\nbrew uninstall --cask blackhole-2ch\necho \"Note: You may need to restart to fully remove the audio driver\"\n"
    },
    "steam": {
      "id": "steam",
      "name": "Steam",
      "description": "Digital game distribution platform",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "gaming",
        "games",
        "distribution",
        "community",
        "social"
      ],
      "url": "https://store.steampowered.com/",
      "notes": "- Gaming platform with library management and community features\n- Largest digital game distribution platform\n- Social features, achievements, and community\n- Steam Workshop for user-generated content\n- In-home streaming and remote play capabilities\n- Free to use, pay for games\n",
      "dependencies": [],
      "install_script": "echo \"Installing Steam...\"\nbrew install --cask steam\n",
      "validate_script": "brew list --cask | grep -q \"steam\" || ls /Applications/ | grep -q \"Steam.app\"\n",
      "configure_script": "echo \"Steam configuration complete\"\necho \"Launch Steam and create an account or sign in\"\necho \"\"\necho \"Key features:\"\necho \"- Massive library of games\"\necho \"- Automatic game updates and cloud saves\"\necho \"- Friends, chat, and community features\"\necho \"- Steam Workshop for mods and user content\"\necho \"- In-home streaming and remote play\"\necho \"- Steam Deck compatibility\"\necho \"\"\necho \"Getting started:\"\necho \"1. Create a Steam account or sign in\"\necho \"2. Set up your profile and privacy settings\"\necho \"3. Add friends and join communities\"\necho \"4. Browse and purchase games\"\necho \"5. Configure game settings and library organization\"\necho \"\"\necho \"Useful features:\"\necho \"- Steam sales and seasonal events\"\necho \"- Family sharing for sharing games\"\necho \"- Steam Guard for account security\"\necho \"- Big Picture mode for TV gaming\"\n",
      "uninstall_script": "echo \"Uninstalling Steam...\"\nbrew uninstall --cask steam\necho \"Note: Game library and saves may remain in ~/Library/Application Support/Steam\"\n"
    },
    "xnviewmp": {
      "id": "xnviewmp",
      "name": "XnViewMP",
      "description": "Powerful cross-platform image viewer, browser, and converter supporting 500+ formats with batch processing capabilities",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "image-viewer",
        "media",
        "converter",
        "batch-processing",
        "photography"
      ],
      "url": "https://www.xnview.com/en/xnviewmp/",
      "notes": "- Supports 500+ image formats (including RAW, HEIC, AVIF, JPEG-XL)\n- Powerful batch conversion and processing tools\n- Image browser with thumbnail view and metadata support\n- Basic image editing features (resize, rotate, crop, filters)\n- Contact sheet creation and slideshow capabilities\n- Free for personal use, commercial license available\n",
      "dependencies": [],
      "install_script": "echo \"Installing XnViewMP...\"\nbrew install --cask xnviewmp\n",
      "validate_script": "brew list --cask | grep -q \"xnviewmp\" || ls /Applications/ | grep -q \"XnViewMP.app\"\n",
      "configure_script": "echo \"XnViewMP configuration complete\"\necho \"Launch XnViewMP and configure your preferred file associations\"\necho \"Consider setting as default image viewer in System Preferences\"\n",
      "uninstall_script": "echo \"Uninstalling XnViewMP...\"\nbrew uninstall --cask xnviewmp\n"
    },
    "spotify": {
      "id": "spotify",
      "name": "Spotify",
      "description": "Music streaming service",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "music",
        "streaming",
        "audio",
        "entertainment",
        "playlist"
      ],
      "url": "https://www.spotify.com/",
      "notes": "- Popular music streaming platform with offline capabilities\n- Free tier with ads, premium subscription for ad-free experience\n- Millions of songs, podcasts, and audiobooks\n- Personalized recommendations and discover features\n- Cross-device synchronization and offline downloads (Premium)\n- Social features and playlist sharing\n",
      "dependencies": [],
      "install_script": "echo \"Installing Spotify...\"\nbrew install --cask spotify\n",
      "validate_script": "brew list --cask | grep -q \"spotify\" || ls /Applications/ | grep -q \"Spotify.app\"\n",
      "configure_script": "echo \"Spotify configuration complete\"\necho \"Launch Spotify and sign in or create an account\"\necho \"Features available:\"\necho \"- Stream millions of songs and podcasts\"\necho \"- Create and share playlists\"\necho \"- Discover new music with personalized recommendations\"\necho \"- Connect with friends and share music\"\necho \"- Upgrade to Premium for offline downloads and no ads\"\n",
      "uninstall_script": "echo \"Uninstalling Spotify...\"\nbrew uninstall --cask spotify\n"
    },
    "audacity": {
      "id": "audacity",
      "name": "Audacity",
      "description": "Free, open-source audio editor",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "audio-editor",
        "recording",
        "editing",
        "podcast",
        "music"
      ],
      "url": "https://www.audacityteam.org/",
      "notes": "- Multi-track audio editor with extensive plugin support\n- Free and open-source audio editing software\n- Supports WAV, AIFF, MP3, OGG, and many other formats\n- Advanced editing features like noise reduction and effects\n- Plugin support for VST, LV2, and Nyquist effects\n- Cross-platform with large community support\n",
      "dependencies": [],
      "install_script": "echo \"Installing Audacity...\"\nbrew install --cask audacity\n",
      "validate_script": "brew list --cask | grep -q \"audacity\" || ls /Applications/ | grep -q \"Audacity.app\"\n",
      "configure_script": "echo \"Audacity configuration complete\"\necho \"Launch Audacity to start audio editing\"\necho \"\"\necho \"Key features:\"\necho \"- Multi-track recording and editing\"\necho \"- Wide format support (WAV, MP3, FLAC, etc.)\"\necho \"- Built-in effects and filters\"\necho \"- Noise reduction and audio cleanup tools\"\necho \"- Spectrogram view for detailed analysis\"\necho \"- Plugin support for extended functionality\"\necho \"\"\necho \"Getting started:\"\necho \"1. Set up your audio input device in Preferences\"\necho \"2. Configure recording quality and format\"\necho \"3. Learn basic editing shortcuts\"\necho \"4. Explore built-in effects and generators\"\necho \"\"\necho \"Common use cases:\"\necho \"- Podcast recording and editing\"\necho \"- Music production and mastering\"\necho \"- Audio cleanup and restoration\"\necho \"- Converting between audio formats\"\n",
      "uninstall_script": "echo \"Uninstalling Audacity...\"\nbrew uninstall --cask audacity\n"
    },
    "transmission": {
      "id": "transmission",
      "name": "Transmission",
      "description": "Fast, easy, and free BitTorrent client",
      "type": "brew_cask",
      "category": "Media",
      "selected_by_default": false,
      "requires_license": false,
      "tags": [
        "torrent",
        "p2p",
        "download",
        "bittorrent",
        "file-sharing"
      ],
      "url": "https://transmissionbt.com/",
      "notes": "- Lightweight and fast BitTorrent client\n- Clean and intuitive user interface\n- Low resource usage and high performance\n- Built-in web interface for remote management\n- Support for magnet links and torrent files\n- Open source and completely free\n",
      "dependencies": [],
      "install_script": "echo \"Installing Transmission...\"\nbrew install --cask transmission\n",
      "validate_script": "brew list --cask | grep -q \"transmission\" || ls /Applications/ | grep -q \"Transmission.app\"\n",
      "configure_script": "echo \"Transmission configuration complete\"\necho \"Launch Transmission to start downloading torrents\"\necho \"\"\necho \"Key features:\"\necho \"- Fast and efficient BitTorrent downloading\"\necho \"- Low CPU and memory usage\"\necho \"- Built-in web interface for remote access\"\necho \"- Support for magnet links and .torrent files\"\necho \"- Bandwidth management and scheduling\"\necho \"- Encryption support for privacy\"\necho \"\"\necho \"Getting started:\"\necho \"1. Launch Transmission application\"\necho \"2. Configure download and upload preferences\"\necho \"3. Set download location and bandwidth limits\"\necho \"4. Add torrents via drag-and-drop or File menu\"\necho \"5. Monitor downloads in the main interface\"\necho \"\"\necho \"Configuration tips:\"\necho \"- Set reasonable upload/download speed limits\"\necho \"- Choose a secure download directory\"\necho \"- Enable encryption for privacy\"\necho \"- Consider using a VPN for additional security\"\necho \"- Configure port forwarding for better performance\"\necho \"\"\necho \"Remote access:\"\necho \"- Enable web interface in Preferences\"\necho \"- Access via http://localhost:9091 when enabled\"\necho \"- Control downloads from any web browser\"\necho \"\"\necho \"Note: Use BitTorrent responsibly and legally\"\necho \"Only download content you have rights to access\"\n",
      "uninstall_script": "echo \"Uninstalling Transmission...\"\nbrew uninstall --cask transmission\n"
    }
  }
}